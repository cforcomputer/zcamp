var app=function(){"use strict";function t(){}function e(t){return t()}function n(){return Object.create(null)}function i(t){t.forEach(e)}function r(t){return"function"==typeof t}function a(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function s(e,...n){if(null==e){for(const t of n)t(void 0);return t}const i=e.subscribe(...n);return i.unsubscribe?()=>i.unsubscribe():i}function o(t){let e;return s(t,(t=>e=t))(),e}function l(t,e,n){t.$$.on_destroy.push(s(e,n))}const c="undefined"!=typeof window?window:"undefined"!=typeof globalThis?globalThis:global;function h(t,e){t.appendChild(e)}function u(t,e,n){t.insertBefore(e,n||null)}function d(t){t.parentNode&&t.parentNode.removeChild(t)}function p(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}function f(t){return document.createElement(t)}function m(t){return document.createTextNode(t)}function g(){return m(" ")}function _(){return m("")}function v(t,e,n,i){return t.addEventListener(e,n,i),()=>t.removeEventListener(e,n,i)}function y(t,e,n){null==n?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function x(t){return""===t?null:+t}function b(t,e){e=""+e,t.data!==e&&(t.data=e)}function M(t,e){t.value=null==e?"":e}function S(t,e,n,i){null==n?t.style.removeProperty(e):t.style.setProperty(e,n,i?"important":"")}function E(t,e,n){for(let n=0;n<t.options.length;n+=1){const i=t.options[n];if(i.__value===e)return void(i.selected=!0)}n&&void 0===e||(t.selectedIndex=-1)}function T(t){const e=t.querySelector(":checked");return e&&e.__value}function w(t,e,n){t.classList.toggle(e,!!n)}let A;function C(t){A=t}function R(){if(!A)throw new Error("Function called outside component initialization");return A}function P(t){R().$$.on_mount.push(t)}function L(t){R().$$.on_destroy.push(t)}function D(){const t=R();return(e,n,{cancelable:i=!1}={})=>{const r=t.$$.callbacks[e];if(r){const a=function(t,e,{bubbles:n=!1,cancelable:i=!1}={}){return new CustomEvent(t,{detail:e,bubbles:n,cancelable:i})}(e,n,{cancelable:i});return r.slice().forEach((e=>{e.call(t,a)})),!a.defaultPrevented}return!0}}const U=[],I=[];let N=[];const k=[],O=Promise.resolve();let F=!1;function B(t){N.push(t)}const z=new Set;let H=0;function V(){if(0!==H)return;const t=A;do{try{for(;H<U.length;){const t=U[H];H++,C(t),G(t.$$)}}catch(t){throw U.length=0,H=0,t}for(C(null),U.length=0,H=0;I.length;)I.pop()();for(let t=0;t<N.length;t+=1){const e=N[t];z.has(e)||(z.add(e),e())}N.length=0}while(U.length);for(;k.length;)k.pop()();F=!1,z.clear(),C(t)}function G(t){if(null!==t.fragment){t.update(),i(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(B)}}const W=new Set;let j;function X(){j={r:0,c:[],p:j}}function q(){j.r||i(j.c),j=j.p}function $(t,e){t&&t.i&&(W.delete(t),t.i(e))}function Y(t,e,n,i){if(t&&t.o){if(W.has(t))return;W.add(t),j.c.push((()=>{W.delete(t),i&&(n&&t.d(1),i())})),t.o(e)}else i&&i()}function K(t){return void 0!==t?.length?t:Array.from(t)}function Z(t,e){t.d(1),e.delete(t.key)}function J(t,e,n,r,a,s,o,l,c,h,u,d){let p=t.length,f=s.length,m=p;const g={};for(;m--;)g[t[m].key]=m;const _=[],v=new Map,y=new Map,x=[];for(m=f;m--;){const t=d(a,s,m),i=n(t);let l=o.get(i);l?r&&x.push((()=>l.p(t,e))):(l=h(i,t),l.c()),v.set(i,_[m]=l),i in g&&y.set(i,Math.abs(m-g[i]))}const b=new Set,M=new Set;function S(t){$(t,1),t.m(l,u),o.set(t.key,t),u=t.first,f--}for(;p&&f;){const e=_[f-1],n=t[p-1],i=e.key,r=n.key;e===n?(u=e.first,p--,f--):v.has(r)?!o.has(i)||b.has(i)?S(e):M.has(r)?p--:y.get(i)>y.get(r)?(M.add(i),S(e)):(b.add(r),p--):(c(n,o),p--)}for(;p--;){const e=t[p];v.has(e.key)||c(e,o)}for(;f;)S(_[f-1]);return i(x),_}function Q(t){t&&t.c()}function tt(t,n,a){const{fragment:s,after_update:o}=t.$$;s&&s.m(n,a),B((()=>{const n=t.$$.on_mount.map(e).filter(r);t.$$.on_destroy?t.$$.on_destroy.push(...n):i(n),t.$$.on_mount=[]})),o.forEach(B)}function et(t,e){const n=t.$$;null!==n.fragment&&(!function(t){const e=[],n=[];N.forEach((i=>-1===t.indexOf(i)?e.push(i):n.push(i))),n.forEach((t=>t())),N=e}(n.after_update),i(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function nt(t,e){-1===t.$$.dirty[0]&&(U.push(t),F||(F=!0,O.then(V)),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function it(e,r,a,s,o,l,c=null,h=[-1]){const u=A;C(e);const p=e.$$={fragment:null,ctx:[],props:l,update:t,not_equal:o,bound:n(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(r.context||(u?u.$$.context:[])),callbacks:n(),dirty:h,skip_bound:!1,root:r.target||u.$$.root};c&&c(p.root);let f=!1;if(p.ctx=a?a(e,r.props||{},((t,n,...i)=>{const r=i.length?i[0]:n;return p.ctx&&o(p.ctx[t],p.ctx[t]=r)&&(!p.skip_bound&&p.bound[t]&&p.bound[t](r),f&&nt(e,t)),n})):[],p.update(),f=!0,i(p.before_update),p.fragment=!!s&&s(p.ctx),r.target){if(r.hydrate){const t=function(t){return Array.from(t.childNodes)}(r.target);p.fragment&&p.fragment.l(t),t.forEach(d)}else p.fragment&&p.fragment.c();r.intro&&$(e.$$.fragment),tt(e,r.target,r.anchor),V()}C(u)}class rt{$$=void 0;$$set=void 0;$destroy(){et(this,1),this.$destroy=t}$on(e,n){if(!r(n))return t;const i=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return i.push(n),()=>{const t=i.indexOf(n);-1!==t&&i.splice(t,1)}}$set(t){var e;this.$$set&&(e=t,0!==Object.keys(e).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}"undefined"!=typeof window&&(window.__svelte||(window.__svelte={v:new Set})).v.add("4");const at=Object.create(null);at.open="0",at.close="1",at.ping="2",at.pong="3",at.message="4",at.upgrade="5",at.noop="6";const st=Object.create(null);Object.keys(at).forEach((t=>{st[at[t]]=t}));const ot={type:"error",data:"parser error"},lt="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),ct="function"==typeof ArrayBuffer,ht=t=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):t&&t.buffer instanceof ArrayBuffer,ut=({type:t,data:e},n,i)=>lt&&e instanceof Blob?n?i(e):dt(e,i):ct&&(e instanceof ArrayBuffer||ht(e))?n?i(e):dt(new Blob([e]),i):i(at[t]+(e||"")),dt=(t,e)=>{const n=new FileReader;return n.onload=function(){const t=n.result.split(",")[1];e("b"+(t||""))},n.readAsDataURL(t)};function pt(t){return t instanceof Uint8Array?t:t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}let ft;const mt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",gt="undefined"==typeof Uint8Array?[]:new Uint8Array(256);for(let t=0;t<64;t++)gt[mt.charCodeAt(t)]=t;const _t="function"==typeof ArrayBuffer,vt=(t,e)=>{if("string"!=typeof t)return{type:"message",data:xt(t,e)};const n=t.charAt(0);if("b"===n)return{type:"message",data:yt(t.substring(1),e)};return st[n]?t.length>1?{type:st[n],data:t.substring(1)}:{type:st[n]}:ot},yt=(t,e)=>{if(_t){const n=(t=>{let e,n,i,r,a,s=.75*t.length,o=t.length,l=0;"="===t[t.length-1]&&(s--,"="===t[t.length-2]&&s--);const c=new ArrayBuffer(s),h=new Uint8Array(c);for(e=0;e<o;e+=4)n=gt[t.charCodeAt(e)],i=gt[t.charCodeAt(e+1)],r=gt[t.charCodeAt(e+2)],a=gt[t.charCodeAt(e+3)],h[l++]=n<<2|i>>4,h[l++]=(15&i)<<4|r>>2,h[l++]=(3&r)<<6|63&a;return c})(t);return xt(n,e)}return{base64:!0,data:t}},xt=(t,e)=>"blob"===e?t instanceof Blob?t:new Blob([t]):t instanceof ArrayBuffer?t:t.buffer,bt=String.fromCharCode(30);function Mt(){return new TransformStream({transform(t,e){!function(t,e){lt&&t.data instanceof Blob?t.data.arrayBuffer().then(pt).then(e):ct&&(t.data instanceof ArrayBuffer||ht(t.data))?e(pt(t.data)):ut(t,!1,(t=>{ft||(ft=new TextEncoder),e(ft.encode(t))}))}(t,(n=>{const i=n.length;let r;if(i<126)r=new Uint8Array(1),new DataView(r.buffer).setUint8(0,i);else if(i<65536){r=new Uint8Array(3);const t=new DataView(r.buffer);t.setUint8(0,126),t.setUint16(1,i)}else{r=new Uint8Array(9);const t=new DataView(r.buffer);t.setUint8(0,127),t.setBigUint64(1,BigInt(i))}t.data&&"string"!=typeof t.data&&(r[0]|=128),e.enqueue(r),e.enqueue(n)}))}})}let St;function Et(t){return t.reduce(((t,e)=>t+e.length),0)}function Tt(t,e){if(t[0].length===e)return t.shift();const n=new Uint8Array(e);let i=0;for(let r=0;r<e;r++)n[r]=t[0][i++],i===t[0].length&&(t.shift(),i=0);return t.length&&i<t[0].length&&(t[0]=t[0].slice(i)),n}function wt(t){if(t)return function(t){for(var e in wt.prototype)t[e]=wt.prototype[e];return t}(t)}wt.prototype.on=wt.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks["$"+t]=this._callbacks["$"+t]||[]).push(e),this},wt.prototype.once=function(t,e){function n(){this.off(t,n),e.apply(this,arguments)}return n.fn=e,this.on(t,n),this},wt.prototype.off=wt.prototype.removeListener=wt.prototype.removeAllListeners=wt.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,i=this._callbacks["$"+t];if(!i)return this;if(1==arguments.length)return delete this._callbacks["$"+t],this;for(var r=0;r<i.length;r++)if((n=i[r])===e||n.fn===e){i.splice(r,1);break}return 0===i.length&&delete this._callbacks["$"+t],this},wt.prototype.emit=function(t){this._callbacks=this._callbacks||{};for(var e=new Array(arguments.length-1),n=this._callbacks["$"+t],i=1;i<arguments.length;i++)e[i-1]=arguments[i];if(n){i=0;for(var r=(n=n.slice(0)).length;i<r;++i)n[i].apply(this,e)}return this},wt.prototype.emitReserved=wt.prototype.emit,wt.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks["$"+t]||[]},wt.prototype.hasListeners=function(t){return!!this.listeners(t).length};const At="function"==typeof Promise&&"function"==typeof Promise.resolve?t=>Promise.resolve().then(t):(t,e)=>e(t,0),Ct="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")();function Rt(t,...e){return e.reduce(((e,n)=>(t.hasOwnProperty(n)&&(e[n]=t[n]),e)),{})}const Pt=Ct.setTimeout,Lt=Ct.clearTimeout;function Dt(t,e){e.useNativeTimers?(t.setTimeoutFn=Pt.bind(Ct),t.clearTimeoutFn=Lt.bind(Ct)):(t.setTimeoutFn=Ct.setTimeout.bind(Ct),t.clearTimeoutFn=Ct.clearTimeout.bind(Ct))}function Ut(){return Date.now().toString(36).substring(3)+Math.random().toString(36).substring(2,5)}class It extends Error{constructor(t,e,n){super(t),this.description=e,this.context=n,this.type="TransportError"}}class Nt extends wt{constructor(t){super(),this.writable=!1,Dt(this,t),this.opts=t,this.query=t.query,this.socket=t.socket,this.supportsBinary=!t.forceBase64}onError(t,e,n){return super.emitReserved("error",new It(t,e,n)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(t){"open"===this.readyState&&this.write(t)}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(t){const e=vt(t,this.socket.binaryType);this.onPacket(e)}onPacket(t){super.emitReserved("packet",t)}onClose(t){this.readyState="closed",super.emitReserved("close",t)}pause(t){}createUri(t,e={}){return t+"://"+this._hostname()+this._port()+this.opts.path+this._query(e)}_hostname(){const t=this.opts.hostname;return-1===t.indexOf(":")?t:"["+t+"]"}_port(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}_query(t){const e=function(t){let e="";for(let n in t)t.hasOwnProperty(n)&&(e.length&&(e+="&"),e+=encodeURIComponent(n)+"="+encodeURIComponent(t[n]));return e}(t);return e.length?"?"+e:""}}class kt extends Nt{constructor(){super(...arguments),this._polling=!1}get name(){return"polling"}doOpen(){this._poll()}pause(t){this.readyState="pausing";const e=()=>{this.readyState="paused",t()};if(this._polling||!this.writable){let t=0;this._polling&&(t++,this.once("pollComplete",(function(){--t||e()}))),this.writable||(t++,this.once("drain",(function(){--t||e()})))}else e()}_poll(){this._polling=!0,this.doPoll(),this.emitReserved("poll")}onData(t){((t,e)=>{const n=t.split(bt),i=[];for(let t=0;t<n.length;t++){const r=vt(n[t],e);if(i.push(r),"error"===r.type)break}return i})(t,this.socket.binaryType).forEach((t=>{if("opening"===this.readyState&&"open"===t.type&&this.onOpen(),"close"===t.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(t)})),"closed"!==this.readyState&&(this._polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState&&this._poll())}doClose(){const t=()=>{this.write([{type:"close"}])};"open"===this.readyState?t():this.once("open",t)}write(t){this.writable=!1,((t,e)=>{const n=t.length,i=new Array(n);let r=0;t.forEach(((t,a)=>{ut(t,!1,(t=>{i[a]=t,++r===n&&e(i.join(bt))}))}))})(t,(t=>{this.doWrite(t,(()=>{this.writable=!0,this.emitReserved("drain")}))}))}uri(){const t=this.opts.secure?"https":"http",e=this.query||{};return!1!==this.opts.timestampRequests&&(e[this.opts.timestampParam]=Ut()),this.supportsBinary||e.sid||(e.b64=1),this.createUri(t,e)}}let Ot=!1;try{Ot="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(t){}const Ft=Ot;function Bt(){}class zt extends kt{constructor(t){if(super(t),"undefined"!=typeof location){const e="https:"===location.protocol;let n=location.port;n||(n=e?"443":"80"),this.xd="undefined"!=typeof location&&t.hostname!==location.hostname||n!==t.port}}doWrite(t,e){const n=this.request({method:"POST",data:t});n.on("success",e),n.on("error",((t,e)=>{this.onError("xhr post error",t,e)}))}doPoll(){const t=this.request();t.on("data",this.onData.bind(this)),t.on("error",((t,e)=>{this.onError("xhr poll error",t,e)})),this.pollXhr=t}}class Ht extends wt{constructor(t,e,n){super(),this.createRequest=t,Dt(this,n),this._opts=n,this._method=n.method||"GET",this._uri=e,this._data=void 0!==n.data?n.data:null,this._create()}_create(){var t;const e=Rt(this._opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");e.xdomain=!!this._opts.xd;const n=this._xhr=this.createRequest(e);try{n.open(this._method,this._uri,!0);try{if(this._opts.extraHeaders){n.setDisableHeaderCheck&&n.setDisableHeaderCheck(!0);for(let t in this._opts.extraHeaders)this._opts.extraHeaders.hasOwnProperty(t)&&n.setRequestHeader(t,this._opts.extraHeaders[t])}}catch(t){}if("POST"===this._method)try{n.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(t){}try{n.setRequestHeader("Accept","*/*")}catch(t){}null===(t=this._opts.cookieJar)||void 0===t||t.addCookies(n),"withCredentials"in n&&(n.withCredentials=this._opts.withCredentials),this._opts.requestTimeout&&(n.timeout=this._opts.requestTimeout),n.onreadystatechange=()=>{var t;3===n.readyState&&(null===(t=this._opts.cookieJar)||void 0===t||t.parseCookies(n.getResponseHeader("set-cookie"))),4===n.readyState&&(200===n.status||1223===n.status?this._onLoad():this.setTimeoutFn((()=>{this._onError("number"==typeof n.status?n.status:0)}),0))},n.send(this._data)}catch(t){return void this.setTimeoutFn((()=>{this._onError(t)}),0)}"undefined"!=typeof document&&(this._index=Ht.requestsCount++,Ht.requests[this._index]=this)}_onError(t){this.emitReserved("error",t,this._xhr),this._cleanup(!0)}_cleanup(t){if(void 0!==this._xhr&&null!==this._xhr){if(this._xhr.onreadystatechange=Bt,t)try{this._xhr.abort()}catch(t){}"undefined"!=typeof document&&delete Ht.requests[this._index],this._xhr=null}}_onLoad(){const t=this._xhr.responseText;null!==t&&(this.emitReserved("data",t),this.emitReserved("success"),this._cleanup())}abort(){this._cleanup()}}if(Ht.requestsCount=0,Ht.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",Vt);else if("function"==typeof addEventListener){addEventListener("onpagehide"in Ct?"pagehide":"unload",Vt,!1)}function Vt(){for(let t in Ht.requests)Ht.requests.hasOwnProperty(t)&&Ht.requests[t].abort()}const Gt=function(){const t=Wt({xdomain:!1});return t&&null!==t.responseType}();function Wt(t){const e=t.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!e||Ft))return new XMLHttpRequest}catch(t){}if(!e)try{return new(Ct[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(t){}}const jt="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();class Xt extends Nt{get name(){return"websocket"}doOpen(){const t=this.uri(),e=this.opts.protocols,n=jt?{}:Rt(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(n.headers=this.opts.extraHeaders);try{this.ws=this.createSocket(t,e,n)}catch(t){return this.emitReserved("error",t)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=t=>this.onClose({description:"websocket connection closed",context:t}),this.ws.onmessage=t=>this.onData(t.data),this.ws.onerror=t=>this.onError("websocket error",t)}write(t){this.writable=!1;for(let e=0;e<t.length;e++){const n=t[e],i=e===t.length-1;ut(n,this.supportsBinary,(t=>{try{this.doWrite(n,t)}catch(t){}i&&At((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){void 0!==this.ws&&(this.ws.onerror=()=>{},this.ws.close(),this.ws=null)}uri(){const t=this.opts.secure?"wss":"ws",e=this.query||{};return this.opts.timestampRequests&&(e[this.opts.timestampParam]=Ut()),this.supportsBinary||(e.b64=1),this.createUri(t,e)}}const qt=Ct.WebSocket||Ct.MozWebSocket;const $t={websocket:class extends Xt{createSocket(t,e,n){return jt?new qt(t,e,n):e?new qt(t,e):new qt(t)}doWrite(t,e){this.ws.send(e)}},webtransport:class extends Nt{get name(){return"webtransport"}doOpen(){try{this._transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name])}catch(t){return this.emitReserved("error",t)}this._transport.closed.then((()=>{this.onClose()})).catch((t=>{this.onError("webtransport error",t)})),this._transport.ready.then((()=>{this._transport.createBidirectionalStream().then((t=>{const e=function(t,e){St||(St=new TextDecoder);const n=[];let i=0,r=-1,a=!1;return new TransformStream({transform(s,o){for(n.push(s);;){if(0===i){if(Et(n)<1)break;const t=Tt(n,1);a=!(128&~t[0]),r=127&t[0],i=r<126?3:126===r?1:2}else if(1===i){if(Et(n)<2)break;const t=Tt(n,2);r=new DataView(t.buffer,t.byteOffset,t.length).getUint16(0),i=3}else if(2===i){if(Et(n)<8)break;const t=Tt(n,8),e=new DataView(t.buffer,t.byteOffset,t.length),a=e.getUint32(0);if(a>Math.pow(2,21)-1){o.enqueue(ot);break}r=a*Math.pow(2,32)+e.getUint32(4),i=3}else{if(Et(n)<r)break;const t=Tt(n,r);o.enqueue(vt(a?t:St.decode(t),e)),i=0}if(0===r||r>t){o.enqueue(ot);break}}}})}(Number.MAX_SAFE_INTEGER,this.socket.binaryType),n=t.readable.pipeThrough(e).getReader(),i=Mt();i.readable.pipeTo(t.writable),this._writer=i.writable.getWriter();const r=()=>{n.read().then((({done:t,value:e})=>{t||(this.onPacket(e),r())})).catch((t=>{}))};r();const a={type:"open"};this.query.sid&&(a.data=`{"sid":"${this.query.sid}"}`),this._writer.write(a).then((()=>this.onOpen()))}))}))}write(t){this.writable=!1;for(let e=0;e<t.length;e++){const n=t[e],i=e===t.length-1;this._writer.write(n).then((()=>{i&&At((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){var t;null===(t=this._transport)||void 0===t||t.close()}},polling:class extends zt{constructor(t){super(t);const e=t&&t.forceBase64;this.supportsBinary=Gt&&!e}request(t={}){return Object.assign(t,{xd:this.xd},this.opts),new Ht(Wt,this.uri(),t)}}},Yt=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,Kt=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function Zt(t){if(t.length>8e3)throw"URI too long";const e=t,n=t.indexOf("["),i=t.indexOf("]");-1!=n&&-1!=i&&(t=t.substring(0,n)+t.substring(n,i).replace(/:/g,";")+t.substring(i,t.length));let r=Yt.exec(t||""),a={},s=14;for(;s--;)a[Kt[s]]=r[s]||"";return-1!=n&&-1!=i&&(a.source=e,a.host=a.host.substring(1,a.host.length-1).replace(/;/g,":"),a.authority=a.authority.replace("[","").replace("]","").replace(/;/g,":"),a.ipv6uri=!0),a.pathNames=function(t,e){const n=/\/{2,9}/g,i=e.replace(n,"/").split("/");"/"!=e.slice(0,1)&&0!==e.length||i.splice(0,1);"/"==e.slice(-1)&&i.splice(i.length-1,1);return i}(0,a.path),a.queryKey=function(t,e){const n={};return e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(t,e,i){e&&(n[e]=i)})),n}(0,a.query),a}const Jt="function"==typeof addEventListener&&"function"==typeof removeEventListener,Qt=[];Jt&&addEventListener("offline",(()=>{Qt.forEach((t=>t()))}),!1);class te extends wt{constructor(t,e){if(super(),this.binaryType="arraybuffer",this.writeBuffer=[],this._prevBufferLen=0,this._pingInterval=-1,this._pingTimeout=-1,this._maxPayload=-1,this._pingTimeoutTime=1/0,t&&"object"==typeof t&&(e=t,t=null),t){const n=Zt(t);e.hostname=n.host,e.secure="https"===n.protocol||"wss"===n.protocol,e.port=n.port,n.query&&(e.query=n.query)}else e.host&&(e.hostname=Zt(e.host).host);Dt(this,e),this.secure=null!=e.secure?e.secure:"undefined"!=typeof location&&"https:"===location.protocol,e.hostname&&!e.port&&(e.port=this.secure?"443":"80"),this.hostname=e.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=e.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=[],this._transportsByName={},e.transports.forEach((t=>{const e=t.prototype.name;this.transports.push(e),this._transportsByName[e]=t})),this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},e),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),"string"==typeof this.opts.query&&(this.opts.query=function(t){let e={},n=t.split("&");for(let t=0,i=n.length;t<i;t++){let i=n[t].split("=");e[decodeURIComponent(i[0])]=decodeURIComponent(i[1])}return e}(this.opts.query)),Jt&&(this.opts.closeOnBeforeunload&&(this._beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this._beforeunloadEventListener,!1)),"localhost"!==this.hostname&&(this._offlineEventListener=()=>{this._onClose("transport close",{description:"network connection lost"})},Qt.push(this._offlineEventListener))),this.opts.withCredentials&&(this._cookieJar=void 0),this._open()}createTransport(t){const e=Object.assign({},this.opts.query);e.EIO=4,e.transport=t,this.id&&(e.sid=this.id);const n=Object.assign({},this.opts,{query:e,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[t]);return new this._transportsByName[t](n)}_open(){if(0===this.transports.length)return void this.setTimeoutFn((()=>{this.emitReserved("error","No transports available")}),0);const t=this.opts.rememberUpgrade&&te.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket")?"websocket":this.transports[0];this.readyState="opening";const e=this.createTransport(t);e.open(),this.setTransport(e)}setTransport(t){this.transport&&this.transport.removeAllListeners(),this.transport=t,t.on("drain",this._onDrain.bind(this)).on("packet",this._onPacket.bind(this)).on("error",this._onError.bind(this)).on("close",(t=>this._onClose("transport close",t)))}onOpen(){this.readyState="open",te.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush()}_onPacket(t){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(this.emitReserved("packet",t),this.emitReserved("heartbeat"),t.type){case"open":this.onHandshake(JSON.parse(t.data));break;case"ping":this._sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong"),this._resetPingTimeout();break;case"error":const e=new Error("server error");e.code=t.data,this._onError(e);break;case"message":this.emitReserved("data",t.data),this.emitReserved("message",t.data)}}onHandshake(t){this.emitReserved("handshake",t),this.id=t.sid,this.transport.query.sid=t.sid,this._pingInterval=t.pingInterval,this._pingTimeout=t.pingTimeout,this._maxPayload=t.maxPayload,this.onOpen(),"closed"!==this.readyState&&this._resetPingTimeout()}_resetPingTimeout(){this.clearTimeoutFn(this._pingTimeoutTimer);const t=this._pingInterval+this._pingTimeout;this._pingTimeoutTime=Date.now()+t,this._pingTimeoutTimer=this.setTimeoutFn((()=>{this._onClose("ping timeout")}),t),this.opts.autoUnref&&this._pingTimeoutTimer.unref()}_onDrain(){this.writeBuffer.splice(0,this._prevBufferLen),this._prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const t=this._getWritablePackets();this.transport.send(t),this._prevBufferLen=t.length,this.emitReserved("flush")}}_getWritablePackets(){if(!(this._maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let t=1;for(let n=0;n<this.writeBuffer.length;n++){const i=this.writeBuffer[n].data;if(i&&(t+="string"==typeof(e=i)?function(t){let e=0,n=0;for(let i=0,r=t.length;i<r;i++)e=t.charCodeAt(i),e<128?n+=1:e<2048?n+=2:e<55296||e>=57344?n+=3:(i++,n+=4);return n}(e):Math.ceil(1.33*(e.byteLength||e.size))),n>0&&t>this._maxPayload)return this.writeBuffer.slice(0,n);t+=2}var e;return this.writeBuffer}_hasPingExpired(){if(!this._pingTimeoutTime)return!0;const t=Date.now()>this._pingTimeoutTime;return t&&(this._pingTimeoutTime=0,At((()=>{this._onClose("ping timeout")}),this.setTimeoutFn)),t}write(t,e,n){return this._sendPacket("message",t,e,n),this}send(t,e,n){return this._sendPacket("message",t,e,n),this}_sendPacket(t,e,n,i){if("function"==typeof e&&(i=e,e=void 0),"function"==typeof n&&(i=n,n=null),"closing"===this.readyState||"closed"===this.readyState)return;(n=n||{}).compress=!1!==n.compress;const r={type:t,data:e,options:n};this.emitReserved("packetCreate",r),this.writeBuffer.push(r),i&&this.once("flush",i),this.flush()}close(){const t=()=>{this._onClose("forced close"),this.transport.close()},e=()=>{this.off("upgrade",e),this.off("upgradeError",e),t()},n=()=>{this.once("upgrade",e),this.once("upgradeError",e)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",(()=>{this.upgrading?n():t()})):this.upgrading?n():t()),this}_onError(t){if(te.priorWebsocketSuccess=!1,this.opts.tryAllTransports&&this.transports.length>1&&"opening"===this.readyState)return this.transports.shift(),this._open();this.emitReserved("error",t),this._onClose("transport error",t)}_onClose(t,e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){if(this.clearTimeoutFn(this._pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),Jt&&(this._beforeunloadEventListener&&removeEventListener("beforeunload",this._beforeunloadEventListener,!1),this._offlineEventListener)){const t=Qt.indexOf(this._offlineEventListener);-1!==t&&Qt.splice(t,1)}this.readyState="closed",this.id=null,this.emitReserved("close",t,e),this.writeBuffer=[],this._prevBufferLen=0}}}te.protocol=4;class ee extends te{constructor(){super(...arguments),this._upgrades=[]}onOpen(){if(super.onOpen(),"open"===this.readyState&&this.opts.upgrade)for(let t=0;t<this._upgrades.length;t++)this._probe(this._upgrades[t])}_probe(t){let e=this.createTransport(t),n=!1;te.priorWebsocketSuccess=!1;const i=()=>{n||(e.send([{type:"ping",data:"probe"}]),e.once("packet",(t=>{if(!n)if("pong"===t.type&&"probe"===t.data){if(this.upgrading=!0,this.emitReserved("upgrading",e),!e)return;te.priorWebsocketSuccess="websocket"===e.name,this.transport.pause((()=>{n||"closed"!==this.readyState&&(c(),this.setTransport(e),e.send([{type:"upgrade"}]),this.emitReserved("upgrade",e),e=null,this.upgrading=!1,this.flush())}))}else{const t=new Error("probe error");t.transport=e.name,this.emitReserved("upgradeError",t)}})))};function r(){n||(n=!0,c(),e.close(),e=null)}const a=t=>{const n=new Error("probe error: "+t);n.transport=e.name,r(),this.emitReserved("upgradeError",n)};function s(){a("transport closed")}function o(){a("socket closed")}function l(t){e&&t.name!==e.name&&r()}const c=()=>{e.removeListener("open",i),e.removeListener("error",a),e.removeListener("close",s),this.off("close",o),this.off("upgrading",l)};e.once("open",i),e.once("error",a),e.once("close",s),this.once("close",o),this.once("upgrading",l),-1!==this._upgrades.indexOf("webtransport")&&"webtransport"!==t?this.setTimeoutFn((()=>{n||e.open()}),200):e.open()}onHandshake(t){this._upgrades=this._filterUpgrades(t.upgrades),super.onHandshake(t)}_filterUpgrades(t){const e=[];for(let n=0;n<t.length;n++)~this.transports.indexOf(t[n])&&e.push(t[n]);return e}}class ne extends ee{constructor(t,e={}){const n="object"==typeof t?t:e;(!n.transports||n.transports&&"string"==typeof n.transports[0])&&(n.transports=(n.transports||["polling","websocket","webtransport"]).map((t=>$t[t])).filter((t=>!!t))),super(t,n)}}const ie="function"==typeof ArrayBuffer,re=Object.prototype.toString,ae="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===re.call(Blob),se="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===re.call(File);function oe(t){return ie&&(t instanceof ArrayBuffer||(t=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):t.buffer instanceof ArrayBuffer)(t))||ae&&t instanceof Blob||se&&t instanceof File}function le(t,e){if(!t||"object"!=typeof t)return!1;if(Array.isArray(t)){for(let e=0,n=t.length;e<n;e++)if(le(t[e]))return!0;return!1}if(oe(t))return!0;if(t.toJSON&&"function"==typeof t.toJSON&&1===arguments.length)return le(t.toJSON(),!0);for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&le(t[e]))return!0;return!1}function ce(t){const e=[],n=t.data,i=t;return i.data=he(n,e),i.attachments=e.length,{packet:i,buffers:e}}function he(t,e){if(!t)return t;if(oe(t)){const n={_placeholder:!0,num:e.length};return e.push(t),n}if(Array.isArray(t)){const n=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=he(t[i],e);return n}if("object"==typeof t&&!(t instanceof Date)){const n={};for(const i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=he(t[i],e));return n}return t}function ue(t,e){return t.data=de(t.data,e),delete t.attachments,t}function de(t,e){if(!t)return t;if(t&&!0===t._placeholder){if("number"==typeof t.num&&t.num>=0&&t.num<e.length)return e[t.num];throw new Error("illegal attachments")}if(Array.isArray(t))for(let n=0;n<t.length;n++)t[n]=de(t[n],e);else if("object"==typeof t)for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(t[n]=de(t[n],e));return t}const pe=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"];var fe;!function(t){t[t.CONNECT=0]="CONNECT",t[t.DISCONNECT=1]="DISCONNECT",t[t.EVENT=2]="EVENT",t[t.ACK=3]="ACK",t[t.CONNECT_ERROR=4]="CONNECT_ERROR",t[t.BINARY_EVENT=5]="BINARY_EVENT",t[t.BINARY_ACK=6]="BINARY_ACK"}(fe||(fe={}));function me(t){return"[object Object]"===Object.prototype.toString.call(t)}class ge extends wt{constructor(t){super(),this.reviver=t}add(t){let e;if("string"==typeof t){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");e=this.decodeString(t);const n=e.type===fe.BINARY_EVENT;n||e.type===fe.BINARY_ACK?(e.type=n?fe.EVENT:fe.ACK,this.reconstructor=new _e(e),0===e.attachments&&super.emitReserved("decoded",e)):super.emitReserved("decoded",e)}else{if(!oe(t)&&!t.base64)throw new Error("Unknown type: "+t);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");e=this.reconstructor.takeBinaryData(t),e&&(this.reconstructor=null,super.emitReserved("decoded",e))}}decodeString(t){let e=0;const n={type:Number(t.charAt(0))};if(void 0===fe[n.type])throw new Error("unknown packet type "+n.type);if(n.type===fe.BINARY_EVENT||n.type===fe.BINARY_ACK){const i=e+1;for(;"-"!==t.charAt(++e)&&e!=t.length;);const r=t.substring(i,e);if(r!=Number(r)||"-"!==t.charAt(e))throw new Error("Illegal attachments");n.attachments=Number(r)}if("/"===t.charAt(e+1)){const i=e+1;for(;++e;){if(","===t.charAt(e))break;if(e===t.length)break}n.nsp=t.substring(i,e)}else n.nsp="/";const i=t.charAt(e+1);if(""!==i&&Number(i)==i){const i=e+1;for(;++e;){const n=t.charAt(e);if(null==n||Number(n)!=n){--e;break}if(e===t.length)break}n.id=Number(t.substring(i,e+1))}if(t.charAt(++e)){const i=this.tryParse(t.substr(e));if(!ge.isPayloadValid(n.type,i))throw new Error("invalid payload");n.data=i}return n}tryParse(t){try{return JSON.parse(t,this.reviver)}catch(t){return!1}}static isPayloadValid(t,e){switch(t){case fe.CONNECT:return me(e);case fe.DISCONNECT:return void 0===e;case fe.CONNECT_ERROR:return"string"==typeof e||me(e);case fe.EVENT:case fe.BINARY_EVENT:return Array.isArray(e)&&("number"==typeof e[0]||"string"==typeof e[0]&&-1===pe.indexOf(e[0]));case fe.ACK:case fe.BINARY_ACK:return Array.isArray(e)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}class _e{constructor(t){this.packet=t,this.buffers=[],this.reconPack=t}takeBinaryData(t){if(this.buffers.push(t),this.buffers.length===this.reconPack.attachments){const t=ue(this.reconPack,this.buffers);return this.finishedReconstruction(),t}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}var ve=Object.freeze({__proto__:null,protocol:5,get PacketType(){return fe},Encoder:class{constructor(t){this.replacer=t}encode(t){return t.type!==fe.EVENT&&t.type!==fe.ACK||!le(t)?[this.encodeAsString(t)]:this.encodeAsBinary({type:t.type===fe.EVENT?fe.BINARY_EVENT:fe.BINARY_ACK,nsp:t.nsp,data:t.data,id:t.id})}encodeAsString(t){let e=""+t.type;return t.type!==fe.BINARY_EVENT&&t.type!==fe.BINARY_ACK||(e+=t.attachments+"-"),t.nsp&&"/"!==t.nsp&&(e+=t.nsp+","),null!=t.id&&(e+=t.id),null!=t.data&&(e+=JSON.stringify(t.data,this.replacer)),e}encodeAsBinary(t){const e=ce(t),n=this.encodeAsString(e.packet),i=e.buffers;return i.unshift(n),i}},Decoder:ge});function ye(t,e,n){return t.on(e,n),function(){t.off(e,n)}}const xe=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class be extends wt{constructor(t,e,n){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=t,this.nsp=e,n&&n.auth&&(this.auth=n.auth),this._opts=Object.assign({},n),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const t=this.io;this.subs=[ye(t,"open",this.onopen.bind(this)),ye(t,"packet",this.onpacket.bind(this)),ye(t,"error",this.onerror.bind(this)),ye(t,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...t){return t.unshift("message"),this.emit.apply(this,t),this}emit(t,...e){var n,i,r;if(xe.hasOwnProperty(t))throw new Error('"'+t.toString()+'" is a reserved event name');if(e.unshift(t),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(e),this;const a={type:fe.EVENT,data:e,options:{}};if(a.options.compress=!1!==this.flags.compress,"function"==typeof e[e.length-1]){const t=this.ids++,n=e.pop();this._registerAckCallback(t,n),a.id=t}const s=null===(i=null===(n=this.io.engine)||void 0===n?void 0:n.transport)||void 0===i?void 0:i.writable,o=this.connected&&!(null===(r=this.io.engine)||void 0===r?void 0:r._hasPingExpired());return this.flags.volatile&&!s||(o?(this.notifyOutgoingListeners(a),this.packet(a)):this.sendBuffer.push(a)),this.flags={},this}_registerAckCallback(t,e){var n;const i=null!==(n=this.flags.timeout)&&void 0!==n?n:this._opts.ackTimeout;if(void 0===i)return void(this.acks[t]=e);const r=this.io.setTimeoutFn((()=>{delete this.acks[t];for(let e=0;e<this.sendBuffer.length;e++)this.sendBuffer[e].id===t&&this.sendBuffer.splice(e,1);e.call(this,new Error("operation has timed out"))}),i),a=(...t)=>{this.io.clearTimeoutFn(r),e.apply(this,t)};a.withError=!0,this.acks[t]=a}emitWithAck(t,...e){return new Promise(((n,i)=>{const r=(t,e)=>t?i(t):n(e);r.withError=!0,e.push(r),this.emit(t,...e)}))}_addToQueue(t){let e;"function"==typeof t[t.length-1]&&(e=t.pop());const n={id:this._queueSeq++,tryCount:0,pending:!1,args:t,flags:Object.assign({fromQueue:!0},this.flags)};t.push(((t,...i)=>{if(n!==this._queue[0])return;return null!==t?n.tryCount>this._opts.retries&&(this._queue.shift(),e&&e(t)):(this._queue.shift(),e&&e(null,...i)),n.pending=!1,this._drainQueue()})),this._queue.push(n),this._drainQueue()}_drainQueue(t=!1){if(!this.connected||0===this._queue.length)return;const e=this._queue[0];e.pending&&!t||(e.pending=!0,e.tryCount++,this.flags=e.flags,this.emit.apply(this,e.args))}packet(t){t.nsp=this.nsp,this.io._packet(t)}onopen(){"function"==typeof this.auth?this.auth((t=>{this._sendConnectPacket(t)})):this._sendConnectPacket(this.auth)}_sendConnectPacket(t){this.packet({type:fe.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},t):t})}onerror(t){this.connected||this.emitReserved("connect_error",t)}onclose(t,e){this.connected=!1,delete this.id,this.emitReserved("disconnect",t,e),this._clearAcks()}_clearAcks(){Object.keys(this.acks).forEach((t=>{if(!this.sendBuffer.some((e=>String(e.id)===t))){const e=this.acks[t];delete this.acks[t],e.withError&&e.call(this,new Error("socket has been disconnected"))}}))}onpacket(t){if(t.nsp===this.nsp)switch(t.type){case fe.CONNECT:t.data&&t.data.sid?this.onconnect(t.data.sid,t.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case fe.EVENT:case fe.BINARY_EVENT:this.onevent(t);break;case fe.ACK:case fe.BINARY_ACK:this.onack(t);break;case fe.DISCONNECT:this.ondisconnect();break;case fe.CONNECT_ERROR:this.destroy();const e=new Error(t.data.message);e.data=t.data.data,this.emitReserved("connect_error",e)}}onevent(t){const e=t.data||[];null!=t.id&&e.push(this.ack(t.id)),this.connected?this.emitEvent(e):this.receiveBuffer.push(Object.freeze(e))}emitEvent(t){if(this._anyListeners&&this._anyListeners.length){const e=this._anyListeners.slice();for(const n of e)n.apply(this,t)}super.emit.apply(this,t),this._pid&&t.length&&"string"==typeof t[t.length-1]&&(this._lastOffset=t[t.length-1])}ack(t){const e=this;let n=!1;return function(...i){n||(n=!0,e.packet({type:fe.ACK,id:t,data:i}))}}onack(t){const e=this.acks[t.id];"function"==typeof e&&(delete this.acks[t.id],e.withError&&t.data.unshift(null),e.apply(this,t.data))}onconnect(t,e){this.id=t,this.recovered=e&&this._pid===e,this._pid=e,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach((t=>this.emitEvent(t))),this.receiveBuffer=[],this.sendBuffer.forEach((t=>{this.notifyOutgoingListeners(t),this.packet(t)})),this.sendBuffer=[]}ondisconnect(){this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach((t=>t())),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&this.packet({type:fe.DISCONNECT}),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(t){return this.flags.compress=t,this}get volatile(){return this.flags.volatile=!0,this}timeout(t){return this.flags.timeout=t,this}onAny(t){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(t),this}prependAny(t){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(t),this}offAny(t){if(!this._anyListeners)return this;if(t){const e=this._anyListeners;for(let n=0;n<e.length;n++)if(t===e[n])return e.splice(n,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(t){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(t),this}prependAnyOutgoing(t){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(t),this}offAnyOutgoing(t){if(!this._anyOutgoingListeners)return this;if(t){const e=this._anyOutgoingListeners;for(let n=0;n<e.length;n++)if(t===e[n])return e.splice(n,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(t){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const e=this._anyOutgoingListeners.slice();for(const n of e)n.apply(this,t.data)}}}function Me(t){t=t||{},this.ms=t.min||100,this.max=t.max||1e4,this.factor=t.factor||2,this.jitter=t.jitter>0&&t.jitter<=1?t.jitter:0,this.attempts=0}Me.prototype.duration=function(){var t=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var e=Math.random(),n=Math.floor(e*this.jitter*t);t=1&Math.floor(10*e)?t+n:t-n}return 0|Math.min(t,this.max)},Me.prototype.reset=function(){this.attempts=0},Me.prototype.setMin=function(t){this.ms=t},Me.prototype.setMax=function(t){this.max=t},Me.prototype.setJitter=function(t){this.jitter=t};class Se extends wt{constructor(t,e){var n;super(),this.nsps={},this.subs=[],t&&"object"==typeof t&&(e=t,t=void 0),(e=e||{}).path=e.path||"/socket.io",this.opts=e,Dt(this,e),this.reconnection(!1!==e.reconnection),this.reconnectionAttempts(e.reconnectionAttempts||1/0),this.reconnectionDelay(e.reconnectionDelay||1e3),this.reconnectionDelayMax(e.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(n=e.randomizationFactor)&&void 0!==n?n:.5),this.backoff=new Me({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==e.timeout?2e4:e.timeout),this._readyState="closed",this.uri=t;const i=e.parser||ve;this.encoder=new i.Encoder,this.decoder=new i.Decoder,this._autoConnect=!1!==e.autoConnect,this._autoConnect&&this.open()}reconnection(t){return arguments.length?(this._reconnection=!!t,t||(this.skipReconnect=!0),this):this._reconnection}reconnectionAttempts(t){return void 0===t?this._reconnectionAttempts:(this._reconnectionAttempts=t,this)}reconnectionDelay(t){var e;return void 0===t?this._reconnectionDelay:(this._reconnectionDelay=t,null===(e=this.backoff)||void 0===e||e.setMin(t),this)}randomizationFactor(t){var e;return void 0===t?this._randomizationFactor:(this._randomizationFactor=t,null===(e=this.backoff)||void 0===e||e.setJitter(t),this)}reconnectionDelayMax(t){var e;return void 0===t?this._reconnectionDelayMax:(this._reconnectionDelayMax=t,null===(e=this.backoff)||void 0===e||e.setMax(t),this)}timeout(t){return arguments.length?(this._timeout=t,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(t){if(~this._readyState.indexOf("open"))return this;this.engine=new ne(this.uri,this.opts);const e=this.engine,n=this;this._readyState="opening",this.skipReconnect=!1;const i=ye(e,"open",(function(){n.onopen(),t&&t()})),r=e=>{this.cleanup(),this._readyState="closed",this.emitReserved("error",e),t?t(e):this.maybeReconnectOnOpen()},a=ye(e,"error",r);if(!1!==this._timeout){const t=this._timeout,n=this.setTimeoutFn((()=>{i(),r(new Error("timeout")),e.close()}),t);this.opts.autoUnref&&n.unref(),this.subs.push((()=>{this.clearTimeoutFn(n)}))}return this.subs.push(i),this.subs.push(a),this}connect(t){return this.open(t)}onopen(){this.cleanup(),this._readyState="open",this.emitReserved("open");const t=this.engine;this.subs.push(ye(t,"ping",this.onping.bind(this)),ye(t,"data",this.ondata.bind(this)),ye(t,"error",this.onerror.bind(this)),ye(t,"close",this.onclose.bind(this)),ye(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(t){try{this.decoder.add(t)}catch(t){this.onclose("parse error",t)}}ondecoded(t){At((()=>{this.emitReserved("packet",t)}),this.setTimeoutFn)}onerror(t){this.emitReserved("error",t)}socket(t,e){let n=this.nsps[t];return n?this._autoConnect&&!n.active&&n.connect():(n=new be(this,t,e),this.nsps[t]=n),n}_destroy(t){const e=Object.keys(this.nsps);for(const t of e){if(this.nsps[t].active)return}this._close()}_packet(t){const e=this.encoder.encode(t);for(let n=0;n<e.length;n++)this.engine.write(e[n],t.options)}cleanup(){this.subs.forEach((t=>t())),this.subs.length=0,this.decoder.destroy()}_close(){this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close")}disconnect(){return this._close()}onclose(t,e){var n;this.cleanup(),null===(n=this.engine)||void 0===n||n.close(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",t,e),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const t=this;if(this.backoff.attempts>=this._reconnectionAttempts)this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const e=this.backoff.duration();this._reconnecting=!0;const n=this.setTimeoutFn((()=>{t.skipReconnect||(this.emitReserved("reconnect_attempt",t.backoff.attempts),t.skipReconnect||t.open((e=>{e?(t._reconnecting=!1,t.reconnect(),this.emitReserved("reconnect_error",e)):t.onreconnect()})))}),e);this.opts.autoUnref&&n.unref(),this.subs.push((()=>{this.clearTimeoutFn(n)}))}}onreconnect(){const t=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",t)}}const Ee={};function Te(t,e){"object"==typeof t&&(e=t,t=void 0);const n=function(t,e="",n){let i=t;n=n||"undefined"!=typeof location&&location,null==t&&(t=n.protocol+"//"+n.host),"string"==typeof t&&("/"===t.charAt(0)&&(t="/"===t.charAt(1)?n.protocol+t:n.host+t),/^(https?|wss?):\/\//.test(t)||(t=void 0!==n?n.protocol+"//"+t:"https://"+t),i=Zt(t)),i.port||(/^(http|ws)$/.test(i.protocol)?i.port="80":/^(http|ws)s$/.test(i.protocol)&&(i.port="443")),i.path=i.path||"/";const r=-1!==i.host.indexOf(":")?"["+i.host+"]":i.host;return i.id=i.protocol+"://"+r+":"+i.port+e,i.href=i.protocol+"://"+r+(n&&n.port===i.port?"":":"+i.port),i}(t,(e=e||{}).path||"/socket.io"),i=n.source,r=n.id,a=n.path,s=Ee[r]&&a in Ee[r].nsps;let o;return e.forceNew||e["force new connection"]||!1===e.multiplex||s?o=new Se(i,e):(Ee[r]||(Ee[r]=new Se(i,e)),o=Ee[r]),n.query&&!e.query&&(e.query=n.queryKey),o.socket(n.path,e)}Object.assign(Te,{Manager:Se,Socket:be,io:Te,connect:Te});const we=[];function Ae(e,n=t){let i;const r=new Set;function s(t){if(a(e,t)&&(e=t,i)){const t=!we.length;for(const t of r)t[1](),we.push(t,e);if(t){for(let t=0;t<we.length;t+=2)we[t][0](we[t+1]);we.length=0}}}function o(t){s(t(e))}return{set:s,update:o,subscribe:function(a,l=t){const c=[a,l];return r.add(c),1===r.size&&(i=n(s,o)||t),a(e),()=>{r.delete(c),0===r.size&&i&&(i(),i=null)}}}}function Ce(e,n,a){const o=!Array.isArray(e),l=o?[e]:e;if(!l.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const c=n.length<2;return function(t,e){return{subscribe:Ae(t,e).subscribe}}(a,((e,a)=>{let h=!1;const u=[];let d=0,p=t;const f=()=>{if(d)return;p();const i=n(o?u[0]:u,e,a);c?e(i):p=r(i)?i:t},m=l.map(((t,e)=>s(t,(t=>{u[e]=t,d&=~(1<<e),h&&f()}),(()=>{d|=1<<e}))));return h=!0,f(),function(){i(m),p(),h=!1}}))}const Re=Ae([]),Pe=3e5;function Le(t,e){if(t.killmail.solar_system_id!==e.killmail.solar_system_id)return!1;if(Math.abs(new Date(t.killmail.killmail_time)-new Date(e.killmail.killmail_time))>18e4)return!1;const n=new Set([...t.killmail.attackers.map((t=>`${t.corporation_id}-${t.alliance_id}`)),`${t.killmail.victim.corporation_id}-${t.killmail.victim.alliance_id}`]),i=new Set([...e.killmail.attackers.map((t=>`${t.corporation_id}-${t.alliance_id}`)),`${e.killmail.victim.corporation_id}-${e.killmail.victim.alliance_id}`]);let r=0;return n.forEach((t=>{i.has(t)&&r++})),r>=1}function De(t){Re.update((e=>{const n=(new Date).getTime(),i=new Date(t.killmail.killmail_time).getTime();if(n-i>Pe)return e;const r=Math.floor(i/18e4),a=`${t.killmail.solar_system_id}-${r}`;let s=e.find((e=>{const n=new Date(e.kills[0].killmail.killmail_time).getTime(),i=Math.floor(n/18e4);return e.systemId===t.killmail.solar_system_id&&i===r&&Le(e.kills[0],t)}));if(s)s.kills.push(t),s.totalValue+=t.zkb.totalValue,s.lastKill=t.killmail.killmail_time,t.killmail.attackers.forEach((t=>{t.character_id&&s.involvedCharacters.add(t.character_id),t.corporation_id&&s.involvedCorporations.add(t.corporation_id),t.alliance_id&&s.involvedAlliances.add(t.alliance_id)})),t.killmail.victim.character_id&&s.involvedCharacters.add(t.killmail.victim.character_id),s.numAttackers=s.involvedCharacters.size,s.numCorps=s.involvedCorporations.size,s.numAlliances=s.involvedAlliances.size;else{const n={systemId:t.killmail.solar_system_id,battleId:a,kills:[t],totalValue:t.zkb.totalValue,lastKill:t.killmail.killmail_time,involvedCharacters:new Set([t.killmail.victim.character_id,...t.killmail.attackers.map((t=>t.character_id)).filter(Boolean)]),involvedCorporations:new Set([t.killmail.victim.corporation_id,...t.killmail.attackers.map((t=>t.corporation_id)).filter(Boolean)]),involvedAlliances:new Set([t.killmail.victim.alliance_id,...t.killmail.attackers.map((t=>t.alliance_id)).filter(Boolean)])};n.numAttackers=n.involvedCharacters.size,n.numCorps=n.involvedCorporations.size,n.numAlliances=n.involvedAlliances.size,e.push(n)}return(e=function(t){let e=!0;for(;e;){e=!1;for(let n=0;n<t.length;n++){for(let i=n+1;i<t.length;i++)if(t[n].systemId===t[i].systemId&&t[n].kills.some((e=>t[i].kills.some((t=>Le(e,t)))))){t[n].kills=[...t[n].kills,...t[i].kills],t[n].totalValue+=t[i].totalValue,t[n].lastKill=new Date(Math.max(new Date(t[n].lastKill),new Date(t[i].lastKill))).toISOString(),t[i].involvedCharacters.forEach((e=>t[n].involvedCharacters.add(e))),t[i].involvedCorporations.forEach((e=>t[n].involvedCorporations.add(e))),t[i].involvedAlliances.forEach((e=>t[n].involvedAlliances.add(e))),t.splice(i,1),e=!0;break}if(e)break}}return t}(e)).filter((t=>n-new Date(t.lastKill).getTime()<Pe))}))}const Ue=Ce([Re],(([t],e)=>{const n=(new Date).getTime(),i=t.filter((t=>{const e=n-new Date(t.lastKill).getTime(),i=e<Pe,r=t.involvedCharacters.size>=2;return console.log("Battle filtering:",{battleId:t.kills[0]?.killmail_id,age:e/1e3,maxAge:300,involvedCount:t.involvedCharacters.size,minInvolved:2,included:i&&r}),i&&r})).map((t=>({...t,involvedCount:t.involvedCharacters.size,corporationCount:t.involvedCorporations.size,allianceCount:t.involvedAlliances.size})));console.log("Filtered battles:",i.length),e(i)})),Ie=Ae([]),Ne=Ae([]),ke=Ae([]),Oe={dropped_value_enabled:!1,total_value_enabled:!1,points_enabled:!1,npc_only:!1,solo:!1,awox_only:!1,location_filter_enabled:!1,ship_type_filter_enabled:!1,time_threshold_enabled:!1,audio_alerts_enabled:!1,attacker_alliance_filter_enabled:!1,attacker_corporation_filter_enabled:!1,attacker_capital_filter_enabled:!1,attacker_ship_type_filter_enabled:!1,victim_alliance_filter_enabled:!1,victim_corporation_filter_enabled:!1,solar_system_filter_enabled:!1,item_type_filter_enabled:!1,triangulation_filter_enabled:!1,triangulation_filter_exclude:!1,triangulation_filter_near_stargate:!1,triangulation_filter_near_celestial:!1,webhook_enabled:!1,webhook_url:"",location_type_filter_enabled:!1,location_types:{highsec:!1,lowsec:!1,nullsec:!1,wspace:!1,abyssal:!1},combat_label_filter_enabled:!1,combat_labels:{ganked:!1,pvp:!1,padding:!1}},Fe=Ae({...Oe}),Be=Ce([Ie,Fe,Ne],(([t,e,n])=>t.filter((t=>{if(e.triangulation_filter_enabled){const n=t?.pinpoints;if(e.triangulation_filter_near_stargate&&n?.nearestCelestial?.name?.toLowerCase().includes("stargate"))return!1;if(e.triangulation_filter_near_celestial&&(n?.atCelestial||n?.nearestCelestial))return!1;if(e.triangulation_filter_exclude){if(n?.triangulationPossible)return!1}else if(!n?.triangulationPossible)return!1}if(e.attacker_capital_filter_enabled){if(!t.killmail.attackers.some((e=>{const n=t.shipCategories?.attackers?.find((t=>t.shipTypeId===e.ship_type_id))?.category;return"capital"===n})))return!1}for(let e of n){if(!e.enabled)continue;const n=Array.isArray(e.ids)?e.ids:JSON.parse(e.ids);let i=!1;switch(e.filter_type){case"attacker_alliance":i=t.killmail.attackers.some((t=>n.includes(t.alliance_id?.toString())));break;case"attacker_corporation":i=t.killmail.attackers.some((t=>n.includes(t.corporation_id?.toString())));break;case"attacker_ship_type":i=t.killmail.attackers.some((t=>n.includes(t.ship_type_id?.toString())));break;case"triangulation":if(i=t?.pinpoints?.triangulationPossible||!1,e.is_exclude&&i)return!1;if(!e.is_exclude&&!i)return!1;continue;case"victim_alliance":i=n.includes(t.killmail.victim.alliance_id?.toString());break;case"victim_corporation":i=n.includes(t.killmail.victim.corporation_id?.toString());break;case"ship_type":i=n.includes(t.killmail.victim.ship_type_id?.toString());break;case"solar_system":i=n.includes(t.killmail.solar_system_id?.toString());break;case"region":{const e=t.pinpoints.celestialData,r=t.zkb.labels.includes("loc:abyssal");if(!e.regionid&&!e.regionname&&r){i=(Array.isArray(n)?n:[n]).some((t=>"abyssal"===t.toLowerCase()||"abyss"===t.toLowerCase()));break}i=(Array.isArray(n)?n:[n]).some((t=>e.regionid&&e.regionid.toString()===t.toString()||e.regionname&&e.regionname.toLowerCase()===t.toString().toLowerCase()));break}case"location_type":i=t.zkb.labels.some((t=>n.includes(t.replace("loc:",""))));break;case"ship_category":i=t.zkb.labels.some((t=>(t.startsWith("cat:")||"capital"===t)&&n.includes(t.replace("cat:",""))));break;case"combat_type":i=t.zkb.labels.some((t=>n.includes(t)&&["atShip","ganked","pvp","padding"].includes(t)))}if(e.is_exclude&&i)return!1;if(!e.is_exclude&&!i)return!1}if(e.dropped_value_enabled&&t.zkb.droppedValue<e.dropped_value)return!1;if(e.total_value_enabled&&t.zkb.totalValue<e.total_value)return!1;if(e.points_enabled&&t.zkb.points<e.points)return!1;if(e.npc_only&&!t.zkb.npc)return!1;if(e.solo&&!t.zkb.solo)return!1;if(e.awox_only&&!t.zkb.awox)return!1;if(e.location_type_filter_enabled){const n=e.location_types||{highsec:!1,lowsec:!1,nullsec:!1,wspace:!1,abyssal:!1};if(Object.values(n).some((t=>t))){const n=Object.entries(e.location_types||{}).filter((([t,e])=>e)).map((([t,e])=>`loc:${t}`));if(!t.zkb.labels.some((t=>n.includes(t))))return!1}}if(e.ship_type_filter_enabled&&t.killmail.victim.ship_type_id!==e.ship_type_filter)return!1;if(e.time_threshold_enabled){const n=new Date(t.killmail.killmail_time).getTime();if(((new Date).getTime()-n)/1e3>e.time_threshold)return!1}if(e.attacker_alliance_filter_enabled&&e.attacker_alliance_filter&&!t.killmail.attackers.some((t=>t.alliance_id===parseInt(e.attacker_alliance_filter))))return!1;if(e.attacker_corporation_filter_enabled&&e.attacker_corporation_filter&&!t.killmail.attackers.some((t=>t.corporation_id===parseInt(e.attacker_corporation_filter))))return!1;if(e.attacker_ship_type_filter_enabled&&e.attacker_ship_type_filter&&!t.killmail.attackers.some((t=>t.ship_type_id===parseInt(e.attacker_ship_type_filter))))return!1;if(e.victim_alliance_filter_enabled&&e.victim_alliance_filter&&t.killmail.victim.alliance_id!==parseInt(e.victim_alliance_filter))return!1;if(e.victim_corporation_filter_enabled&&e.victim_corporation_filter&&t.killmail.victim.corporation_id!==parseInt(e.victim_corporation_filter))return!1;if(e.item_type_filter_enabled&&e.item_type_filter&&!t.killmail.victim.items.some((t=>t.item_type_id===parseInt(e.item_type_filter))))return!1;if(e.solar_system_filter_enabled&&e.solar_system_filter&&t.killmail.solar_system_id!==parseInt(e.solar_system_filter))return!1;if(e.location_type_filter_enabled){const n=Object.entries(e.location_types||{}).filter((([t,e])=>e)).map((([t,e])=>`loc:${t}`));if(n.length>0&&!t.zkb.labels.some((t=>n.includes(t))))return!1}if(e.capitals_only&&!t.zkb.labels.includes("capital"))return!1;if(e.combat_label_filter_enabled&&e.combat_labels){const n=Object.entries(e.combat_labels||{ganked:!1,pvp:!1,padding:!1}).filter((([t,e])=>e)).map((([t,e])=>t));if(n.length>0&&!t.zkb.labels.some((t=>n.includes(t))))return!1}return!0})).sort(((t,e)=>{const n=new Date(t.killmail.killmail_time).getTime();return new Date(e.killmail.killmail_time).getTime()-n}))));const ze=Te("https://eve-content-hunter-production.up.railway.app",{reconnection:!0,reconnectionAttempts:5,reconnectionDelay:1e3,transports:["websocket","polling"]}),He="undefined"!=typeof Audio?new Audio("/build/audio_files/alert.wav"):null;function Ve(t,e,n){const i=t.slice();return i[10]=e[n],i}function Ge(t,e){let n,i,r,a=e[10].name+"";return{key:t,first:null,c(){n=f("option"),i=m(a),n.__value=r=e[10].id,M(n,n.__value),this.first=n},m(t,e){u(t,n,e),h(n,i)},p(t,s){e=t,2&s&&a!==(a=e[10].name+"")&&b(i,a),2&s&&r!==(r=e[10].id)&&(n.__value=r,M(n,n.__value))},d(t){t&&d(n)}}}function We(e){let n,r,a,s,o,l,c,p,m,_,x,b,S,T,w,A,C,R=[],P=new Map,L=K(e[1]);const D=t=>t[10].id;for(let t=0;t<L.length;t+=1){let n=Ve(e,L,t),i=D(n);P.set(i,R[t]=Ge(i,n))}return{c(){n=f("div"),r=f("h2"),r.textContent="Profiles",a=g(),s=f("div"),o=f("select"),l=f("option"),l.textContent="Select a profile";for(let t=0;t<R.length;t+=1)R[t].c();c=g(),p=f("button"),p.textContent="Load",m=g(),_=f("button"),_.textContent="Delete",x=g(),b=f("div"),S=f("input"),T=g(),w=f("button"),w.textContent="Save New Profile",l.__value=null,M(l,l.__value),y(o,"class","svelte-kq5f5p"),void 0===e[0]&&B((()=>e[7].call(o))),y(s,"class","profile-controls svelte-kq5f5p"),y(S,"placeholder","New profile name"),y(S,"class","svelte-kq5f5p"),y(b,"class","new-profile svelte-kq5f5p"),y(n,"class","profile-list-manager svelte-kq5f5p")},m(t,i){u(t,n,i),h(n,r),h(n,a),h(n,s),h(s,o),h(o,l);for(let t=0;t<R.length;t+=1)R[t]&&R[t].m(o,null);E(o,e[0],!0),h(s,c),h(s,p),h(s,m),h(s,_),h(n,x),h(n,b),h(b,S),M(S,e[2]),h(b,T),h(b,w),A||(C=[v(o,"change",e[7]),v(o,"click",e[6]),v(p,"click",e[4]),v(_,"click",e[5]),v(S,"input",e[8]),v(w,"click",e[3])],A=!0)},p(t,[e]){2&e&&(L=K(t[1]),R=J(R,e,D,1,t,L,P,o,Z,Ge,null,Ve)),3&e&&E(o,t[0]),4&e&&S.value!==t[2]&&M(S,t[2])},i:t,o:t,d(t){t&&d(n);for(let t=0;t<R.length;t+=1)R[t].d();A=!1,i(C)}}}function je(t,e,n){let{profiles:i=[]}=e,{selectedProfile:r=null}=e;const a=D();let s="";return t.$$set=t=>{"profiles"in t&&n(1,i=t.profiles),"selectedProfile"in t&&n(0,r=t.selectedProfile)},[r,i,s,function(){s&&(a("saveProfile",{name:s}),n(2,s=""))},function(){r&&a("loadProfile",r)},function(){r&&(a("deleteProfile",{id:r}),n(0,r=null))},function(){a("fetchProfiles")},function(){r=T(this),n(0,r),n(1,i)},function(){s=this.value,n(2,s)}]}ze.once("connect",(()=>console.log("Socket connected"))),ze.on("newKillmail",(t=>{Ie.update((e=>{const n=Array.isArray(e)?e:[];if(n.some((e=>e.killID===t.killID)))return n;const i=o(Be).length;return De(t),setTimeout((()=>{o(Be).length>i&&o(Fe).audio_alerts_enabled&&He?.play().catch((t=>console.error("Audio error:",t)))}),0),[...n,t].sort(((t,e)=>new Date(e.killmail.killmail_time)-new Date(t.killmail.killmail_time)||e.killID-t.killID))}))})),ze.on("killmailsCleared",(()=>{Ie.set([]),Be.set([])}));class Xe extends rt{constructor(t){super(),it(this,t,je,We,a,{profiles:1,selectedProfile:0})}}function qe(t,e,n){const i=t.slice();return i[16]=e[n],i}function $e(t){let e,n=[],i=new Map,r=K(t[4]);const a=t=>t[16].id;for(let e=0;e<r.length;e+=1){let s=qe(t,r,e),o=a(s);i.set(o,n[e]=Ke(o,s))}return{c(){for(let t=0;t<n.length;t+=1)n[t].c();e=_()},m(t,i){for(let e=0;e<n.length;e+=1)n[e]&&n[e].m(t,i);u(t,e,i)},p(t,s){208&s&&(r=K(t[4]),n=J(n,s,a,1,t,r,i,e.parentNode,Z,Ke,e,qe))},d(t){t&&d(e);for(let e=0;e<n.length;e+=1)n[e].d(t)}}}function Ye(e){let n;return{c(){n=f("p"),n.textContent="No filter lists created yet."},m(t,e){u(t,n,e)},p:t,d(t){t&&d(n)}}}function Ke(t,e){let n,r,a,s,o,l,c,p,_,x,M,S,E,T,w,A,C,R=e[16].name+"",P=(e[16].filter_type||"No type")+"";function L(){return e[13](e[16])}function D(){return e[14](e[16])}return{key:t,first:null,c(){n=f("div"),r=f("input"),o=g(),l=f("label"),c=m(R),p=m(" ("),_=m(P),x=m(")"),S=g(),E=f("div"),T=f("button"),T.textContent="Delete",w=g(),y(r,"type","checkbox"),y(r,"id",a=`filter-list-${e[16].id}`),r.checked=s=e[16].enabled,y(l,"for",M=`filter-list-${e[16].id}`),y(l,"class","svelte-1sq496v"),y(T,"class","svelte-1sq496v"),y(E,"class","filter-list-controls svelte-1sq496v"),y(n,"class","filter-list-item svelte-1sq496v"),this.first=n},m(t,e){u(t,n,e),h(n,r),h(n,o),h(n,l),h(l,c),h(l,p),h(l,_),h(l,x),h(n,S),h(n,E),h(E,T),h(n,w),A||(C=[v(r,"change",L),v(T,"click",D)],A=!0)},p(t,n){e=t,16&n&&a!==(a=`filter-list-${e[16].id}`)&&y(r,"id",a),16&n&&s!==(s=e[16].enabled)&&(r.checked=s),16&n&&R!==(R=e[16].name+"")&&b(c,R),16&n&&P!==(P=(e[16].filter_type||"No type")+"")&&b(_,P),16&n&&M!==(M=`filter-list-${e[16].id}`)&&y(l,"for",M)},d(t){t&&d(n),A=!1,i(C)}}}function Ze(e){let n,r,a,s,o,l,c,p,_,x,b,S,T,w,A,C,R,P,L,D,U,I,N,k,O,F,z,H,V,G,W;function j(t,e){return 0===t[4].length?Ye:$e}let X=j(e),q=X(e);return{c(){n=f("div"),r=f("h2"),r.textContent="Filter Lists",a=g(),s=f("div"),o=f("h3"),o.textContent="Create New Filter List",l=g(),c=f("div"),p=f("input"),_=g(),x=f("input"),b=g(),S=f("label"),T=f("input"),w=m("\r\n        Exclude"),A=g(),C=f("select"),R=f("option"),R.textContent="Select filter type",P=f("option"),P.textContent="Attacker Alliance",L=f("option"),L.textContent="Attacker Corporation",D=f("option"),D.textContent="Attacker Ship Type",U=f("option"),U.textContent="Victim Alliance",I=f("option"),I.textContent="Victim Corporation",N=f("option"),N.textContent="Ship Type",k=f("option"),k.textContent="Solar System",O=f("option"),O.textContent="Region",F=g(),z=f("button"),z.textContent="Create New List",H=g(),V=f("div"),q.c(),y(p,"placeholder","New list name"),y(p,"class","svelte-1sq496v"),y(x,"placeholder","Comma-separated IDs"),y(x,"class","svelte-1sq496v"),y(T,"type","checkbox"),y(T,"class","svelte-1sq496v"),R.__value="",M(R,R.__value),P.__value="attacker_alliance",M(P,P.__value),L.__value="attacker_corporation",M(L,L.__value),D.__value="attacker_ship_type",M(D,D.__value),U.__value="victim_alliance",M(U,U.__value),I.__value="victim_corporation",M(I,I.__value),N.__value="ship_type",M(N,N.__value),k.__value="solar_system",M(k,k.__value),O.__value="region",M(O,O.__value),y(C,"class","svelte-1sq496v"),void 0===e[3]&&B((()=>e[12].call(C))),y(z,"class","svelte-1sq496v"),y(c,"class","form-group svelte-1sq496v"),y(s,"class","create-filter-list svelte-1sq496v"),y(V,"class","existing-lists"),y(n,"class","filter-list-manager svelte-1sq496v")},m(t,i){u(t,n,i),h(n,r),h(n,a),h(n,s),h(s,o),h(s,l),h(s,c),h(c,p),M(p,e[0]),h(c,_),h(c,x),M(x,e[1]),h(c,b),h(c,S),h(S,T),T.checked=e[2],h(S,w),h(c,A),h(c,C),h(C,R),h(C,P),h(C,L),h(C,D),h(C,U),h(C,I),h(C,N),h(C,k),h(C,O),E(C,e[3],!0),h(c,F),h(c,z),h(n,H),h(n,V),q.m(V,null),G||(W=[v(p,"input",e[9]),v(x,"input",e[10]),v(T,"change",e[11]),v(C,"change",e[12]),v(z,"click",e[5])],G=!0)},p(t,[e]){1&e&&p.value!==t[0]&&M(p,t[0]),2&e&&x.value!==t[1]&&M(x,t[1]),4&e&&(T.checked=t[2]),8&e&&E(C,t[3]),X===(X=j(t))&&q?q.p(t,e):(q.d(1),q=X(t),q&&(q.c(),q.m(V,null)))},i:t,o:t,d(t){t&&d(n),q.d(),G=!1,i(W)}}}function Je(t,e,n){let i,r;l(t,Ne,(t=>n(8,r=t)));const a=D();let s="",o="",c=!1,h="";function u(t){console.log("Toggling filter list:",t),Ne.update((e=>e.map((e=>e.id===t?{...e,enabled:!e.enabled}:e)))),a("updateFilterLists",{filterLists:r})}async function d(t){console.log("Deleting filter list:",t),ze.emit("deleteFilterList",{id:t})}P((async()=>{console.log("FilterListManager mounted");try{const t=await fetch("/api/session",{credentials:"include"}),e=await t.json();console.log("Session data received:",e),e.filterLists&&(console.log("Initializing filter lists from session:",e.filterLists),Ne.set(e.filterLists))}catch(t){console.error("Error fetching session data:",t)}return ze.on("filterListCreated",(t=>{console.log("Received filterListCreated event:",t),Ne.update((e=>e.find((e=>e.id===t.id))?(console.log("Updating existing filter list"),e.map((e=>e.id===t.id?t:e))):(console.log("Adding new filter list"),[...e,t]))),a("updateFilterLists",{filterLists:r})})),ze.on("filterListDeleted",(({id:t})=>{console.log("Received filterListDeleted event:",t),Ne.update((e=>e.filter((e=>e.id!==t)))),a("updateFilterLists",{filterLists:r})})),()=>{console.log("FilterListManager unmounting, removing socket listeners"),ze.off("filterListCreated"),ze.off("filterListDeleted")}}));return t.$$.update=()=>{256&t.$$.dirty&&n(4,i=r)},[s,o,c,h,i,async function(){if(console.log("Creating new filter list with:",{name:s,ids:o,isExclude:c,filterType:h}),!s||!o)return void console.warn("Missing required fields for filter list creation");const t=o.split(",").map((t=>t.trim())),e={name:s,ids:t,enabled:!1,is_exclude:c,filter_type:h};console.log("Emitting createFilterList event:",e),ze.emit("createFilterList",e),n(0,s=""),n(1,o=""),n(2,c=!1),n(3,h="")},u,d,r,function(){s=this.value,n(0,s)},function(){o=this.value,n(1,o)},function(){c=this.checked,n(2,c)},function(){h=T(this),n(3,h)},t=>u(t.id),t=>d(t.id)]}class Qe extends rt{constructor(t){super(),it(this,t,Je,Ze,a,{})}}function tn(t){let e,n,r,a,s,o,l,c,p,_,b,S,E,T,w,A,C,R,P,L,D,U,I,N,k,O,F,B,z,H,V,G,W,j,X,q,$,Y,K,Z,J,Q,tt,et,nt,it,rt,at,st,ot,lt,ct,ht,ut,dt,pt,ft,mt,gt,_t,vt,yt,xt,bt,Mt,St,Et,Tt,wt,At,Ct,Rt,Pt,Lt,Dt,Ut,It,Nt,kt,Ot,Ft,Bt,zt,Ht,Vt,Gt,Wt,jt,Xt,qt,$t,Yt,Kt,Zt,Jt,Qt,te,ee,ne,ie,re,ae,se,oe,le,ce,he,ue,de,pe,fe,me,ge,_e,ve,ye,xe,be,Me,Se,Ee,Te,we,Ae,Ce,Re,Pe,Le,De,Ue,Ie,Ne,ke,Oe,Fe,Be,ze=t[1].triangulation_filter_enabled&&en(t);return{c(){e=f("label"),n=f("input"),r=m("\r\n      Enable Dropped Value Filter"),a=g(),s=f("label"),o=m("Minimum Dropped Value:\r\n      "),l=f("input"),c=g(),p=f("label"),_=f("input"),b=m("\r\n      Enable Total Value Filter"),S=g(),E=f("label"),T=f("input"),w=m("\r\n      Enable Triangulation Filter"),A=g(),ze&&ze.c(),C=g(),R=f("h3"),R.textContent="Item Filter",P=g(),L=f("label"),D=f("input"),U=m("\r\n      Enable Item Type Filter"),I=g(),N=f("label"),k=m("Item Type ID:\r\n      "),O=f("input"),F=g(),B=f("label"),z=m("Minimum Total Value:\r\n      "),H=f("input"),V=g(),G=f("label"),W=f("input"),j=m("\r\n      Enable Points Filter"),X=g(),q=f("label"),$=m("Minimum Points:\r\n      "),Y=f("input"),K=g(),Z=f("label"),J=f("input"),Q=m("\r\n      NPC Only"),tt=g(),et=f("label"),nt=f("input"),it=m("\r\n      Solo Only"),rt=g(),at=f("label"),st=f("input"),ot=m("\r\n      AWOX Only"),lt=g(),ct=f("label"),ht=f("input"),ut=m("\r\n      Enable Location Filter"),dt=g(),pt=f("label"),ft=m("Location ID:\r\n      "),mt=f("input"),gt=g(),_t=f("label"),vt=f("input"),yt=m("\r\n      Enable Ship Type Filter"),xt=g(),bt=f("label"),Mt=m("Ship Type ID:\r\n      "),St=f("input"),Et=g(),Tt=f("label"),wt=f("input"),At=m("\r\n      Enable Time Threshold"),Ct=g(),Rt=f("label"),Pt=m("Time Threshold (seconds):\r\n      "),Lt=f("input"),Dt=g(),Ut=f("label"),It=f("input"),Nt=m("\r\n      Enable Audio Alerts"),kt=g(),Ot=f("h3"),Ot.textContent="Attacker Filters",Ft=g(),Bt=f("label"),zt=f("input"),Ht=m("\r\n      Show Only Kills with Capital Ship Attackers"),Vt=g(),Gt=f("label"),Wt=f("input"),jt=m("\r\n      Enable Attacker Alliance Filter"),Xt=g(),qt=f("label"),$t=m("Attacker Alliance ID:\r\n      "),Yt=f("input"),Kt=g(),Zt=f("label"),Jt=f("input"),Qt=m("\r\n      Enable Attacker Corporation Filter"),te=g(),ee=f("label"),ne=m("Attacker Corporation ID:\r\n      "),ie=f("input"),re=g(),ae=f("label"),se=f("input"),oe=m("\r\n      Enable Attacker Ship Type Filter"),le=g(),ce=f("label"),he=m("Attacker Ship Type ID:\r\n      "),ue=f("input"),de=g(),pe=f("h3"),pe.textContent="Victim Filters",fe=g(),me=f("label"),ge=f("input"),_e=m("\r\n      Enable Victim Alliance Filter"),ve=g(),ye=f("label"),xe=m("Victim Alliance ID:\r\n      "),be=f("input"),Me=g(),Se=f("label"),Ee=f("input"),Te=m("\r\n      Enable Victim Corporation Filter"),we=g(),Ae=f("label"),Ce=m("Victim Corporation ID:\r\n      "),Re=f("input"),Pe=g(),Le=f("label"),De=f("input"),Ue=m("\r\n      Enable Solar System Filter"),Ie=g(),Ne=f("label"),ke=m("Solar System ID:\r\n      "),Oe=f("input"),y(n,"type","checkbox"),y(e,"class","svelte-2okaum"),y(l,"type","number"),y(l,"class","svelte-2okaum"),y(s,"class","svelte-2okaum"),y(_,"type","checkbox"),y(p,"class","svelte-2okaum"),y(T,"type","checkbox"),y(E,"class","svelte-2okaum"),y(R,"class","svelte-2okaum"),y(D,"type","checkbox"),y(L,"class","svelte-2okaum"),y(O,"type","number"),y(O,"class","svelte-2okaum"),y(N,"class","svelte-2okaum"),y(H,"type","number"),y(H,"class","svelte-2okaum"),y(B,"class","svelte-2okaum"),y(W,"type","checkbox"),y(G,"class","svelte-2okaum"),y(Y,"type","number"),y(Y,"class","svelte-2okaum"),y(q,"class","svelte-2okaum"),y(J,"type","checkbox"),y(Z,"class","svelte-2okaum"),y(nt,"type","checkbox"),y(et,"class","svelte-2okaum"),y(st,"type","checkbox"),y(at,"class","svelte-2okaum"),y(ht,"type","checkbox"),y(ct,"class","svelte-2okaum"),y(mt,"type","number"),y(mt,"class","svelte-2okaum"),y(pt,"class","svelte-2okaum"),y(vt,"type","checkbox"),y(_t,"class","svelte-2okaum"),y(St,"type","number"),y(St,"class","svelte-2okaum"),y(bt,"class","svelte-2okaum"),y(wt,"type","checkbox"),y(Tt,"class","svelte-2okaum"),y(Lt,"type","number"),y(Lt,"class","svelte-2okaum"),y(Rt,"class","svelte-2okaum"),y(It,"type","checkbox"),y(Ut,"class","svelte-2okaum"),y(Ot,"class","svelte-2okaum"),y(zt,"type","checkbox"),y(Bt,"class","svelte-2okaum"),y(Wt,"type","checkbox"),y(Gt,"class","svelte-2okaum"),y(Yt,"type","number"),y(Yt,"class","svelte-2okaum"),y(qt,"class","svelte-2okaum"),y(Jt,"type","checkbox"),y(Zt,"class","svelte-2okaum"),y(ie,"type","number"),y(ie,"class","svelte-2okaum"),y(ee,"class","svelte-2okaum"),y(se,"type","checkbox"),y(ae,"class","svelte-2okaum"),y(ue,"type","number"),y(ue,"class","svelte-2okaum"),y(ce,"class","svelte-2okaum"),y(pe,"class","svelte-2okaum"),y(ge,"type","checkbox"),y(me,"class","svelte-2okaum"),y(be,"type","number"),y(be,"class","svelte-2okaum"),y(ye,"class","svelte-2okaum"),y(Ee,"type","checkbox"),y(Se,"class","svelte-2okaum"),y(Re,"type","number"),y(Re,"class","svelte-2okaum"),y(Ae,"class","svelte-2okaum"),y(De,"type","checkbox"),y(Le,"class","svelte-2okaum"),y(Oe,"type","number"),y(Oe,"class","svelte-2okaum"),y(Ne,"class","svelte-2okaum")},m(i,d){u(i,e,d),h(e,n),n.checked=t[3].dropped_value_enabled,h(e,r),u(i,a,d),u(i,s,d),h(s,o),h(s,l),M(l,t[3].dropped_value),u(i,c,d),u(i,p,d),h(p,_),_.checked=t[3].total_value_enabled,h(p,b),u(i,S,d),u(i,E,d),h(E,T),T.checked=t[3].triangulation_filter_enabled,h(E,w),u(i,A,d),ze&&ze.m(i,d),u(i,C,d),u(i,R,d),u(i,P,d),u(i,L,d),h(L,D),D.checked=t[3].item_type_filter_enabled,h(L,U),u(i,I,d),u(i,N,d),h(N,k),h(N,O),M(O,t[3].item_type_filter),u(i,F,d),u(i,B,d),h(B,z),h(B,H),M(H,t[3].total_value),u(i,V,d),u(i,G,d),h(G,W),W.checked=t[3].points_enabled,h(G,j),u(i,X,d),u(i,q,d),h(q,$),h(q,Y),M(Y,t[3].points),u(i,K,d),u(i,Z,d),h(Z,J),J.checked=t[3].npc_only,h(Z,Q),u(i,tt,d),u(i,et,d),h(et,nt),nt.checked=t[3].solo,h(et,it),u(i,rt,d),u(i,at,d),h(at,st),st.checked=t[3].awox_only,h(at,ot),u(i,lt,d),u(i,ct,d),h(ct,ht),ht.checked=t[3].location_filter_enabled,h(ct,ut),u(i,dt,d),u(i,pt,d),h(pt,ft),h(pt,mt),M(mt,t[3].location_filter),u(i,gt,d),u(i,_t,d),h(_t,vt),vt.checked=t[3].ship_type_filter_enabled,h(_t,yt),u(i,xt,d),u(i,bt,d),h(bt,Mt),h(bt,St),M(St,t[3].ship_type_filter),u(i,Et,d),u(i,Tt,d),h(Tt,wt),wt.checked=t[3].time_threshold_enabled,h(Tt,At),u(i,Ct,d),u(i,Rt,d),h(Rt,Pt),h(Rt,Lt),M(Lt,t[3].time_threshold),u(i,Dt,d),u(i,Ut,d),h(Ut,It),It.checked=t[3].audio_alerts_enabled,h(Ut,Nt),u(i,kt,d),u(i,Ot,d),u(i,Ft,d),u(i,Bt,d),h(Bt,zt),zt.checked=t[3].attacker_capital_filter_enabled,h(Bt,Ht),u(i,Vt,d),u(i,Gt,d),h(Gt,Wt),Wt.checked=t[3].attacker_alliance_filter_enabled,h(Gt,jt),u(i,Xt,d),u(i,qt,d),h(qt,$t),h(qt,Yt),M(Yt,t[3].attacker_alliance_filter),u(i,Kt,d),u(i,Zt,d),h(Zt,Jt),Jt.checked=t[3].attacker_corporation_filter_enabled,h(Zt,Qt),u(i,te,d),u(i,ee,d),h(ee,ne),h(ee,ie),M(ie,t[3].attacker_corporation_filter),u(i,re,d),u(i,ae,d),h(ae,se),se.checked=t[3].attacker_ship_type_filter_enabled,h(ae,oe),u(i,le,d),u(i,ce,d),h(ce,he),h(ce,ue),M(ue,t[3].attacker_ship_type_filter),u(i,de,d),u(i,pe,d),u(i,fe,d),u(i,me,d),h(me,ge),ge.checked=t[3].victim_alliance_filter_enabled,h(me,_e),u(i,ve,d),u(i,ye,d),h(ye,xe),h(ye,be),M(be,t[3].victim_alliance_filter),u(i,Me,d),u(i,Se,d),h(Se,Ee),Ee.checked=t[3].victim_corporation_filter_enabled,h(Se,Te),u(i,we,d),u(i,Ae,d),h(Ae,Ce),h(Ae,Re),M(Re,t[3].victim_corporation_filter),u(i,Pe,d),u(i,Le,d),h(Le,De),De.checked=t[3].solar_system_filter_enabled,h(Le,Ue),u(i,Ie,d),u(i,Ne,d),h(Ne,ke),h(Ne,Oe),M(Oe,t[3].solar_system_filter),Fe||(Be=[v(n,"change",t[12]),v(n,"change",t[13]),v(l,"input",t[14]),v(l,"input",t[15]),v(_,"change",t[16]),v(_,"change",t[17]),v(T,"change",t[18]),v(T,"change",t[19]),v(D,"change",t[26]),v(D,"change",t[27]),v(O,"input",t[28]),v(O,"input",t[29]),v(H,"input",t[30]),v(H,"input",t[31]),v(W,"change",t[32]),v(W,"change",t[33]),v(Y,"input",t[34]),v(Y,"input",t[35]),v(J,"change",t[36]),v(J,"change",t[37]),v(nt,"change",t[38]),v(nt,"change",t[39]),v(st,"change",t[40]),v(st,"change",t[41]),v(ht,"change",t[42]),v(ht,"change",t[43]),v(mt,"input",t[44]),v(mt,"input",t[45]),v(vt,"change",t[46]),v(vt,"change",t[47]),v(St,"input",t[48]),v(St,"input",t[49]),v(wt,"change",t[50]),v(wt,"change",t[51]),v(Lt,"input",t[52]),v(Lt,"input",t[53]),v(It,"change",t[54]),v(It,"change",t[55]),v(zt,"change",t[56]),v(zt,"change",t[57]),v(Wt,"change",t[58]),v(Wt,"change",t[59]),v(Yt,"input",t[60]),v(Yt,"input",t[61]),v(Jt,"change",t[62]),v(Jt,"change",t[63]),v(ie,"input",t[64]),v(ie,"input",t[65]),v(se,"change",t[66]),v(se,"change",t[67]),v(ue,"input",t[68]),v(ue,"input",t[69]),v(ge,"change",t[70]),v(ge,"change",t[71]),v(be,"input",t[72]),v(be,"input",t[73]),v(Ee,"change",t[74]),v(Ee,"change",t[75]),v(Re,"input",t[76]),v(Re,"input",t[77]),v(De,"change",t[78]),v(De,"change",t[79]),v(Oe,"input",t[80]),v(Oe,"input",t[81])],Fe=!0)},p(t,e){8&e[0]&&(n.checked=t[3].dropped_value_enabled),8&e[0]&&x(l.value)!==t[3].dropped_value&&M(l,t[3].dropped_value),8&e[0]&&(_.checked=t[3].total_value_enabled),8&e[0]&&(T.checked=t[3].triangulation_filter_enabled),t[1].triangulation_filter_enabled?ze?ze.p(t,e):(ze=en(t),ze.c(),ze.m(C.parentNode,C)):ze&&(ze.d(1),ze=null),8&e[0]&&(D.checked=t[3].item_type_filter_enabled),8&e[0]&&x(O.value)!==t[3].item_type_filter&&M(O,t[3].item_type_filter),8&e[0]&&x(H.value)!==t[3].total_value&&M(H,t[3].total_value),8&e[0]&&(W.checked=t[3].points_enabled),8&e[0]&&x(Y.value)!==t[3].points&&M(Y,t[3].points),8&e[0]&&(J.checked=t[3].npc_only),8&e[0]&&(nt.checked=t[3].solo),8&e[0]&&(st.checked=t[3].awox_only),8&e[0]&&(ht.checked=t[3].location_filter_enabled),8&e[0]&&x(mt.value)!==t[3].location_filter&&M(mt,t[3].location_filter),8&e[0]&&(vt.checked=t[3].ship_type_filter_enabled),8&e[0]&&x(St.value)!==t[3].ship_type_filter&&M(St,t[3].ship_type_filter),8&e[0]&&(wt.checked=t[3].time_threshold_enabled),8&e[0]&&x(Lt.value)!==t[3].time_threshold&&M(Lt,t[3].time_threshold),8&e[0]&&(It.checked=t[3].audio_alerts_enabled),8&e[0]&&(zt.checked=t[3].attacker_capital_filter_enabled),8&e[0]&&(Wt.checked=t[3].attacker_alliance_filter_enabled),8&e[0]&&x(Yt.value)!==t[3].attacker_alliance_filter&&M(Yt,t[3].attacker_alliance_filter),8&e[0]&&(Jt.checked=t[3].attacker_corporation_filter_enabled),8&e[0]&&x(ie.value)!==t[3].attacker_corporation_filter&&M(ie,t[3].attacker_corporation_filter),8&e[0]&&(se.checked=t[3].attacker_ship_type_filter_enabled),8&e[0]&&x(ue.value)!==t[3].attacker_ship_type_filter&&M(ue,t[3].attacker_ship_type_filter),8&e[0]&&(ge.checked=t[3].victim_alliance_filter_enabled),8&e[0]&&x(be.value)!==t[3].victim_alliance_filter&&M(be,t[3].victim_alliance_filter),8&e[0]&&(Ee.checked=t[3].victim_corporation_filter_enabled),8&e[0]&&x(Re.value)!==t[3].victim_corporation_filter&&M(Re,t[3].victim_corporation_filter),8&e[0]&&(De.checked=t[3].solar_system_filter_enabled),8&e[0]&&x(Oe.value)!==t[3].solar_system_filter&&M(Oe,t[3].solar_system_filter)},d(t){t&&(d(e),d(a),d(s),d(c),d(p),d(S),d(E),d(A),d(C),d(R),d(P),d(L),d(I),d(N),d(F),d(B),d(V),d(G),d(X),d(q),d(K),d(Z),d(tt),d(et),d(rt),d(at),d(lt),d(ct),d(dt),d(pt),d(gt),d(_t),d(xt),d(bt),d(Et),d(Tt),d(Ct),d(Rt),d(Dt),d(Ut),d(kt),d(Ot),d(Ft),d(Bt),d(Vt),d(Gt),d(Xt),d(qt),d(Kt),d(Zt),d(te),d(ee),d(re),d(ae),d(le),d(ce),d(de),d(pe),d(fe),d(me),d(ve),d(ye),d(Me),d(Se),d(we),d(Ae),d(Pe),d(Le),d(Ie),d(Ne)),ze&&ze.d(t),Fe=!1,i(Be)}}}function en(t){let e,n,r,a,s,o,l,c,p,_,x,b,M;return{c(){e=f("label"),n=f("input"),r=m("\r\n        Exclude Triangulatable Kills"),a=g(),s=f("label"),o=f("input"),l=m("\r\n        Exclude Near-Stargate Kills"),c=g(),p=f("label"),_=f("input"),x=m("\r\n        Exclude Near-Celestial Kills"),y(n,"type","checkbox"),y(e,"class","svelte-2okaum"),y(o,"type","checkbox"),y(s,"class","svelte-2okaum"),y(_,"type","checkbox"),y(p,"class","svelte-2okaum")},m(i,d){u(i,e,d),h(e,n),n.checked=t[1].triangulation_filter_exclude,h(e,r),u(i,a,d),u(i,s,d),h(s,o),o.checked=t[1].triangulation_filter_near_stargate,h(s,l),u(i,c,d),u(i,p,d),h(p,_),_.checked=t[1].triangulation_filter_near_celestial,h(p,x),b||(M=[v(n,"change",t[20]),v(n,"change",t[21]),v(o,"change",t[22]),v(o,"change",t[23]),v(_,"change",t[24]),v(_,"change",t[25])],b=!0)},p(t,e){2&e[0]&&(n.checked=t[1].triangulation_filter_exclude),2&e[0]&&(o.checked=t[1].triangulation_filter_near_stargate),2&e[0]&&(_.checked=t[1].triangulation_filter_near_celestial)},d(t){t&&(d(e),d(a),d(s),d(c),d(p)),b=!1,i(M)}}}function nn(t){let e,n,r,a,s,o,l,c,p,_,x,b,M,S,E,T,w,A,C,R,P,L;return{c(){e=f("div"),n=f("label"),r=f("input"),a=m("\r\n        High Security"),s=g(),o=f("label"),l=f("input"),c=m("\r\n        Low Security"),p=g(),_=f("label"),x=f("input"),b=m("\r\n        Null Security"),M=g(),S=f("label"),E=f("input"),T=m("\r\n        Wormhole Space"),w=g(),A=f("label"),C=f("input"),R=m("\r\n        Abyssal Space"),y(r,"type","checkbox"),y(n,"class","svelte-2okaum"),y(l,"type","checkbox"),y(o,"class","svelte-2okaum"),y(x,"type","checkbox"),y(_,"class","svelte-2okaum"),y(E,"type","checkbox"),y(S,"class","svelte-2okaum"),y(C,"type","checkbox"),y(A,"class","svelte-2okaum"),y(e,"class","location-types")},m(i,d){u(i,e,d),h(e,n),h(n,r),r.checked=t[1].location_types.highsec,h(n,a),h(e,s),h(e,o),h(o,l),l.checked=t[3].location_types.lowsec,h(o,c),h(e,p),h(e,_),h(_,x),x.checked=t[3].location_types.nullsec,h(_,b),h(e,M),h(e,S),h(S,E),E.checked=t[3].location_types.wspace,h(S,T),h(e,w),h(e,A),h(A,C),C.checked=t[3].location_types.abyssal,h(A,R),P||(L=[v(r,"change",t[84]),v(r,"change",t[85]),v(l,"change",t[86]),v(l,"change",t[87]),v(x,"change",t[88]),v(x,"change",t[89]),v(E,"change",t[90]),v(E,"change",t[91]),v(C,"change",t[92]),v(C,"change",t[93])],P=!0)},p(t,e){2&e[0]&&(r.checked=t[1].location_types.highsec),8&e[0]&&(l.checked=t[3].location_types.lowsec),8&e[0]&&(x.checked=t[3].location_types.nullsec),8&e[0]&&(E.checked=t[3].location_types.wspace),8&e[0]&&(C.checked=t[3].location_types.abyssal)},d(t){t&&d(e),P=!1,i(L)}}}function rn(t){let e,n,r,a,s,o,l,c,p,_,x,b,M,S;return{c(){e=f("div"),n=f("label"),r=f("input"),a=m("\r\n        Ganked"),s=g(),o=f("label"),l=f("input"),c=m("\r\n        PvP"),p=g(),_=f("label"),x=f("input"),b=m("\r\n        Padding"),y(r,"type","checkbox"),y(n,"class","svelte-2okaum"),y(l,"type","checkbox"),y(o,"class","svelte-2okaum"),y(x,"type","checkbox"),y(_,"class","svelte-2okaum"),y(e,"class","combat-labels")},m(i,d){u(i,e,d),h(e,n),h(n,r),r.checked=t[3].combat_labels.ganked,h(n,a),h(e,s),h(e,o),h(o,l),l.checked=t[3].combat_labels.pvp,h(o,c),h(e,p),h(e,_),h(_,x),x.checked=t[3].combat_labels.padding,h(_,b),M||(S=[v(r,"change",t[98]),v(r,"change",t[99]),v(l,"change",t[100]),v(l,"change",t[101]),v(x,"change",t[102]),v(x,"change",t[103])],M=!0)},p(t,e){8&e[0]&&(r.checked=t[3].combat_labels.ganked),8&e[0]&&(l.checked=t[3].combat_labels.pvp),8&e[0]&&(x.checked=t[3].combat_labels.padding)},d(t){t&&d(e),M=!1,i(S)}}}function an(t){let e,n,r,a,s;return{c(){e=f("label"),n=m("Webhook URL:\r\n      "),r=f("input"),y(r,"type","text"),y(r,"placeholder","https://discord.com/api/webhooks/..."),S(r,"width","100%"),S(r,"max-width","500px"),y(e,"class","svelte-2okaum")},m(i,o){u(i,e,o),h(e,n),h(e,r),M(r,t[3].webhook_url),a||(s=[v(r,"input",t[106]),v(r,"input",t[107])],a=!0)},p(t,e){8&e[0]&&r.value!==t[3].webhook_url&&M(r,t[3].webhook_url)},d(t){t&&d(e),a=!1,i(s)}}}function sn(t){let e,n,r,a,s,o,l,c,p,_,x,b,M,S,E,T,w,A,C,R,P,L,D,U,N,O,F,B,z,H;function V(e){t[11](e)}let G={profiles:t[0]};void 0!==t[2]&&(G.selectedProfile=t[2]),n=new Xe({props:G}),I.push((()=>function(t,e,n){const i=t.$$.props[e];void 0!==i&&(t.$$.bound[i]=n,n(t.$$.ctx[i]))}(n,"selectedProfile",V))),n.$on("saveProfile",t[5]),n.$on("loadProfile",t[6]),n.$on("fetchProfiles",t[8]),n.$on("deleteProfile",t[7]);let W=t[3]&&tn(t),j=t[1].location_type_filter_enabled&&nn(t),X=t[3].combat_label_filter_enabled&&rn(t),q=t[3].webhook_enabled&&an(t);return F=new Qe({}),{c(){e=f("div"),Q(n.$$.fragment),a=g(),W&&W.c(),s=g(),o=f("label"),l=f("input"),c=m("\r\n    Enable Location Type Filter"),p=g(),j&&j.c(),_=g(),x=f("label"),b=f("input"),M=m("\r\n    Capitals Only"),S=g(),E=f("label"),T=f("input"),w=m("\r\n    Enable Combat Label Filter"),A=g(),X&&X.c(),C=g(),R=f("h3"),R.textContent="Discord Webhook",P=g(),L=f("label"),D=f("input"),U=m("\r\n    Enable Discord Webhook Alerts"),N=g(),q&&q.c(),O=g(),Q(F.$$.fragment),y(l,"type","checkbox"),y(o,"class","svelte-2okaum"),y(b,"type","checkbox"),y(x,"class","svelte-2okaum"),y(T,"type","checkbox"),y(E,"class","svelte-2okaum"),y(R,"class","svelte-2okaum"),y(D,"type","checkbox"),y(L,"class","svelte-2okaum"),y(e,"class","settings-manager svelte-2okaum")},m(i,r){u(i,e,r),tt(n,e,null),h(e,a),W&&W.m(e,null),h(e,s),h(e,o),h(o,l),l.checked=t[3].location_type_filter_enabled,h(o,c),h(e,p),j&&j.m(e,null),h(e,_),h(e,x),h(x,b),b.checked=t[3].capitals_only,h(x,M),h(e,S),h(e,E),h(E,T),T.checked=t[3].combat_label_filter_enabled,h(E,w),h(e,A),X&&X.m(e,null),h(e,C),h(e,R),h(e,P),h(e,L),h(L,D),D.checked=t[3].webhook_enabled,h(L,U),h(e,N),q&&q.m(e,null),h(e,O),tt(F,e,null),B=!0,z||(H=[v(l,"change",t[82]),v(l,"change",t[83]),v(b,"change",t[94]),v(b,"change",t[95]),v(T,"change",t[96]),v(T,"change",t[97]),v(D,"change",t[104]),v(D,"change",t[105])],z=!0)},p(t,i){const a={};var o;1&i[0]&&(a.profiles=t[0]),!r&&4&i[0]&&(r=!0,a.selectedProfile=t[2],o=()=>r=!1,k.push(o)),n.$set(a),t[3]?W?W.p(t,i):(W=tn(t),W.c(),W.m(e,s)):W&&(W.d(1),W=null),8&i[0]&&(l.checked=t[3].location_type_filter_enabled),t[1].location_type_filter_enabled?j?j.p(t,i):(j=nn(t),j.c(),j.m(e,_)):j&&(j.d(1),j=null),8&i[0]&&(b.checked=t[3].capitals_only),8&i[0]&&(T.checked=t[3].combat_label_filter_enabled),t[3].combat_label_filter_enabled?X?X.p(t,i):(X=rn(t),X.c(),X.m(e,C)):X&&(X.d(1),X=null),8&i[0]&&(D.checked=t[3].webhook_enabled),t[3].webhook_enabled?q?q.p(t,i):(q=an(t),q.c(),q.m(e,O)):q&&(q.d(1),q=null)},i(t){B||($(n.$$.fragment,t),$(F.$$.fragment,t),B=!0)},o(t){Y(n.$$.fragment,t),Y(F.$$.fragment,t),B=!1},d(t){t&&d(e),et(n),W&&W.d(),j&&j.d(),X&&X.d(),q&&q.d(),et(F),z=!1,i(H)}}}function on(t,e,n){let i,r,a,s,o;l(t,Ne,(t=>n(112,a=t))),l(t,Fe,(t=>n(1,s=t))),l(t,ke,(t=>n(10,o=t)));let{socket:c}=e,h=null;var u;function d(t,e){try{Fe.update((n=>{const i={...Oe,...n};return"location_types"===t?i.location_types={...Oe.location_types,...n.location_types,...e}:"combat_labels"===t?i.combat_labels={...Oe.combat_labels,...n.combat_labels,...e}:i[t]=e,c.emit("updateSettings",i),i}))}catch(t){console.error("Error updating setting:",t),Fe.set({...Oe})}}function p(t){const{id:e}=t.detail;console.log("Deleting profile:",e),c.emit("deleteProfile",{id:e})}function f(){console.log("Fetching profiles"),c.emit("fetchProfiles")}P((()=>(c.on("profilesFetched",(t=>{console.log("Received profiles:",t),ke.set(t)})),c.on("profileSaved",(t=>{console.log("Profile saved:",t),function(t){ke.update((e=>{const n=e.findIndex((e=>e.id===t.id));return-1!==n?(e[n]=t,[...e]):[...e,t]}))}(t)})),c.on("profileDeleted",(t=>{console.log("Profile deleted:",t),p(t)})),c.emit("fetchProfiles"),()=>{c.off("profilesFetched"),c.off("profileSaved"),c.off("profileDeleted")}))),u=()=>{console.log("SettingsManager.svelte - afterUpdate. Profiles:",r)},R().$$.after_update.push(u),c.on("initialData",(t=>{console.log("Received initial data, fetching profiles"),f()})),c.on("profileSaved",(t=>{console.log("Profile saved:",t),ke.update((e=>{const n=e.findIndex((e=>e.id===t.id));return-1!==n?(e[n]=t,[...e]):[...e,t]})),f()})),c.on("profileLoaded",(t=>{Fe.set({...Oe,...t.settings}),Ne.set(t.filterLists.map((t=>({...t,ids:JSON.parse(t.ids),enabled:Boolean(t.enabled),is_exclude:Boolean(t.is_exclude)})))),ke.update((e=>{const n=e.findIndex((e=>e.id===t.id));return-1!==n?(e[n]=t,[...e]):[...e,t]})),n(2,h=t.id)})),c.on("profilesFetched",(t=>{console.log("Profiles fetched from database:",t),ke.set(t)})),c.on("profileDeleted",(t=>{ke.update((e=>e.filter((e=>e.id!==t)))),h===t&&n(2,h=null)})),c.on("filterListCreated",(t=>{console.log("Received new filter list:",t),Ne.update((e=>{const n=e.findIndex((e=>e.id===t.id));return-1!==n?(e[n]=t,[...e]):[...e,t]}))}));return t.$$set=t=>{"socket"in t&&n(9,c=t.socket)},t.$$.update=()=>{2&t.$$.dirty[0]&&n(3,i=s),1024&t.$$.dirty[0]&&n(0,r=o),1&t.$$.dirty[0]&&console.log("SettingsManager.svelte - localProfiles updated:",r)},[r,s,h,i,d,function(t){const{name:e}=t.detail;if(e){const t={name:e,settings:s,filterLists:a.map((t=>({...t,id:t.id.toString()})))};console.log("Sending profile data:",t),c.emit("saveProfile",t)}},function(t){const e=t.detail;e&&(console.log("Loading profile:",e),c.emit("loadProfile",e))},p,f,c,o,function(t){h=t,n(2,h)},function(){i.dropped_value_enabled=this.checked,n(3,i),n(1,s)},()=>d("dropped_value_enabled",i.dropped_value_enabled),function(){i.dropped_value=x(this.value),n(3,i),n(1,s)},()=>d("dropped_value",i.dropped_value),function(){i.total_value_enabled=this.checked,n(3,i),n(1,s)},()=>d("total_value_enabled",i.total_value_enabled),function(){i.triangulation_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("triangulation_filter_enabled",i.triangulation_filter_enabled),function(){s.triangulation_filter_exclude=this.checked,Fe.set(s)},()=>d("triangulation_filter_exclude",s.triangulation_filter_exclude),function(){s.triangulation_filter_near_stargate=this.checked,Fe.set(s)},()=>d("triangulation_filter_near_stargate",s.triangulation_filter_near_stargate),function(){s.triangulation_filter_near_celestial=this.checked,Fe.set(s)},()=>d("triangulation_filter_near_celestial",s.triangulation_filter_near_celestial),function(){i.item_type_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("item_type_filter_enabled",i.item_type_filter_enabled),function(){i.item_type_filter=x(this.value),n(3,i),n(1,s)},()=>d("item_type_filter",i.item_type_filter),function(){i.total_value=x(this.value),n(3,i),n(1,s)},()=>d("total_value",i.total_value),function(){i.points_enabled=this.checked,n(3,i),n(1,s)},()=>d("points_enabled",i.points_enabled),function(){i.points=x(this.value),n(3,i),n(1,s)},()=>d("points",i.points),function(){i.npc_only=this.checked,n(3,i),n(1,s)},()=>d("npc_only",i.npc_only),function(){i.solo=this.checked,n(3,i),n(1,s)},()=>d("solo",i.solo),function(){i.awox_only=this.checked,n(3,i),n(1,s)},()=>d("awox_only",i.awox_only),function(){i.location_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("location_filter_enabled",i.location_filter_enabled),function(){i.location_filter=x(this.value),n(3,i),n(1,s)},()=>d("location_filter",i.location_filter),function(){i.ship_type_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("ship_type_filter_enabled",i.ship_type_filter_enabled),function(){i.ship_type_filter=x(this.value),n(3,i),n(1,s)},()=>d("ship_type_filter",i.ship_type_filter),function(){i.time_threshold_enabled=this.checked,n(3,i),n(1,s)},()=>d("time_threshold_enabled",i.time_threshold_enabled),function(){i.time_threshold=x(this.value),n(3,i),n(1,s)},()=>d("time_threshold",i.time_threshold),function(){i.audio_alerts_enabled=this.checked,n(3,i),n(1,s)},()=>d("audio_alerts_enabled",i.audio_alerts_enabled),function(){i.attacker_capital_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("attacker_capital_filter_enabled",i.attacker_capital_filter_enabled),function(){i.attacker_alliance_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("attacker_alliance_filter_enabled",i.attacker_alliance_filter_enabled),function(){i.attacker_alliance_filter=x(this.value),n(3,i),n(1,s)},()=>d("attacker_alliance_filter",i.attacker_alliance_filter),function(){i.attacker_corporation_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("attacker_corporation_filter_enabled",i.attacker_corporation_filter_enabled),function(){i.attacker_corporation_filter=x(this.value),n(3,i),n(1,s)},()=>d("attacker_corporation_filter",i.attacker_corporation_filter),function(){i.attacker_ship_type_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("attacker_ship_type_filter_enabled",i.attacker_ship_type_filter_enabled),function(){i.attacker_ship_type_filter=x(this.value),n(3,i),n(1,s)},()=>d("attacker_ship_type_filter",i.attacker_ship_type_filter),function(){i.victim_alliance_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("victim_alliance_filter_enabled",i.victim_alliance_filter_enabled),function(){i.victim_alliance_filter=x(this.value),n(3,i),n(1,s)},()=>d("victim_alliance_filter",i.victim_alliance_filter),function(){i.victim_corporation_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("victim_corporation_filter_enabled",i.victim_corporation_filter_enabled),function(){i.victim_corporation_filter=x(this.value),n(3,i),n(1,s)},()=>d("victim_corporation_filter",i.victim_corporation_filter),function(){i.solar_system_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("solar_system_filter_enabled",i.solar_system_filter_enabled),function(){i.solar_system_filter=x(this.value),n(3,i),n(1,s)},()=>d("solar_system_filter",i.solar_system_filter),function(){i.location_type_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("location_type_filter_enabled",i.location_type_filter_enabled),function(){s.location_types.highsec=this.checked,Fe.set(s)},()=>d("location_types",s.location_types),function(){i.location_types.lowsec=this.checked,n(3,i),n(1,s)},()=>d("location_types",i.location_types),function(){i.location_types.nullsec=this.checked,n(3,i),n(1,s)},()=>d("location_types",i.location_types),function(){i.location_types.wspace=this.checked,n(3,i),n(1,s)},()=>d("location_types",i.location_types),function(){i.location_types.abyssal=this.checked,n(3,i),n(1,s)},()=>d("location_types",i.location_types),function(){i.capitals_only=this.checked,n(3,i),n(1,s)},()=>d("capitals_only",i.capitals_only),function(){i.combat_label_filter_enabled=this.checked,n(3,i),n(1,s)},()=>d("combat_label_filter_enabled",i.combat_label_filter_enabled),function(){i.combat_labels.ganked=this.checked,n(3,i),n(1,s)},()=>d("combat_labels",i.combat_labels),function(){i.combat_labels.pvp=this.checked,n(3,i),n(1,s)},()=>d("combat_labels",i.combat_labels),function(){i.combat_labels.padding=this.checked,n(3,i),n(1,s)},()=>d("combat_labels",i.combat_labels),function(){i.webhook_enabled=this.checked,n(3,i),n(1,s)},()=>d("webhook_enabled",i.webhook_enabled),function(){i.webhook_url=this.value,n(3,i),n(1,s)},()=>d("webhook_url",i.webhook_url)]}class ln extends rt{constructor(t){super(),it(this,t,on,sn,a,{socket:9},null,[-1,-1,-1,-1])}}
/**
	 * @license
	 * Copyright 2010-2024 Three.js Authors
	 * SPDX-License-Identifier: MIT
	 */const cn="168",hn=0,un=1,dn=2,pn=0,fn=1,mn=2,gn=3,_n=0,vn=1,yn=2,xn=100,bn=101,Mn=102,Sn=200,En=201,Tn=202,wn=203,An=204,Cn=205,Rn=206,Pn=207,Ln=208,Dn=209,Un=210,In=211,Nn=212,kn=213,On=214,Fn=301,Bn=302,zn=306,Hn=1e3,Vn=1001,Gn=1002,Wn=1003,jn=1004,Xn=1005,qn=1006,$n=1007,Yn=1008,Kn=1009,Zn=1010,Jn=1011,Qn=1012,ti=1013,ei=1014,ni=1015,ii=1016,ri=1017,ai=1018,si=1020,oi=35902,li=1023,ci=1026,hi=1027,ui=1029,di=1031,pi=1033,fi=33776,mi=33777,gi=33778,_i=33779,vi=35840,yi=35841,xi=35842,bi=35843,Mi=36196,Si=37492,Ei=37496,Ti=37808,wi=37809,Ai=37810,Ci=37811,Ri=37812,Pi=37813,Li=37814,Di=37815,Ui=37816,Ii=37817,Ni=37818,ki=37819,Oi=37820,Fi=37821,Bi=36492,zi=36494,Hi=36495,Vi=36284,Gi=36285,Wi=36286,ji="",Xi="srgb",qi="srgb-linear",$i="display-p3",Yi="display-p3-linear",Ki="linear",Zi="srgb",Ji="rec709",Qi="p3",tr=7680,er=512,nr=513,ir=514,rr=515,ar=516,sr=517,or=518,lr=519,cr=35044,hr="300 es",ur=2e3,dr=2001;class pr{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}}const fr=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];const mr=Math.PI/180,gr=180/Math.PI;function _r(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(fr[255&t]+fr[t>>8&255]+fr[t>>16&255]+fr[t>>24&255]+"-"+fr[255&e]+fr[e>>8&255]+"-"+fr[e>>16&15|64]+fr[e>>24&255]+"-"+fr[63&n|128]+fr[n>>8&255]+"-"+fr[n>>16&255]+fr[n>>24&255]+fr[255&i]+fr[i>>8&255]+fr[i>>16&255]+fr[i>>24&255]).toLowerCase()}function vr(t,e,n){return Math.max(e,Math.min(n,t))}function yr(t,e){return(t%e+e)%e}function xr(t,e,n){return(1-n)*t+n*e}function br(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function Mr(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const Sr=mr;class Er{constructor(t=0,e=0){Er.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(vr(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Tr{constructor(t,e,n,i,r,a,s,o,l){Tr.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,n,i,r,a,s,o,l)}set(t,e,n,i,r,a,s,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=s,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],_=i[1],v=i[4],y=i[7],x=i[2],b=i[5],M=i[8];return r[0]=a*f+s*_+o*x,r[3]=a*m+s*v+o*b,r[6]=a*g+s*y+o*M,r[1]=l*f+c*_+h*x,r[4]=l*m+c*v+h*b,r[7]=l*g+c*y+h*M,r[2]=u*f+d*_+p*x,r[5]=u*m+d*v+p*b,r[8]=u*g+d*y+p*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-n*r*c+n*s*o+i*r*l-i*a*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=c*a-s*l,u=s*o-c*r,d=l*r-a*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*l-c*n)*f,t[2]=(s*n-i*a)*f,t[3]=u*f,t[4]=(c*e-i*o)*f,t[5]=(i*r-s*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(a*e-n*r)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,a,s){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*a+l*s)+a+t,-i*l,i*o,-i*(-l*a+o*s)+s+e,0,0,1),this}scale(t,e){return this.premultiply(wr.makeScale(t,e)),this}rotate(t){return this.premultiply(wr.makeRotation(-t)),this}translate(t,e){return this.premultiply(wr.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const wr=new Tr;function Ar(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}function Cr(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Rr(){const t=Cr("canvas");return t.style.display="block",t}const Pr={};function Lr(t){t in Pr||(Pr[t]=!0,console.warn(t))}const Dr=(new Tr).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Ur=(new Tr).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Ir={[qi]:{transfer:Ki,primaries:Ji,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t,fromReference:t=>t},[Xi]:{transfer:Zi,primaries:Ji,luminanceCoefficients:[.2126,.7152,.0722],toReference:t=>t.convertSRGBToLinear(),fromReference:t=>t.convertLinearToSRGB()},[Yi]:{transfer:Ki,primaries:Qi,luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.applyMatrix3(Ur),fromReference:t=>t.applyMatrix3(Dr)},[$i]:{transfer:Zi,primaries:Qi,luminanceCoefficients:[.2289,.6917,.0793],toReference:t=>t.convertSRGBToLinear().applyMatrix3(Ur),fromReference:t=>t.applyMatrix3(Dr).convertLinearToSRGB()}},Nr=new Set([qi,Yi]),kr={enabled:!0,_workingColorSpace:qi,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(t){if(!Nr.has(t))throw new Error(`Unsupported working color space, "${t}".`);this._workingColorSpace=t},convert:function(t,e,n){if(!1===this.enabled||e===n||!e||!n)return t;const i=Ir[e].toReference;return(0,Ir[n].fromReference)(i(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this._workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this._workingColorSpace)},getPrimaries:function(t){return Ir[t].primaries},getTransfer:function(t){return t===ji?Ki:Ir[t].transfer},getLuminanceCoefficients:function(t,e=this._workingColorSpace){return t.fromArray(Ir[e].luminanceCoefficients)}};function Or(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Fr(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let Br;class zr{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Br&&(Br=Cr("canvas")),Br.width=t.width,Br.height=t.height;const n=Br.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Br}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=Cr("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let t=0;t<r.length;t++)r[t]=255*Or(r[t]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Or(e[t]/255)):e[t]=Or(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Hr=0;class Vr{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Hr++}),this.uuid=_r(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(Gr(i[e].image)):t.push(Gr(i[e]))}else t=Gr(i);n.url=t}return e||(t.images[this.uuid]=n),n}}function Gr(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?zr.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Wr=0;class jr extends pr{constructor(t=jr.DEFAULT_IMAGE,e=jr.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,s=1023,o=1009,l=jr.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Wr++}),this.uuid=_r(),this.name="",this.source=new Vr(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Er(0,0),this.repeat=new Er(1,1),this.center=new Er(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Tr,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Hn:t.x=t.x-Math.floor(t.x);break;case Vn:t.x=t.x<0?0:1;break;case Gn:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Hn:t.y=t.y-Math.floor(t.y);break;case Vn:t.y=t.y<0?0:1;break;case Gn:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}jr.DEFAULT_IMAGE=null,jr.DEFAULT_MAPPING=300,jr.DEFAULT_ANISOTROPY=1;class Xr{constructor(t=0,e=0,n=0,i=1){Xr.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const a=.01,s=.1,o=t.elements,l=o[0],c=o[4],h=o[8],u=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(c-u)<a&&Math.abs(h-f)<a&&Math.abs(p-m)<a){if(Math.abs(c+u)<s&&Math.abs(h+f)<s&&Math.abs(p+m)<s&&Math.abs(l+d+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,_=(g+1)/2,v=(c+u)/4,y=(h+f)/4,x=(p+m)/4;return t>o&&t>_?t<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=v/n,r=y/n):o>_?o<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=v/i,r=x/i):_<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(_),n=y/r,i=x/r),this.set(n,i,r,e),this}let _=Math.sqrt((m-p)*(m-p)+(h-f)*(h-f)+(u-c)*(u-c));return Math.abs(_)<.001&&(_=1),this.x=(m-p)/_,this.y=(h-f)/_,this.z=(u-c)/_,this.w=Math.acos((l+d+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class qr extends pr{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Xr(0,0,t,e),this.scissorTest=!1,this.viewport=new Xr(0,0,t,e);const i={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:qn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new jr(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let t=0;t<a;t++)this.textures[t]=r.clone(),this.textures[t].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++)this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Vr(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class $r extends qr{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Yr extends jr{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Wn,this.minFilter=Wn,this.wrapR=Vn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Kr extends jr{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Wn,this.minFilter=Wn,this.wrapR=Vn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Zr{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,a,s){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===s)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(h!==f||o!==u||l!==d||c!==p){let t=1-s;const e=o*u+l*d+c*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,e*n);t=Math.sin(t*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(o=o*t+u*r,l=l*t+d*r,c=c*t+p*r,h=h*t+f*r,t===1-s){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,a){const s=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[a],u=r[a+1],d=r[a+2],p=r[a+3];return t[e]=s*p+c*h+o*d-l*u,t[e+1]=o*p+c*u+l*h-s*d,t[e+2]=l*p+c*d+s*u-o*h,t[e+3]=c*p-s*h-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,r=t._z,a=t._order,s=Math.cos,o=Math.sin,l=s(n/2),c=s(i/2),h=s(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(a-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(c-o)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(r+l)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(r-l)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(a-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(vr(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+a*s+i*l-r*o,this._y=i*c+a*o+r*s-n*l,this._z=r*c+a*l+n*o-i*s,this._w=a*c-n*s-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this}const l=Math.sqrt(o),c=Math.atan2(l,s),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=a*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Jr{constructor(t=0,e=0,n=0){Jr.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(ta.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ta.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,l=2*(a*i-s*n),c=2*(s*e-r*i),h=2*(r*n-a*e);return this.x=e+o*l+a*h-s*c,this.y=n+o*c+s*l-r*h,this.z=i+o*h+r*c-a*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Qr.copy(this).projectOnVector(t),this.sub(Qr)}reflect(t){return this.sub(Qr.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(vr(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Qr=new Jr,ta=new Zr;class ea{constructor(t=new Jr(1/0,1/0,1/0),e=new Jr(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(ia.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(ia.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ia.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n){const i=n.getAttribute("position");if(!0===e&&void 0!==i&&!0!==t.isInstancedMesh)for(let e=0,n=i.count;e<n;e++)!0===t.isMesh?t.getVertexPosition(e,ia):ia.fromBufferAttribute(i,e),ia.applyMatrix4(t.matrixWorld),this.expandByPoint(ia);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),ra.copy(t.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),ra.copy(n.boundingBox)),ra.applyMatrix4(t.matrixWorld),this.union(ra)}const i=t.children;for(let t=0,n=i.length;t<n;t++)this.expandByObject(i[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,ia),ia.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ua),da.subVectors(this.max,ua),aa.subVectors(t.a,ua),sa.subVectors(t.b,ua),oa.subVectors(t.c,ua),la.subVectors(sa,aa),ca.subVectors(oa,sa),ha.subVectors(aa,oa);let e=[0,-la.z,la.y,0,-ca.z,ca.y,0,-ha.z,ha.y,la.z,0,-la.x,ca.z,0,-ca.x,ha.z,0,-ha.x,-la.y,la.x,0,-ca.y,ca.x,0,-ha.y,ha.x,0];return!!ma(e,aa,sa,oa,da)&&(e=[1,0,0,0,1,0,0,0,1],!!ma(e,aa,sa,oa,da)&&(pa.crossVectors(la,ca),e=[pa.x,pa.y,pa.z],ma(e,aa,sa,oa,da)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ia).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(ia).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(na[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),na[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),na[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),na[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),na[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),na[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),na[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),na[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(na)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const na=[new Jr,new Jr,new Jr,new Jr,new Jr,new Jr,new Jr,new Jr],ia=new Jr,ra=new ea,aa=new Jr,sa=new Jr,oa=new Jr,la=new Jr,ca=new Jr,ha=new Jr,ua=new Jr,da=new Jr,pa=new Jr,fa=new Jr;function ma(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){fa.fromArray(t,a);const s=r.x*Math.abs(fa.x)+r.y*Math.abs(fa.y)+r.z*Math.abs(fa.z),o=e.dot(fa),l=n.dot(fa),c=i.dot(fa);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>s)return!1}return!0}const ga=new ea,_a=new Jr,va=new Jr;class ya{constructor(t=new Jr,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):ga.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;_a.subVectors(t,this.center);const e=_a.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(_a,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(va.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(_a.copy(t.center).add(va)),this.expandByPoint(_a.copy(t.center).sub(va))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const xa=new Jr,ba=new Jr,Ma=new Jr,Sa=new Jr,Ea=new Jr,Ta=new Jr,wa=new Jr;class Aa{constructor(t=new Jr,e=new Jr(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,xa)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=xa.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(xa.copy(this.origin).addScaledVector(this.direction,e),xa.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ba.copy(t).add(e).multiplyScalar(.5),Ma.copy(e).sub(t).normalize(),Sa.copy(this.origin).sub(ba);const r=.5*t.distanceTo(e),a=-this.direction.dot(Ma),s=Sa.dot(this.direction),o=-Sa.dot(Ma),l=Sa.lengthSq(),c=Math.abs(1-a*a);let h,u,d,p;if(c>0)if(h=a*o-s,u=a*s-o,p=r*c,h>=0)if(u>=-p)if(u<=p){const t=1/c;h*=t,u*=t,d=h*(h+a*u+2*s)+u*(a*h+u+2*o)+l}else u=r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;else u<=-p?(h=Math.max(0,-(-a*r+s)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(h=Math.max(0,-(a*r+s)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l);else u=a>0?-r:r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(ba).addScaledVector(Ma,u),d}intersectSphere(t,e){xa.subVectors(t.center,this.origin);const n=xa.dot(this.direction),i=xa.dot(xa)-n*n,r=t.radius*t.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,o=n+a;return o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,a,s,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,a=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,a=(t.min.y-u.y)*c),n>a||r>i?null:((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,xa)}intersectTriangle(t,e,n,i,r){Ea.subVectors(e,t),Ta.subVectors(n,t),wa.crossVectors(Ea,Ta);let a,s=this.direction.dot(wa);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}Sa.subVectors(this.origin,t);const o=a*this.direction.dot(Ta.crossVectors(Sa,Ta));if(o<0)return null;const l=a*this.direction.dot(Ea.cross(Sa));if(l<0)return null;if(o+l>s)return null;const c=-a*Sa.dot(wa);return c<0?null:this.at(c/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Ca{constructor(t,e,n,i,r,a,s,o,l,c,h,u,d,p,f,m){Ca.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,n,i,r,a,s,o,l,c,h,u,d,p,f,m)}set(t,e,n,i,r,a,s,o,l,c,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ca).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Ra.setFromMatrixColumn(t,0).length(),r=1/Ra.setFromMatrixColumn(t,1).length(),a=1/Ra.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=a*c,n=a*h,i=s*c,r=s*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-s*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=a*o}else if("YXZ"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t+r*s,e[4]=i*s-n,e[8]=a*l,e[1]=a*h,e[5]=a*c,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t-r*s,e[4]=-a*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=a*c,e[9]=r-t*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*c,n=a*h,i=s*c,r=s*h;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=a*c,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(La,t,Da)}lookAt(t,e,n){const i=this.elements;return Na.subVectors(t,e),0===Na.lengthSq()&&(Na.z=1),Na.normalize(),Ua.crossVectors(n,Na),0===Ua.lengthSq()&&(1===Math.abs(n.z)?Na.x+=1e-4:Na.z+=1e-4,Na.normalize(),Ua.crossVectors(n,Na)),Ua.normalize(),Ia.crossVectors(Na,Ua),i[0]=Ua.x,i[4]=Ia.x,i[8]=Na.x,i[1]=Ua.y,i[5]=Ia.y,i[9]=Na.y,i[2]=Ua.z,i[6]=Ia.z,i[10]=Na.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],_=n[3],v=n[7],y=n[11],x=n[15],b=i[0],M=i[4],S=i[8],E=i[12],T=i[1],w=i[5],A=i[9],C=i[13],R=i[2],P=i[6],L=i[10],D=i[14],U=i[3],I=i[7],N=i[11],k=i[15];return r[0]=a*b+s*T+o*R+l*U,r[4]=a*M+s*w+o*P+l*I,r[8]=a*S+s*A+o*L+l*N,r[12]=a*E+s*C+o*D+l*k,r[1]=c*b+h*T+u*R+d*U,r[5]=c*M+h*w+u*P+d*I,r[9]=c*S+h*A+u*L+d*N,r[13]=c*E+h*C+u*D+d*k,r[2]=p*b+f*T+m*R+g*U,r[6]=p*M+f*w+m*P+g*I,r[10]=p*S+f*A+m*L+g*N,r[14]=p*E+f*C+m*D+g*k,r[3]=_*b+v*T+y*R+x*U,r[7]=_*M+v*w+y*P+x*I,r[11]=_*S+v*A+y*L+x*N,r[15]=_*E+v*C+y*D+x*k,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-i*l*h-r*s*u+n*l*u+i*s*d-n*o*d)+t[7]*(+e*o*d-e*l*u+r*a*u-i*a*d+i*l*c-r*o*c)+t[11]*(+e*l*h-e*s*d-r*a*h+n*a*d+r*s*c-n*l*c)+t[15]*(-i*s*c-e*o*h+e*s*u+i*a*h-n*a*u+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],_=h*m*l-f*u*l+f*o*d-s*m*d-h*o*g+s*u*g,v=p*u*l-c*m*l-p*o*d+a*m*d+c*o*g-a*u*g,y=c*f*l-p*h*l+p*s*d-a*f*d-c*s*g+a*h*g,x=p*h*o-c*f*o-p*s*u+a*f*u+c*s*m-a*h*m,b=e*_+n*v+i*y+r*x;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/b;return t[0]=_*M,t[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*M,t[2]=(s*m*r-f*o*r+f*i*l-n*m*l-s*i*g+n*o*g)*M,t[3]=(h*o*r-s*u*r-h*i*l+n*u*l+s*i*d-n*o*d)*M,t[4]=v*M,t[5]=(c*m*r-p*u*r+p*i*d-e*m*d-c*i*g+e*u*g)*M,t[6]=(p*o*r-a*m*r-p*i*l+e*m*l+a*i*g-e*o*g)*M,t[7]=(a*u*r-c*o*r+c*i*l-e*u*l-a*i*d+e*o*d)*M,t[8]=y*M,t[9]=(p*h*r-c*f*r-p*n*d+e*f*d+c*n*g-e*h*g)*M,t[10]=(a*f*r-p*s*r+p*n*l-e*f*l-a*n*g+e*s*g)*M,t[11]=(c*s*r-a*h*r-c*n*l+e*h*l+a*n*d-e*s*d)*M,t[12]=x*M,t[13]=(c*f*i-p*h*i+p*n*u-e*f*u-c*n*m+e*h*m)*M,t[14]=(p*s*i-a*f*i-p*n*o+e*f*o+a*n*m-e*s*m)*M,t[15]=(a*h*i-c*s*i+c*n*o-e*h*o-a*n*u+e*s*u)*M,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,l=r*a,c=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,c*s+n,c*o-i*a,0,l*o-i*s,c*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,a){return this.set(1,n,r,0,t,1,a,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,l=r+r,c=a+a,h=s+s,u=r*l,d=r*c,p=r*h,f=a*c,m=a*h,g=s*h,_=o*l,v=o*c,y=o*h,x=n.x,b=n.y,M=n.z;return i[0]=(1-(f+g))*x,i[1]=(d+y)*x,i[2]=(p-v)*x,i[3]=0,i[4]=(d-y)*b,i[5]=(1-(u+g))*b,i[6]=(m+_)*b,i[7]=0,i[8]=(p+v)*M,i[9]=(m-_)*M,i[10]=(1-(u+f))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Ra.set(i[0],i[1],i[2]).length();const a=Ra.set(i[4],i[5],i[6]).length(),s=Ra.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Pa.copy(this);const o=1/r,l=1/a,c=1/s;return Pa.elements[0]*=o,Pa.elements[1]*=o,Pa.elements[2]*=o,Pa.elements[4]*=l,Pa.elements[5]*=l,Pa.elements[6]*=l,Pa.elements[8]*=c,Pa.elements[9]*=c,Pa.elements[10]*=c,e.setFromRotationMatrix(Pa),n.x=r,n.y=a,n.z=s,this}makePerspective(t,e,n,i,r,a,s=2e3){const o=this.elements,l=2*r/(e-t),c=2*r/(n-i),h=(e+t)/(e-t),u=(n+i)/(n-i);let d,p;if(s===ur)d=-(a+r)/(a-r),p=-2*a*r/(a-r);else{if(s!==dr)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+s);d=-a/(a-r),p=-a*r/(a-r)}return o[0]=l,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,i,r,a,s=2e3){const o=this.elements,l=1/(e-t),c=1/(n-i),h=1/(a-r),u=(e+t)*l,d=(n+i)*c;let p,f;if(s===ur)p=(a+r)*h,f=-2*h;else{if(s!==dr)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+s);p=r*h,f=-1*h}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=f,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Ra=new Jr,Pa=new Ca,La=new Jr(0,0,0),Da=new Jr(1,1,1),Ua=new Jr,Ia=new Jr,Na=new Jr,ka=new Ca,Oa=new Zr;class Fa{constructor(t=0,e=0,n=0,i=Fa.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],a=i[4],s=i[8],o=i[1],l=i[5],c=i[9],h=i[2],u=i[6],d=i[10];switch(e){case"XYZ":this._y=Math.asin(vr(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-vr(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(vr(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-vr(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(vr(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-vr(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ka.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ka,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Oa.setFromEuler(this),this.setFromQuaternion(Oa,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Fa.DEFAULT_ORDER="XYZ";class Ba{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return!!(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let za=0;const Ha=new Jr,Va=new Zr,Ga=new Ca,Wa=new Jr,ja=new Jr,Xa=new Jr,qa=new Zr,$a=new Jr(1,0,0),Ya=new Jr(0,1,0),Ka=new Jr(0,0,1),Za={type:"added"},Ja={type:"removed"},Qa={type:"childadded",child:null},ts={type:"childremoved",child:null};class es extends pr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:za++}),this.uuid=_r(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=es.DEFAULT_UP.clone();const t=new Jr,e=new Fa,n=new Zr,i=new Jr(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ca},normalMatrix:{value:new Tr}}),this.matrix=new Ca,this.matrixWorld=new Ca,this.matrixAutoUpdate=es.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=es.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ba,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Va.setFromAxisAngle(t,e),this.quaternion.multiply(Va),this}rotateOnWorldAxis(t,e){return Va.setFromAxisAngle(t,e),this.quaternion.premultiply(Va),this}rotateX(t){return this.rotateOnAxis($a,t)}rotateY(t){return this.rotateOnAxis(Ya,t)}rotateZ(t){return this.rotateOnAxis(Ka,t)}translateOnAxis(t,e){return Ha.copy(t).applyQuaternion(this.quaternion),this.position.add(Ha.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis($a,t)}translateY(t){return this.translateOnAxis(Ya,t)}translateZ(t){return this.translateOnAxis(Ka,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ga.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Wa.copy(t):Wa.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ja.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ga.lookAt(ja,Wa,this.up):Ga.lookAt(Wa,ja,this.up),this.quaternion.setFromRotationMatrix(Ga),i&&(Ga.extractRotation(i.matrixWorld),Va.setFromRotationMatrix(Ga),this.quaternion.premultiply(Va.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Za),Qa.child=t,this.dispatchEvent(Qa),Qa.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ja),ts.child=t,this.dispatchEvent(ts),ts.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ga.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ga.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ga),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Za),Qa.child=t,this.dispatchEvent(Qa),Qa.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ja,t,Xa),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ja,qa,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){e[n].updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++){t[e].updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map((t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()}))),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),null!==this.boundingBox&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=a(t.geometries),i=a(t.materials),r=a(t.textures),s=a(t.images),o=a(t.shapes),l=a(t.skeletons),c=a(t.animations),h=a(t.nodes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),h.length>0&&(n.nodes=h)}return n.object=i,n;function a(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}es.DEFAULT_UP=new Jr(0,1,0),es.DEFAULT_MATRIX_AUTO_UPDATE=!0,es.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ns=new Jr,is=new Jr,rs=new Jr,as=new Jr,ss=new Jr,os=new Jr,ls=new Jr,cs=new Jr,hs=new Jr,us=new Jr;class ds{constructor(t=new Jr,e=new Jr,n=new Jr){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),ns.subVectors(t,e),i.cross(ns);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){ns.subVectors(i,e),is.subVectors(n,e),rs.subVectors(t,e);const a=ns.dot(ns),s=ns.dot(is),o=ns.dot(rs),l=is.dot(is),c=is.dot(rs),h=a*l-s*s;if(0===h)return r.set(0,0,0),null;const u=1/h,d=(l*o-s*c)*u,p=(a*c-s*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return null!==this.getBarycoord(t,e,n,i,as)&&(as.x>=0&&as.y>=0&&as.x+as.y<=1)}static getInterpolation(t,e,n,i,r,a,s,o){return null===this.getBarycoord(t,e,n,i,as)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,as.x),o.addScaledVector(a,as.y),o.addScaledVector(s,as.z),o)}static isFrontFacing(t,e,n,i){return ns.subVectors(n,e),is.subVectors(t,e),ns.cross(is).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ns.subVectors(this.c,this.b),is.subVectors(this.a,this.b),.5*ns.cross(is).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ds.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ds.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,r){return ds.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return ds.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ds.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let a,s;ss.subVectors(i,n),os.subVectors(r,n),cs.subVectors(t,n);const o=ss.dot(cs),l=os.dot(cs);if(o<=0&&l<=0)return e.copy(n);hs.subVectors(t,i);const c=ss.dot(hs),h=os.dot(hs);if(c>=0&&h<=c)return e.copy(i);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return a=o/(o-c),e.copy(n).addScaledVector(ss,a);us.subVectors(t,r);const d=ss.dot(us),p=os.dot(us);if(p>=0&&d<=p)return e.copy(r);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return s=l/(l-p),e.copy(n).addScaledVector(os,s);const m=c*p-d*h;if(m<=0&&h-c>=0&&d-p>=0)return ls.subVectors(r,i),s=(h-c)/(h-c+(d-p)),e.copy(i).addScaledVector(ls,s);const g=1/(m+f+u);return a=f*g,s=u*g,e.copy(n).addScaledVector(ss,a).addScaledVector(os,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const ps={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},fs={h:0,s:0,l:0},ms={h:0,s:0,l:0};function gs(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}class _s{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(void 0===e&&void 0===n){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Xi){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,kr.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=kr.workingColorSpace){return this.r=t,this.g=e,this.b=n,kr.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=kr.workingColorSpace){if(t=yr(t,1),e=vr(e,0,1),n=vr(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=gs(r,i,t+1/3),this.g=gs(r,i,t),this.b=gs(r,i,t-1/3)}return kr.toWorkingColorSpace(this,i),this}setStyle(t,e=Xi){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const a=i[1],s=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=i[1],r=n.length;if(3===r)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(6===r)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Xi){const n=ps[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Or(t.r),this.g=Or(t.g),this.b=Or(t.b),this}copyLinearToSRGB(t){return this.r=Fr(t.r),this.g=Fr(t.g),this.b=Fr(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Xi){return kr.fromWorkingColorSpace(vs.copy(this),t),65536*Math.round(vr(255*vs.r,0,255))+256*Math.round(vr(255*vs.g,0,255))+Math.round(vr(255*vs.b,0,255))}getHexString(t=Xi){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=kr.workingColorSpace){kr.fromWorkingColorSpace(vs.copy(this),e);const n=vs.r,i=vs.g,r=vs.b,a=Math.max(n,i,r),s=Math.min(n,i,r);let o,l;const c=(s+a)/2;if(s===a)o=0,l=0;else{const t=a-s;switch(l=c<=.5?t/(a+s):t/(2-a-s),a){case n:o=(i-r)/t+(i<r?6:0);break;case i:o=(r-n)/t+2;break;case r:o=(n-i)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e=kr.workingColorSpace){return kr.fromWorkingColorSpace(vs.copy(this),e),t.r=vs.r,t.g=vs.g,t.b=vs.b,t}getStyle(t=Xi){kr.fromWorkingColorSpace(vs.copy(this),t);const e=vs.r,n=vs.g,i=vs.b;return t!==Xi?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(t,e,n){return this.getHSL(fs),this.setHSL(fs.h+t,fs.s+e,fs.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(fs),t.getHSL(ms);const n=xr(fs.h,ms.h,e),i=xr(fs.s,ms.s,e),r=xr(fs.l,ms.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const vs=new _s;_s.NAMES=ps;let ys=0;class xs extends pr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ys++}),this.uuid=_r(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=xn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new _s(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=tr,this.stencilZFail=tr,this.stencilZPass=tr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),204!==this.blendSrc&&(n.blendSrc=this.blendSrc),205!==this.blendDst&&(n.blendDst=this.blendDst),this.blendEquation!==xn&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==tr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==tr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==tr&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class bs extends xs{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new _s(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Fa,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Ms=new Jr,Ss=new Er;class Es{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=n,this.usage=cr,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=ni,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}get updateRange(){return Lr("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ss.fromBufferAttribute(this,e),Ss.applyMatrix3(t),this.setXY(e,Ss.x,Ss.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ms.fromBufferAttribute(this,e),Ms.applyMatrix3(t),this.setXYZ(e,Ms.x,Ms.y,Ms.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Ms.fromBufferAttribute(this,e),Ms.applyMatrix4(t),this.setXYZ(e,Ms.x,Ms.y,Ms.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ms.fromBufferAttribute(this,e),Ms.applyNormalMatrix(t),this.setXYZ(e,Ms.x,Ms.y,Ms.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ms.fromBufferAttribute(this,e),Ms.transformDirection(t),this.setXYZ(e,Ms.x,Ms.y,Ms.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=br(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Mr(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=br(e,this.array)),e}setX(t,e){return this.normalized&&(e=Mr(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=br(e,this.array)),e}setY(t,e){return this.normalized&&(e=Mr(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=br(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Mr(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=br(e,this.array)),e}setW(t,e){return this.normalized&&(e=Mr(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Mr(e,this.array),n=Mr(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Mr(e,this.array),n=Mr(n,this.array),i=Mr(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=Mr(e,this.array),n=Mr(n,this.array),i=Mr(i,this.array),r=Mr(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==cr&&(t.usage=this.usage),t}}class Ts extends Es{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class ws extends Es{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class As extends Es{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Cs=0;const Rs=new Ca,Ps=new es,Ls=new Jr,Ds=new ea,Us=new ea,Is=new Jr;class Ns extends pr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Cs++}),this.uuid=_r(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ar(t)?ws:Ts)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Tr).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Rs.makeRotationFromQuaternion(t),this.applyMatrix4(Rs),this}rotateX(t){return Rs.makeRotationX(t),this.applyMatrix4(Rs),this}rotateY(t){return Rs.makeRotationY(t),this.applyMatrix4(Rs),this}rotateZ(t){return Rs.makeRotationZ(t),this.applyMatrix4(Rs),this}translate(t,e,n){return Rs.makeTranslation(t,e,n),this.applyMatrix4(Rs),this}scale(t,e,n){return Rs.makeScale(t,e,n),this.applyMatrix4(Rs),this}lookAt(t){return Ps.lookAt(t),Ps.updateMatrix(),this.applyMatrix4(Ps.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ls).negate(),this.translate(Ls.x,Ls.y,Ls.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new As(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ea);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new Jr(-1/0,-1/0,-1/0),new Jr(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ds.setFromBufferAttribute(n),this.morphTargetsRelative?(Is.addVectors(this.boundingBox.min,Ds.min),this.boundingBox.expandByPoint(Is),Is.addVectors(this.boundingBox.max,Ds.max),this.boundingBox.expandByPoint(Is)):(this.boundingBox.expandByPoint(Ds.min),this.boundingBox.expandByPoint(Ds.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ya);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new Jr,1/0);if(t){const n=this.boundingSphere.center;if(Ds.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Us.setFromBufferAttribute(n),this.morphTargetsRelative?(Is.addVectors(Ds.min,Us.min),Ds.expandByPoint(Is),Is.addVectors(Ds.max,Us.max),Ds.expandByPoint(Is)):(Ds.expandByPoint(Us.min),Ds.expandByPoint(Us.max))}Ds.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Is.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Is));if(e)for(let r=0,a=e.length;r<a;r++){const a=e[r],s=this.morphTargetsRelative;for(let e=0,r=a.count;e<r;e++)Is.fromBufferAttribute(a,e),s&&(Ls.fromBufferAttribute(t,e),Is.add(Ls)),i=Math.max(i,n.distanceToSquared(Is))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.position,i=e.normal,r=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Es(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),s=[],o=[];for(let t=0;t<n.count;t++)s[t]=new Jr,o[t]=new Jr;const l=new Jr,c=new Jr,h=new Jr,u=new Er,d=new Er,p=new Er,f=new Jr,m=new Jr;function g(t,e,i){l.fromBufferAttribute(n,t),c.fromBufferAttribute(n,e),h.fromBufferAttribute(n,i),u.fromBufferAttribute(r,t),d.fromBufferAttribute(r,e),p.fromBufferAttribute(r,i),c.sub(l),h.sub(l),d.sub(u),p.sub(u);const a=1/(d.x*p.y-p.x*d.y);isFinite(a)&&(f.copy(c).multiplyScalar(p.y).addScaledVector(h,-d.y).multiplyScalar(a),m.copy(h).multiplyScalar(d.x).addScaledVector(c,-p.x).multiplyScalar(a),s[t].add(f),s[e].add(f),s[i].add(f),o[t].add(m),o[e].add(m),o[i].add(m))}let _=this.groups;0===_.length&&(_=[{start:0,count:t.count}]);for(let e=0,n=_.length;e<n;++e){const n=_[e],i=n.start;for(let e=i,r=i+n.count;e<r;e+=3)g(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const v=new Jr,y=new Jr,x=new Jr,b=new Jr;function M(t){x.fromBufferAttribute(i,t),b.copy(x);const e=s[t];v.copy(e),v.sub(x.multiplyScalar(x.dot(e))).normalize(),y.crossVectors(b,e);const n=y.dot(o[t])<0?-1:1;a.setXYZW(t,v.x,v.y,v.z,n)}for(let e=0,n=_.length;e<n;++e){const n=_[e],i=n.start;for(let e=i,r=i+n.count;e<r;e+=3)M(t.getX(e+0)),M(t.getX(e+1)),M(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Es(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new Jr,r=new Jr,a=new Jr,s=new Jr,o=new Jr,l=new Jr,c=new Jr,h=new Jr;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),a.fromBufferAttribute(e,f),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),s.add(c),o.add(c),l.add(c),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Is.fromBufferAttribute(t,e),Is.normalize(),t.setXYZ(e,Is.x,Is.y,Is.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,a=new n.constructor(e.length*i);let s=0,o=0;for(let r=0,l=e.length;r<l;r++){s=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*i;for(let t=0;t<i;t++)a[o++]=n[s++]}return new Es(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Ns,n=this.index.array,i=this.attributes;for(const r in i){const a=t(i[r],n);e.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],s=r[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);a.push(i)}e.morphAttributes[i]=a}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let t=0,n=a.length;t<n;t++){const n=a[t];e.addGroup(n.start,n.count,n.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],a=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];a.push(i.toJSON(t.data))}a.length>0&&(i[e]=a,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let t=0,e=a.length;t<e;t++){const e=a[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ks=new Ca,Os=new Aa,Fs=new ya,Bs=new Jr,zs=new Jr,Hs=new Jr,Vs=new Jr,Gs=new Jr,Ws=new Jr,js=new Er,Xs=new Er,qs=new Er,$s=new Jr,Ys=new Jr,Ks=new Jr,Zs=new Jr,Js=new Jr;class Qs extends es{constructor(t=new Ns,e=new bs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const s=this.morphTargetInfluences;if(r&&s){Ws.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=s[n],o=r[n];0!==i&&(Gs.fromBufferAttribute(o,t),a?Ws.addScaledVector(Gs,i):Ws.addScaledVector(Gs.sub(e),i))}e.add(Ws)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),Fs.copy(n.boundingSphere),Fs.applyMatrix4(r),Os.copy(t.ray).recast(t.near),!1===Fs.containsPoint(Os.origin)){if(null===Os.intersectSphere(Fs,Bs))return;if(Os.origin.distanceToSquared(Bs)>(t.far-t.near)**2)return}ks.copy(r).invert(),Os.copy(t.ray).applyMatrix4(ks),null!==n.boundingBox&&!1===Os.intersectsBox(n.boundingBox)||this._computeIntersections(t,e,Os)}}_computeIntersections(t,e,n){let i;const r=this.geometry,a=this.material,s=r.index,o=r.attributes.position,l=r.attributes.uv,c=r.attributes.uv1,h=r.attributes.normal,u=r.groups,d=r.drawRange;if(null!==s)if(Array.isArray(a))for(let r=0,o=u.length;r<o;r++){const o=u[r],p=a[o.materialIndex];for(let r=Math.max(o.start,d.start),a=Math.min(s.count,Math.min(o.start+o.count,d.start+d.count));r<a;r+=3){i=to(this,p,t,n,l,c,h,s.getX(r),s.getX(r+1),s.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=o.materialIndex,e.push(i))}}else{for(let r=Math.max(0,d.start),o=Math.min(s.count,d.start+d.count);r<o;r+=3){i=to(this,a,t,n,l,c,h,s.getX(r),s.getX(r+1),s.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),e.push(i))}}else if(void 0!==o)if(Array.isArray(a))for(let r=0,s=u.length;r<s;r++){const s=u[r],p=a[s.materialIndex];for(let r=Math.max(s.start,d.start),a=Math.min(o.count,Math.min(s.start+s.count,d.start+d.count));r<a;r+=3){i=to(this,p,t,n,l,c,h,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=s.materialIndex,e.push(i))}}else{for(let r=Math.max(0,d.start),s=Math.min(o.count,d.start+d.count);r<s;r+=3){i=to(this,a,t,n,l,c,h,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),e.push(i))}}}}function to(t,e,n,i,r,a,s,o,l,c){t.getVertexPosition(o,zs),t.getVertexPosition(l,Hs),t.getVertexPosition(c,Vs);const h=function(t,e,n,i,r,a,s,o){let l;if(l=1===e.side?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,0===e.side,o),null===l)return null;Js.copy(o),Js.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Js);return c<n.near||c>n.far?null:{distance:c,point:Js.clone(),object:t}}(t,e,n,i,zs,Hs,Vs,Zs);if(h){r&&(js.fromBufferAttribute(r,o),Xs.fromBufferAttribute(r,l),qs.fromBufferAttribute(r,c),h.uv=ds.getInterpolation(Zs,zs,Hs,Vs,js,Xs,qs,new Er)),a&&(js.fromBufferAttribute(a,o),Xs.fromBufferAttribute(a,l),qs.fromBufferAttribute(a,c),h.uv1=ds.getInterpolation(Zs,zs,Hs,Vs,js,Xs,qs,new Er)),s&&($s.fromBufferAttribute(s,o),Ys.fromBufferAttribute(s,l),Ks.fromBufferAttribute(s,c),h.normal=ds.getInterpolation(Zs,zs,Hs,Vs,$s,Ys,Ks,new Jr),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const t={a:o,b:l,c:c,normal:new Jr,materialIndex:0};ds.getNormal(zs,Hs,Vs,t.normal),h.face=t}return h}class eo extends Ns{constructor(t=1,e=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],l=[],c=[],h=[];let u=0,d=0;function p(t,e,n,i,r,a,p,f,m,g,_){const v=a/m,y=p/g,x=a/2,b=p/2,M=f/2,S=m+1,E=g+1;let T=0,w=0;const A=new Jr;for(let a=0;a<E;a++){const s=a*y-b;for(let o=0;o<S;o++){const u=o*v-x;A[t]=u*i,A[e]=s*r,A[n]=M,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,c.push(A.x,A.y,A.z),h.push(o/m),h.push(1-a/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+S*t,i=u+e+S*(t+1),r=u+(e+1)+S*(t+1),a=u+(e+1)+S*t;o.push(n,i,a),o.push(i,r,a),w+=6}s.addGroup(d,w,_),d+=w,u+=T}p("z","y","x",-1,-1,n,e,t,a,r,0),p("z","y","x",1,-1,n,e,-t,a,r,1),p("x","z","y",1,1,t,n,e,i,a,2),p("x","z","y",1,-1,t,n,-e,i,a,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new As(l,3)),this.setAttribute("normal",new As(c,3)),this.setAttribute("uv",new As(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eo(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function no(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[n][i]=null):e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function io(t){const e={};for(let n=0;n<t.length;n++){const i=no(t[n]);for(const t in i)e[t]=i[t]}return e}function ro(t){const e=t.getRenderTarget();return null===e?t.outputColorSpace:!0===e.isXRRenderTarget?e.texture.colorSpace:kr.workingColorSpace}const ao={clone:no,merge:io};class so extends xs{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=no(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class oo extends es{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ca,this.projectionMatrix=new Ca,this.projectionMatrixInverse=new Ca,this.coordinateSystem=ur}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const lo=new Jr,co=new Er,ho=new Er;class uo extends oo{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*gr*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*mr*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*gr*Math.atan(Math.tan(.5*mr*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){lo.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(lo.x,lo.y).multiplyScalar(-t/lo.z),lo.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(lo.x,lo.y).multiplyScalar(-t/lo.z)}getViewSize(t,e){return this.getViewBounds(t,co,ho),e.subVectors(ho,co)}setViewOffset(t,e,n,i,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*mr*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/t,e-=a.offsetY*n/s,i*=a.width/t,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const po=-90;class fo extends es{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new uo(po,1,t,e);i.layers=this.layers,this.add(i);const r=new uo(po,1,t,e);r.layers=this.layers,this.add(r);const a=new uo(po,1,t,e);a.layers=this.layers,this.add(a);const s=new uo(po,1,t,e);s.layers=this.layers,this.add(s);const o=new uo(po,1,t,e);o.layers=this.layers,this.add(o);const l=new uo(po,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,a,s,o]=e;for(const t of e)this.remove(t);if(t===ur)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),s.up.set(0,1,0),s.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==dr)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),s.up.set(0,-1,0),s.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const t of e)this.add(t),t.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,a,s,o,l,c]=this.children,h=t.getRenderTarget(),u=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,r),t.setRenderTarget(n,1,i),t.render(e,a),t.setRenderTarget(n,2,i),t.render(e,s),t.setRenderTarget(n,3,i),t.render(e,o),t.setRenderTarget(n,4,i),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5,i),t.render(e,c),t.setRenderTarget(h,u,d),t.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class mo extends jr{constructor(t,e,n,i,r,a,s,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:Fn,n,i,r,a,s,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class go extends $r{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new mo(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:qn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new eo(5,5,5),r=new so({name:"CubemapFromEquirect",uniforms:no(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=e;const a=new Qs(i,r),s=e.minFilter;e.minFilter===Yn&&(e.minFilter=qn);return new fo(1,10,this).update(t,a),e.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(r)}}const _o=new Jr,vo=new Jr,yo=new Tr;class xo{constructor(t=new Jr(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=_o.subVectors(n,e).cross(vo.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(_o),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||yo.getNormalMatrix(t),i=this.coplanarPoint(_o).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const bo=new ya,Mo=new Jr;class So{constructor(t=new xo,e=new xo,n=new xo,i=new xo,r=new xo,a=new xo){this.planes=[t,e,n,i,r,a]}set(t,e,n,i,r,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=2e3){const n=this.planes,i=t.elements,r=i[0],a=i[1],s=i[2],o=i[3],l=i[4],c=i[5],h=i[6],u=i[7],d=i[8],p=i[9],f=i[10],m=i[11],g=i[12],_=i[13],v=i[14],y=i[15];if(n[0].setComponents(o-r,u-l,m-d,y-g).normalize(),n[1].setComponents(o+r,u+l,m+d,y+g).normalize(),n[2].setComponents(o+a,u+c,m+p,y+_).normalize(),n[3].setComponents(o-a,u-c,m-p,y-_).normalize(),n[4].setComponents(o-s,u-h,m-f,y-v).normalize(),e===ur)n[5].setComponents(o+s,u+h,m+f,y+v).normalize();else{if(e!==dr)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);n[5].setComponents(s,h,f,v).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),bo.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),bo.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(bo)}intersectsSprite(t){return bo.center.set(0,0,0),bo.radius=.7071067811865476,bo.applyMatrix4(t.matrixWorld),this.intersectsSphere(bo)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Mo.x=i.normal.x>0?t.max.x:t.min.x,Mo.y=i.normal.y>0?t.max.y:t.min.y,Mo.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Mo)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Eo(){let t=null,e=!1,n=null,i=null;function r(e,a){n(e,a),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function To(t){const e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const i=e.get(n);i&&(t.deleteBuffer(i.buffer),e.delete(n))},update:function(n,i){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){const t=e.get(n);return void((!t||t.version<n.version)&&e.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}const r=e.get(n);if(void 0===r)e.set(n,function(e,n){const i=e.array,r=e.usage,a=i.byteLength,s=t.createBuffer();let o;if(t.bindBuffer(n,s),t.bufferData(n,i,r),e.onUploadCallback(),i instanceof Float32Array)o=t.FLOAT;else if(i instanceof Uint16Array)o=e.isFloat16BufferAttribute?t.HALF_FLOAT:t.UNSIGNED_SHORT;else if(i instanceof Int16Array)o=t.SHORT;else if(i instanceof Uint32Array)o=t.UNSIGNED_INT;else if(i instanceof Int32Array)o=t.INT;else if(i instanceof Int8Array)o=t.BYTE;else if(i instanceof Uint8Array)o=t.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=t.UNSIGNED_BYTE}return{buffer:s,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,size:a}}(n,i));else if(r.version<n.version){if(r.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,n,i){const r=n.array,a=n._updateRange,s=n.updateRanges;if(t.bindBuffer(i,e),-1===a.count&&0===s.length&&t.bufferSubData(i,0,r),0!==s.length){for(let e=0,n=s.length;e<n;e++){const n=s[e];t.bufferSubData(i,n.start*r.BYTES_PER_ELEMENT,r,n.start,n.count)}n.clearUpdateRanges()}-1!==a.count&&(t.bufferSubData(i,a.offset*r.BYTES_PER_ELEMENT,r,a.offset,a.count),a.count=-1),n.onUploadCallback()}(r.buffer,n,i),r.version=n.version}}}}class wo extends Ns{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,a=e/2,s=Math.floor(n),o=Math.floor(i),l=s+1,c=o+1,h=t/s,u=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<c;t++){const e=t*u-a;for(let n=0;n<l;n++){const i=n*h-r;p.push(i,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){const n=e+l*t,i=e+l*(t+1),r=e+1+l*(t+1),a=e+1+l*t;d.push(n,i,a),d.push(i,r,a)}this.setIndex(d),this.setAttribute("position",new As(p,3)),this.setAttribute("normal",new As(f,3)),this.setAttribute("uv",new As(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new wo(t.width,t.height,t.widthSegments,t.heightSegments)}}const Ao={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t\n\t\t#else\n\t\t\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},Co={common:{diffuse:{value:new _s(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Tr},alphaMap:{value:null},alphaMapTransform:{value:new Tr},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Tr}},envmap:{envMap:{value:null},envMapRotation:{value:new Tr},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Tr}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Tr}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Tr},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Tr},normalScale:{value:new Er(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Tr},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Tr}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Tr}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Tr}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _s(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _s(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Tr},alphaTest:{value:0},uvTransform:{value:new Tr}},sprite:{diffuse:{value:new _s(16777215)},opacity:{value:1},center:{value:new Er(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Tr},alphaMap:{value:null},alphaMapTransform:{value:new Tr},alphaTest:{value:0}}},Ro={basic:{uniforms:io([Co.common,Co.specularmap,Co.envmap,Co.aomap,Co.lightmap,Co.fog]),vertexShader:Ao.meshbasic_vert,fragmentShader:Ao.meshbasic_frag},lambert:{uniforms:io([Co.common,Co.specularmap,Co.envmap,Co.aomap,Co.lightmap,Co.emissivemap,Co.bumpmap,Co.normalmap,Co.displacementmap,Co.fog,Co.lights,{emissive:{value:new _s(0)}}]),vertexShader:Ao.meshlambert_vert,fragmentShader:Ao.meshlambert_frag},phong:{uniforms:io([Co.common,Co.specularmap,Co.envmap,Co.aomap,Co.lightmap,Co.emissivemap,Co.bumpmap,Co.normalmap,Co.displacementmap,Co.fog,Co.lights,{emissive:{value:new _s(0)},specular:{value:new _s(1118481)},shininess:{value:30}}]),vertexShader:Ao.meshphong_vert,fragmentShader:Ao.meshphong_frag},standard:{uniforms:io([Co.common,Co.envmap,Co.aomap,Co.lightmap,Co.emissivemap,Co.bumpmap,Co.normalmap,Co.displacementmap,Co.roughnessmap,Co.metalnessmap,Co.fog,Co.lights,{emissive:{value:new _s(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ao.meshphysical_vert,fragmentShader:Ao.meshphysical_frag},toon:{uniforms:io([Co.common,Co.aomap,Co.lightmap,Co.emissivemap,Co.bumpmap,Co.normalmap,Co.displacementmap,Co.gradientmap,Co.fog,Co.lights,{emissive:{value:new _s(0)}}]),vertexShader:Ao.meshtoon_vert,fragmentShader:Ao.meshtoon_frag},matcap:{uniforms:io([Co.common,Co.bumpmap,Co.normalmap,Co.displacementmap,Co.fog,{matcap:{value:null}}]),vertexShader:Ao.meshmatcap_vert,fragmentShader:Ao.meshmatcap_frag},points:{uniforms:io([Co.points,Co.fog]),vertexShader:Ao.points_vert,fragmentShader:Ao.points_frag},dashed:{uniforms:io([Co.common,Co.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ao.linedashed_vert,fragmentShader:Ao.linedashed_frag},depth:{uniforms:io([Co.common,Co.displacementmap]),vertexShader:Ao.depth_vert,fragmentShader:Ao.depth_frag},normal:{uniforms:io([Co.common,Co.bumpmap,Co.normalmap,Co.displacementmap,{opacity:{value:1}}]),vertexShader:Ao.meshnormal_vert,fragmentShader:Ao.meshnormal_frag},sprite:{uniforms:io([Co.sprite,Co.fog]),vertexShader:Ao.sprite_vert,fragmentShader:Ao.sprite_frag},background:{uniforms:{uvTransform:{value:new Tr},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ao.background_vert,fragmentShader:Ao.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Tr}},vertexShader:Ao.backgroundCube_vert,fragmentShader:Ao.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ao.cube_vert,fragmentShader:Ao.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ao.equirect_vert,fragmentShader:Ao.equirect_frag},distanceRGBA:{uniforms:io([Co.common,Co.displacementmap,{referencePosition:{value:new Jr},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ao.distanceRGBA_vert,fragmentShader:Ao.distanceRGBA_frag},shadow:{uniforms:io([Co.lights,Co.fog,{color:{value:new _s(0)},opacity:{value:1}}]),vertexShader:Ao.shadow_vert,fragmentShader:Ao.shadow_frag}};Ro.physical={uniforms:io([Ro.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Tr},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Tr},clearcoatNormalScale:{value:new Er(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Tr},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Tr},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Tr},sheen:{value:0},sheenColor:{value:new _s(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Tr},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Tr},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Tr},transmissionSamplerSize:{value:new Er},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Tr},attenuationDistance:{value:0},attenuationColor:{value:new _s(0)},specularColor:{value:new _s(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Tr},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Tr},anisotropyVector:{value:new Er},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Tr}}]),vertexShader:Ao.meshphysical_vert,fragmentShader:Ao.meshphysical_frag};const Po={r:0,b:0,g:0},Lo=new Fa,Do=new Ca;function Uo(t,e,n,i,r,a,s){const o=new _s(0);let l,c,h=!0===a?0:1,u=null,d=0,p=null;function f(t){let i=!0===t.isScene?t.background:null;if(i&&i.isTexture){i=(t.backgroundBlurriness>0?n:e).get(i)}return i}function m(e,n){e.getRGB(Po,ro(t)),i.buffers.color.setClear(Po.r,Po.g,Po.b,n,s)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),h=e,m(o,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,m(o,h)},render:function(e){let n=!1;const r=f(e);null===r?m(o,h):r&&r.isColor&&(m(r,1),n=!0);const a=t.xr.getEnvironmentBlendMode();"additive"===a?i.buffers.color.setClear(0,0,0,1,s):"alpha-blend"===a&&i.buffers.color.setClear(0,0,0,0,s),(t.autoClear||n)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil))},addToRenderList:function(e,n){const i=f(n);i&&(i.isCubeTexture||i.mapping===zn)?(void 0===c&&(c=new Qs(new eo(1,1,1),new so({name:"BackgroundCubeMaterial",uniforms:no(Ro.backgroundCube.uniforms),vertexShader:Ro.backgroundCube.vertexShader,fragmentShader:Ro.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),Lo.copy(n.backgroundRotation),Lo.x*=-1,Lo.y*=-1,Lo.z*=-1,i.isCubeTexture&&!1===i.isRenderTargetTexture&&(Lo.y*=-1,Lo.z*=-1),c.material.uniforms.envMap.value=i,c.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(Do.makeRotationFromEuler(Lo)),c.material.toneMapped=kr.getTransfer(i.colorSpace)!==Zi,u===i&&d===i.version&&p===t.toneMapping||(c.material.needsUpdate=!0,u=i,d=i.version,p=t.toneMapping),c.layers.enableAll(),e.unshift(c,c.geometry,c.material,0,0,null)):i&&i.isTexture&&(void 0===l&&(l=new Qs(new wo(2,2),new so({name:"BackgroundMaterial",uniforms:no(Ro.background.uniforms),vertexShader:Ro.background.vertexShader,fragmentShader:Ro.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=i,l.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,l.material.toneMapped=kr.getTransfer(i.colorSpace)!==Zi,!0===i.matrixAutoUpdate&&i.updateMatrix(),l.material.uniforms.uvTransform.value.copy(i.matrix),u===i&&d===i.version&&p===t.toneMapping||(l.material.needsUpdate=!0,u=i,d=i.version,p=t.toneMapping),l.layers.enableAll(),e.unshift(l,l.geometry,l.material,0,0,null))}}}function Io(t,e){const n=t.getParameter(t.MAX_VERTEX_ATTRIBS),i={},r=c(null);let a=r,s=!1;function o(e){return t.bindVertexArray(e)}function l(e){return t.deleteVertexArray(e)}function c(t){const e=[],i=[],r=[];for(let t=0;t<n;t++)e[t]=0,i[t]=0,r[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:r,object:t,attributes:{},index:null}}function h(){const t=a.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function u(t){d(t,0)}function d(e,n){const i=a.newAttributes,r=a.enabledAttributes,s=a.attributeDivisors;i[e]=1,0===r[e]&&(t.enableVertexAttribArray(e),r[e]=1),s[e]!==n&&(t.vertexAttribDivisor(e,n),s[e]=n)}function p(){const e=a.newAttributes,n=a.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function f(e,n,i,r,a,s,o){!0===o?t.vertexAttribIPointer(e,n,i,a,s):t.vertexAttribPointer(e,n,i,r,a,s)}function m(){g(),s=!0,a!==r&&(a=r,o(a.object))}function g(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:function(n,r,l,m,g){let _=!1;const v=function(e,n,r){const a=!0===r.wireframe;let s=i[e.id];void 0===s&&(s={},i[e.id]=s);let o=s[n.id];void 0===o&&(o={},s[n.id]=o);let l=o[a];void 0===l&&(l=c(t.createVertexArray()),o[a]=l);return l}(m,l,r);a!==v&&(a=v,o(a.object)),_=function(t,e,n,i){const r=a.attributes,s=e.attributes;let o=0;const l=n.getAttributes();for(const e in l){if(l[e].location>=0){const n=r[e];let i=s[e];if(void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;o++}}return a.attributesNum!==o||a.index!==i}(n,m,l,g),_&&function(t,e,n,i){const r={},s=e.attributes;let o=0;const l=n.getAttributes();for(const e in l){if(l[e].location>=0){let n=s[e];void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),r[e]=i,o++}}a.attributes=r,a.attributesNum=o,a.index=i}(n,m,l,g),null!==g&&e.update(g,t.ELEMENT_ARRAY_BUFFER),(_||s)&&(s=!1,function(n,i,r,a){h();const s=a.attributes,o=r.getAttributes(),l=i.defaultAttributeValues;for(const i in o){const r=o[i];if(r.location>=0){let o=s[i];if(void 0===o&&("instanceMatrix"===i&&n.instanceMatrix&&(o=n.instanceMatrix),"instanceColor"===i&&n.instanceColor&&(o=n.instanceColor)),void 0!==o){const i=o.normalized,s=o.itemSize,l=e.get(o);if(void 0===l)continue;const c=l.buffer,h=l.type,p=l.bytesPerElement,m=h===t.INT||h===t.UNSIGNED_INT||o.gpuType===ti;if(o.isInterleavedBufferAttribute){const e=o.data,l=e.stride,g=o.offset;if(e.isInstancedInterleavedBuffer){for(let t=0;t<r.locationSize;t++)d(r.location+t,e.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let t=0;t<r.locationSize;t++)u(r.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<r.locationSize;t++)f(r.location+t,s/r.locationSize,h,i,l*p,(g+s/r.locationSize*t)*p,m)}else{if(o.isInstancedBufferAttribute){for(let t=0;t<r.locationSize;t++)d(r.location+t,o.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let t=0;t<r.locationSize;t++)u(r.location+t);t.bindBuffer(t.ARRAY_BUFFER,c);for(let t=0;t<r.locationSize;t++)f(r.location+t,s/r.locationSize,h,i,s*p,s/r.locationSize*t*p,m)}}else if(void 0!==l){const e=l[i];if(void 0!==e)switch(e.length){case 2:t.vertexAttrib2fv(r.location,e);break;case 3:t.vertexAttrib3fv(r.location,e);break;case 4:t.vertexAttrib4fv(r.location,e);break;default:t.vertexAttrib1fv(r.location,e)}}}}p()}(n,r,l,m),null!==g&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,e.get(g).buffer))},reset:m,resetDefaultState:g,dispose:function(){m();for(const t in i){const e=i[t];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t]}},releaseStatesOfGeometry:function(t){if(void 0===i[t.id])return;const e=i[t.id];for(const t in e){const n=e[t];for(const t in n)l(n[t].object),delete n[t];delete e[t]}delete i[t.id]},releaseStatesOfProgram:function(t){for(const e in i){const n=i[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)l(r[t].object),delete r[t];delete n[t.id]}},initAttributes:h,enableAttribute:u,disableUnusedAttributes:p}}function No(t,e,n){let i;function r(e,r,a){0!==a&&(t.drawArraysInstanced(i,e,r,a),n.update(r,i,a))}this.setMode=function(t){i=t},this.render=function(e,r){t.drawArrays(i,e,r),n.update(r,i,1)},this.renderInstances=r,this.renderMultiDraw=function(t,r,a){if(0===a)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,t,0,r,0,a);let s=0;for(let t=0;t<a;t++)s+=r[t];n.update(s,i,1)},this.renderMultiDrawInstances=function(t,a,s,o){if(0===s)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<t.length;e++)r(t[e],a[e],o[e]);else{l.multiDrawArraysInstancedWEBGL(i,t,0,a,0,o,0,s);let e=0;for(let t=0;t<s;t++)e+=a[t];for(let t=0;t<o.length;t++)n.update(e,i,o[t])}}}function ko(t,e,n,i){let r;function a(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let s=void 0!==n.precision?n.precision:"highp";const o=a(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const l=!0===n.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:a,textureFormatReadable:function(e){return e===li||i.convert(e)===t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){const r=n===ii&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(n!==Kn&&i.convert(n)!==t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE)&&n!==ni&&!r)},precision:s,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:t.getParameter(t.MAX_TEXTURE_SIZE),maxCubemapSize:t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:t.getParameter(t.MAX_VERTEX_ATTRIBS),maxVertexUniforms:t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:t.getParameter(t.MAX_VARYING_VECTORS),maxFragmentUniforms:t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:h>0,maxSamples:t.getParameter(t.MAX_SAMPLES)}}function Oo(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new xo,o=new Tr,l={value:null,needsUpdate:!1};function c(t,n,i,r){const a=null!==t?t.length:0;let c=null;if(0!==a){if(c=l.value,!0!==r||null===c){const e=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=i;e!==a;++e,n+=4)s.copy(t[e]).applyMatrix4(r,o),s.normal.toArray(c,n),c[n+3]=s.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const n=0!==t.length||e||0!==i||r;return r=e,i=t.length,n},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(t,e){n=c(t,e,0)},this.setState=function(s,o,h){const u=s.clippingPlanes,d=s.clipIntersection,p=s.clipShadows,f=t.get(s);if(!r||null===u||0===u.length||a&&!p)a?c(null):function(){l.value!==n&&(l.value=n,l.needsUpdate=i>0);e.numPlanes=i,e.numIntersection=0}();else{const t=a?0:i,e=4*t;let r=f.clippingState||null;l.value=r,r=c(u,o,e,h);for(let t=0;t!==e;++t)r[t]=n[t];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Fo(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=Fn:304===e&&(t.mapping=Bn),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping;if(303===a||304===a){if(e.has(r)){return n(e.get(r).texture,r.mapping)}{const a=r.image;if(a&&a.height>0){const s=new go(a.height);return s.fromEquirectangularTexture(t,r),e.set(r,s),r.addEventListener("dispose",i),n(s.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}class Bo extends oo{constructor(t=-1,e=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,a=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,a=r+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const zo=[.125,.215,.35,.446,.526,.582],Ho=20,Vo=new Bo,Go=new _s;let Wo=null,jo=0,Xo=0,qo=!1;const $o=(1+Math.sqrt(5))/2,Yo=1/$o,Ko=[new Jr(-$o,Yo,0),new Jr($o,Yo,0),new Jr(-Yo,0,$o),new Jr(Yo,0,$o),new Jr(0,$o,-Yo),new Jr(0,$o,Yo),new Jr(-1,1,-1),new Jr(1,1,-1),new Jr(-1,1,1),new Jr(1,1,1)];class Zo{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Wo=this._renderer.getRenderTarget(),jo=this._renderer.getActiveCubeFace(),Xo=this._renderer.getActiveMipmapLevel(),qo=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=el(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=tl(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Wo,jo,Xo),this._renderer.xr.enabled=qo,t.scissorTest=!1,Qo(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Fn||t.mapping===Bn?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Wo=this._renderer.getRenderTarget(),jo=this._renderer.getActiveCubeFace(),Xo=this._renderer.getActiveMipmapLevel(),qo=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:qn,minFilter:qn,generateMipmaps:!1,type:ii,format:li,colorSpace:qi,depthBuffer:!1},i=Jo(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Jo(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],n=[],i=[];let r=t;const a=t-4+1+zo.length;for(let s=0;s<a;s++){const a=Math.pow(2,r);n.push(a);let o=1/a;s>t-4?o=zo[s-t+4-1]:0===s&&(o=0),i.push(o);const l=1/(a-2),c=-l,h=1+l,u=[c,c,h,c,h,h,c,c,h,h,c,h],d=6,p=6,f=3,m=2,g=1,_=new Float32Array(f*p*d),v=new Float32Array(m*p*d),y=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];_.set(i,f*p*t),v.set(u,m*p*t);const r=[t,t,t,t,t,t];y.set(r,g*p*t)}const x=new Ns;x.setAttribute("position",new Es(_,f)),x.setAttribute("uv",new Es(v,m)),x.setAttribute("faceIndex",new Es(y,g)),e.push(x),r>4&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(t,e,n){const i=new Float32Array(Ho),r=new Jr(0,1,0),a=new so({name:"SphericalGaussianBlur",defines:{n:Ho,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:nl(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return a}(i,t,e)}return i}_compileMaterial(t){const e=new Qs(this._lodPlanes[0],t);this._renderer.compile(e,Vo)}_sceneToCubeUV(t,e,n,i){const r=new uo(90,1,e,n),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.toneMapping;o.getClearColor(Go),o.toneMapping=0,o.autoClear=!1;const h=new bs({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),u=new Qs(new eo,h);let d=!1;const p=t.background;p?p.isColor&&(h.color.copy(p),t.background=null,d=!0):(h.color.copy(Go),d=!0);for(let e=0;e<6;e++){const n=e%3;0===n?(r.up.set(0,a[e],0),r.lookAt(s[e],0,0)):1===n?(r.up.set(0,0,a[e]),r.lookAt(0,s[e],0)):(r.up.set(0,a[e],0),r.lookAt(0,0,s[e]));const l=this._cubeSize;Qo(i,n*l,e>2?l:0,l,l),o.setRenderTarget(i),d&&o.render(u,r),o.render(t,r)}u.geometry.dispose(),u.material.dispose(),o.toneMapping=c,o.autoClear=l,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Fn||t.mapping===Bn;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=el()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=tl());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Qs(this._lodPlanes[0],r);r.uniforms.envMap.value=t;const s=this._cubeSize;Qo(e,0,0,3*s,2*s),n.setRenderTarget(e),n.render(a,Vo)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let e=1;e<i;e++){const n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),r=Ko[(i-e-1)%Ko.length];this._blur(t,e-1,e,n,r)}e.autoClear=n}_blur(t,e,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,n,i,"latitudinal",r),this._halfBlur(a,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,a,s){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Qs(this._lodPlanes[i],l),h=l.uniforms,u=this._sizeLods[n]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):Ho;f>Ho&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);const m=[];let g=0;for(let t=0;t<Ho;++t){const e=t/p,n=Math.exp(-e*e/2);m.push(n),0===t?g+=n:t<f&&(g+=2*n)}for(let t=0;t<m.length;t++)m[t]=m[t]/g;h.envMap.value=t.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===a,s&&(h.poleAxis.value=s);const{_lodMax:_}=this;h.dTheta.value=d,h.mipInt.value=_-n;const v=this._sizeLods[i];Qo(e,3*v*(i>_-4?i-_+4:0),4*(this._cubeSize-v),3*v,2*v),o.setRenderTarget(e),o.render(c,Vo)}}function Jo(t,e,n){const i=new $r(t,e,n);return i.texture.mapping=zn,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Qo(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function tl(){return new so({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:nl(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function el(){return new so({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:nl(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function nl(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function il(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping,s=303===a||304===a,o=a===Fn||a===Bn;if(s||o){let a=e.get(r);const l=void 0!==a?a.texture.pmremVersion:0;if(r.isRenderTargetTexture&&r.pmremVersion!==l)return null===n&&(n=new Zo(t)),a=s?n.fromEquirectangular(r,a):n.fromCubemap(r,a),a.texture.pmremVersion=r.pmremVersion,e.set(r,a),a.texture;if(void 0!==a)return a.texture;{const l=r.image;return s&&l&&l.height>0||o&&l&&function(t){let e=0;const n=6;for(let i=0;i<n;i++)void 0!==t[i]&&e++;return e===n}(l)?(null===n&&(n=new Zo(t)),a=s?n.fromEquirectangular(r):n.fromCubemap(r),a.texture.pmremVersion=r.pmremVersion,e.set(r,a),r.addEventListener("dispose",i),a.texture):null}}}return r},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function rl(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(t){const e=n(t);return null===e&&Lr("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function al(t,e,n,i){const r={},a=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);for(const t in o.morphAttributes){const n=o.morphAttributes[t];for(let t=0,i=n.length;t<i;t++)e.remove(n[t])}o.removeEventListener("dispose",s),delete r[o.id];const l=a.get(o);l&&(e.remove(l),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],a=t[e+2];n.push(i,r,r,a,a,i)}}else{if(void 0===r)return;{const t=r.array;s=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}}const o=new(Ar(n)?ws:Ts)(n,1);o.version=s;const l=a.get(t);l&&e.remove(l),a.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",s),r[e.id]=!0,n.memory.geometries++),e},update:function(n){const i=n.attributes;for(const n in i)e.update(i[n],t.ARRAY_BUFFER);const r=n.morphAttributes;for(const n in r){const i=r[n];for(let n=0,r=i.length;n<r;n++)e.update(i[n],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return a.get(t)}}}function sl(t,e,n){let i,r,a;function s(e,s,o){0!==o&&(t.drawElementsInstanced(i,s,r,e*a,o),n.update(s,i,o))}this.setMode=function(t){i=t},this.setIndex=function(t){r=t.type,a=t.bytesPerElement},this.render=function(e,s){t.drawElements(i,s,r,e*a),n.update(s,i,1)},this.renderInstances=s,this.renderMultiDraw=function(t,a,s){if(0===s)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,a,0,r,t,0,s);let o=0;for(let t=0;t<s;t++)o+=a[t];n.update(o,i,1)},this.renderMultiDrawInstances=function(t,o,l,c){if(0===l)return;const h=e.get("WEBGL_multi_draw");if(null===h)for(let e=0;e<t.length;e++)s(t[e]/a,o[e],c[e]);else{h.multiDrawElementsInstancedWEBGL(i,o,0,r,t,0,c,0,l);let e=0;for(let t=0;t<l;t++)e+=o[t];for(let t=0;t<c.length;t++)n.update(e,i,c[t])}}}function ol(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,r){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=r*(n/3);break;case t.LINES:e.lines+=r*(n/2);break;case t.LINE_STRIP:e.lines+=r*(n-1);break;case t.LINE_LOOP:e.lines+=r*n;break;case t.POINTS:e.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function ll(t,e,n){const i=new WeakMap,r=new Xr;return{update:function(a,s,o){const l=a.morphTargetInfluences,c=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,h=void 0!==c?c.length:0;let u=i.get(s);if(void 0===u||u.count!==h){void 0!==u&&u.texture.dispose();const d=void 0!==s.morphAttributes.position,p=void 0!==s.morphAttributes.normal,f=void 0!==s.morphAttributes.color,m=s.morphAttributes.position||[],g=s.morphAttributes.normal||[],_=s.morphAttributes.color||[];let v=0;!0===d&&(v=1),!0===p&&(v=2),!0===f&&(v=3);let y=s.attributes.position.count*v,x=1;y>e.maxTextureSize&&(x=Math.ceil(y/e.maxTextureSize),y=e.maxTextureSize);const b=new Float32Array(y*x*4*h),M=new Yr(b,y,x,h);M.type=ni,M.needsUpdate=!0;const S=4*v;for(let T=0;T<h;T++){const w=m[T],A=g[T],C=_[T],R=y*x*4*T;for(let P=0;P<w.count;P++){const L=P*S;!0===d&&(r.fromBufferAttribute(w,P),b[R+L+0]=r.x,b[R+L+1]=r.y,b[R+L+2]=r.z,b[R+L+3]=0),!0===p&&(r.fromBufferAttribute(A,P),b[R+L+4]=r.x,b[R+L+5]=r.y,b[R+L+6]=r.z,b[R+L+7]=0),!0===f&&(r.fromBufferAttribute(C,P),b[R+L+8]=r.x,b[R+L+9]=r.y,b[R+L+10]=r.z,b[R+L+11]=4===C.itemSize?r.w:1)}}function E(){M.dispose(),i.delete(s),s.removeEventListener("dispose",E)}u={count:h,texture:M,size:new Er(y,x)},i.set(s,u),s.addEventListener("dispose",E)}if(!0===a.isInstancedMesh&&null!==a.morphTexture)o.getUniforms().setValue(t,"morphTexture",a.morphTexture,n);else{let D=0;for(let I=0;I<l.length;I++)D+=l[I];const U=s.morphTargetsRelative?1:1-D;o.getUniforms().setValue(t,"morphTargetBaseInfluence",U),o.getUniforms().setValue(t,"morphTargetInfluences",l)}o.getUniforms().setValue(t,"morphTargetsTexture",u.texture,n),o.getUniforms().setValue(t,"morphTargetsTextureSize",u.size)}}}function cl(t,e,n,i){let r=new WeakMap;function a(t){const e=t.target;e.removeEventListener("dispose",a),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(s){const o=i.render.frame,l=s.geometry,c=e.get(s,l);if(r.get(c)!==o&&(e.update(c),r.set(c,o)),s.isInstancedMesh&&(!1===s.hasEventListener("dispose",a)&&s.addEventListener("dispose",a),r.get(s)!==o&&(n.update(s.instanceMatrix,t.ARRAY_BUFFER),null!==s.instanceColor&&n.update(s.instanceColor,t.ARRAY_BUFFER),r.set(s,o))),s.isSkinnedMesh){const t=s.skeleton;r.get(t)!==o&&(t.update(),r.set(t,o))}return c},dispose:function(){r=new WeakMap}}}class hl extends jr{constructor(t,e,n,i,r,a,s,o,l,c=1026){if(c!==ci&&c!==hi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===ci&&(n=ei),void 0===n&&c===hi&&(n=si),super(null,i,r,a,s,o,c,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==s?s:Wn,this.minFilter=void 0!==o?o:Wn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}const ul=new jr,dl=new hl(1,1),pl=new Yr,fl=new Kr,ml=new mo,gl=[],_l=[],vl=new Float32Array(16),yl=new Float32Array(9),xl=new Float32Array(4);function bl(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=gl[r];if(void 0===a&&(a=new Float32Array(r),gl[r]=a),0!==e){i.toArray(a,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(a,r)}return a}function Ml(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function Sl(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function El(t,e){let n=_l[e];void 0===n&&(n=new Int32Array(e),_l[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Tl(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function wl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ml(n,e))return;t.uniform2fv(this.addr,e),Sl(n,e)}}function Al(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Ml(n,e))return;t.uniform3fv(this.addr,e),Sl(n,e)}}function Cl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ml(n,e))return;t.uniform4fv(this.addr,e),Sl(n,e)}}function Rl(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ml(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Sl(n,e)}else{if(Ml(n,i))return;xl.set(i),t.uniformMatrix2fv(this.addr,!1,xl),Sl(n,i)}}function Pl(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ml(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Sl(n,e)}else{if(Ml(n,i))return;yl.set(i),t.uniformMatrix3fv(this.addr,!1,yl),Sl(n,i)}}function Ll(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ml(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Sl(n,e)}else{if(Ml(n,i))return;vl.set(i),t.uniformMatrix4fv(this.addr,!1,vl),Sl(n,i)}}function Dl(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Ul(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ml(n,e))return;t.uniform2iv(this.addr,e),Sl(n,e)}}function Il(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Ml(n,e))return;t.uniform3iv(this.addr,e),Sl(n,e)}}function Nl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ml(n,e))return;t.uniform4iv(this.addr,e),Sl(n,e)}}function kl(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Ol(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ml(n,e))return;t.uniform2uiv(this.addr,e),Sl(n,e)}}function Fl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Ml(n,e))return;t.uniform3uiv(this.addr,e),Sl(n,e)}}function Bl(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ml(n,e))return;t.uniform4uiv(this.addr,e),Sl(n,e)}}function zl(t,e,n){const i=this.cache,r=n.allocateTextureUnit();let a;i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),this.type===t.SAMPLER_2D_SHADOW?(dl.compareFunction=515,a=dl):a=ul,n.setTexture2D(e||a,r)}function Hl(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||fl,r)}function Vl(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||ml,r)}function Gl(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||pl,r)}function Wl(t,e){t.uniform1fv(this.addr,e)}function jl(t,e){const n=bl(e,this.size,2);t.uniform2fv(this.addr,n)}function Xl(t,e){const n=bl(e,this.size,3);t.uniform3fv(this.addr,n)}function ql(t,e){const n=bl(e,this.size,4);t.uniform4fv(this.addr,n)}function $l(t,e){const n=bl(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Yl(t,e){const n=bl(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Kl(t,e){const n=bl(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Zl(t,e){t.uniform1iv(this.addr,e)}function Jl(t,e){t.uniform2iv(this.addr,e)}function Ql(t,e){t.uniform3iv(this.addr,e)}function tc(t,e){t.uniform4iv(this.addr,e)}function ec(t,e){t.uniform1uiv(this.addr,e)}function nc(t,e){t.uniform2uiv(this.addr,e)}function ic(t,e){t.uniform3uiv(this.addr,e)}function rc(t,e){t.uniform4uiv(this.addr,e)}function ac(t,e,n){const i=this.cache,r=e.length,a=El(n,r);Ml(i,a)||(t.uniform1iv(this.addr,a),Sl(i,a));for(let t=0;t!==r;++t)n.setTexture2D(e[t]||ul,a[t])}function sc(t,e,n){const i=this.cache,r=e.length,a=El(n,r);Ml(i,a)||(t.uniform1iv(this.addr,a),Sl(i,a));for(let t=0;t!==r;++t)n.setTexture3D(e[t]||fl,a[t])}function oc(t,e,n){const i=this.cache,r=e.length,a=El(n,r);Ml(i,a)||(t.uniform1iv(this.addr,a),Sl(i,a));for(let t=0;t!==r;++t)n.setTextureCube(e[t]||ml,a[t])}function lc(t,e,n){const i=this.cache,r=e.length,a=El(n,r);Ml(i,a)||(t.uniform1iv(this.addr,a),Sl(i,a));for(let t=0;t!==r;++t)n.setTexture2DArray(e[t]||pl,a[t])}class cc{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return Tl;case 35664:return wl;case 35665:return Al;case 35666:return Cl;case 35674:return Rl;case 35675:return Pl;case 35676:return Ll;case 5124:case 35670:return Dl;case 35667:case 35671:return Ul;case 35668:case 35672:return Il;case 35669:case 35673:return Nl;case 5125:return kl;case 36294:return Ol;case 36295:return Fl;case 36296:return Bl;case 35678:case 36198:case 36298:case 36306:case 35682:return zl;case 35679:case 36299:case 36307:return Hl;case 35680:case 36300:case 36308:case 36293:return Vl;case 36289:case 36303:case 36311:case 36292:return Gl}}(e.type)}}class hc{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Wl;case 35664:return jl;case 35665:return Xl;case 35666:return ql;case 35674:return $l;case 35675:return Yl;case 35676:return Kl;case 5124:case 35670:return Zl;case 35667:case 35671:return Jl;case 35668:case 35672:return Ql;case 35669:case 35673:return tc;case 5125:return ec;case 36294:return nc;case 36295:return ic;case 36296:return rc;case 35678:case 36198:case 36298:case 36306:case 35682:return ac;case 35679:case 36299:case 36307:return sc;case 35680:case 36300:case 36308:case 36293:return oc;case 36289:case 36303:case 36311:case 36292:return lc}}(e.type)}}class uc{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const dc=/(\w+)(\])?(\[|\.)?/g;function pc(t,e){t.seq.push(e),t.map[e.id]=e}function fc(t,e,n){const i=t.name,r=i.length;for(dc.lastIndex=0;;){const a=dc.exec(i),s=dc.lastIndex;let o=a[1];const l="]"===a[2],c=a[3];if(l&&(o|=0),void 0===c||"["===c&&s+2===r){pc(n,void 0===c?new cc(o,t,e):new hc(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new uc(o),pc(n,t)),n=t}}}class mc{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);fc(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,a=e.length;r!==a;++r){const a=e[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n}}function gc(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let _c=0;function vc(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const i=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(t,e){const n=t.split("\n"),i=[],r=Math.max(e-6,0),a=Math.min(e+6,n.length);for(let t=r;t<a;t++){const r=t+1;i.push(`${r===e?">":" "} ${r}: ${n[t]}`)}return i.join("\n")}(t.getShaderSource(e),i)}return r}function yc(t,e){const n=function(t){const e=kr.getPrimaries(kr.workingColorSpace),n=kr.getPrimaries(t);let i;switch(e===n?i="":e===Qi&&n===Ji?i="LinearDisplayP3ToLinearSRGB":e===Ji&&n===Qi&&(i="LinearSRGBToLinearDisplayP3"),t){case qi:case Yi:return[i,"LinearTransferOETF"];case Xi:case $i:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",t),[i,"LinearTransferOETF"]}}(e);return`vec4 ${t}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function xc(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="Cineon";break;case 4:n="ACESFilmic";break;case 6:n="AgX";break;case 7:n="Neutral";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const bc=new Jr;function Mc(){kr.getLuminanceCoefficients(bc);return["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${bc.x.toFixed(4)}, ${bc.y.toFixed(4)}, ${bc.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")}function Sc(t){return""!==t}function Ec(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Tc(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const wc=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ac(t){return t.replace(wc,Rc)}const Cc=new Map;function Rc(t,e){let n=Ao[e];if(void 0===n){const t=Cc.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");n=Ao[t],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,t)}return Ac(n)}const Pc=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Lc(t){return t.replace(Pc,Dc)}function Dc(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function Uc(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\tprecision ${t.precision} sampler3D;\n\tprecision ${t.precision} sampler2DArray;\n\tprecision ${t.precision} sampler2DShadow;\n\tprecision ${t.precision} samplerCubeShadow;\n\tprecision ${t.precision} sampler2DArrayShadow;\n\tprecision ${t.precision} isampler2D;\n\tprecision ${t.precision} isampler3D;\n\tprecision ${t.precision} isamplerCube;\n\tprecision ${t.precision} isampler2DArray;\n\tprecision ${t.precision} usampler2D;\n\tprecision ${t.precision} usampler3D;\n\tprecision ${t.precision} usamplerCube;\n\tprecision ${t.precision} usampler2DArray;\n\t`;return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Ic(t,e,n,i){const r=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Fn:case Bn:e="ENVMAP_TYPE_CUBE";break;case zn:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===Bn&&(e="ENVMAP_MODE_REFRACTION");return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),d=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),p=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Sc).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(a),m=r.createProgram();let g,_,v=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(Sc).join("\n"),g.length>0&&(g+="\n"),_=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(Sc).join("\n"),_.length>0&&(_+="\n")):(g=[Uc(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Sc).join("\n"),_=[Uc(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Ao.tonemapping_pars_fragment:"",0!==n.toneMapping?xc("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Ao.colorspace_pars_fragment,yc("linearToOutputTexel",n.outputColorSpace),Mc(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Sc).join("\n")),s=Ac(s),s=Ec(s,n),s=Tc(s,n),o=Ac(o),o=Ec(o,n),o=Tc(o,n),s=Lc(s),o=Lc(o),!0!==n.isRawShaderMaterial&&(v="#version 300 es\n",g=[p,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,_=["#define varying in",n.glslVersion===hr?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===hr?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+_);const y=v+g+s,x=v+_+o,b=gc(r,r.VERTEX_SHADER,y),M=gc(r,r.FRAGMENT_SHADER,x);function S(e){if(t.debug.checkShaderErrors){const n=r.getProgramInfoLog(m).trim(),i=r.getShaderInfoLog(b).trim(),a=r.getShaderInfoLog(M).trim();let s=!0,o=!0;if(!1===r.getProgramParameter(m,r.LINK_STATUS))if(s=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(r,m,b,M);else{const t=vc(r,b,"vertex"),i=vc(r,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(m,r.VALIDATE_STATUS)+"\n\nMaterial Name: "+e.name+"\nMaterial Type: "+e.type+"\n\nProgram Info Log: "+n+"\n"+t+"\n"+i)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):""!==i&&""!==a||(o=!1);o&&(e.diagnostics={runnable:s,programLog:n,vertexShader:{log:i,prefix:g},fragmentShader:{log:a,prefix:_}})}r.deleteShader(b),r.deleteShader(M),E=new mc(r,m),T=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r),a=i.name;let s=1;i.type===t.FLOAT_MAT2&&(s=2),i.type===t.FLOAT_MAT3&&(s=3),i.type===t.FLOAT_MAT4&&(s=4),n[a]={type:i.type,location:t.getAttribLocation(e,a),locationSize:s}}return n}(r,m)}let E,T;r.attachShader(m,b),r.attachShader(m,M),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),this.getUniforms=function(){return void 0===E&&S(this),E},this.getAttributes=function(){return void 0===T&&S(this),T};let w=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===w&&(w=r.getProgramParameter(m,37297)),w},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=_c++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=b,this.fragmentShader=M,this}let Nc=0;class kc{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(t);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new Oc(t),e.set(t,n)),n}}class Oc{constructor(t){this.id=Nc++,this.code=t,this.usedTimes=0}}function Fc(t,e,n,i,r,a,s){const o=new Ba,l=new kc,c=new Set,h=[],u=r.logarithmicDepthBuffer,d=r.vertexTextures;let p=r.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(t){return c.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(a,o,h,g,_){const v=g.fog,y=_.geometry,x=a.isMeshStandardMaterial?g.environment:null,b=(a.isMeshStandardMaterial?n:e).get(a.envMap||x),M=b&&b.mapping===zn?b.image.height:null,S=f[a.type];null!==a.precision&&(p=r.getMaxPrecision(a.precision),p!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead."));const E=y.morphAttributes.position||y.morphAttributes.normal||y.morphAttributes.color,T=void 0!==E?E.length:0;let w,A,C,R,P=0;if(void 0!==y.morphAttributes.position&&(P=1),void 0!==y.morphAttributes.normal&&(P=2),void 0!==y.morphAttributes.color&&(P=3),S){const t=Ro[S];w=t.vertexShader,A=t.fragmentShader}else w=a.vertexShader,A=a.fragmentShader,l.update(a),C=l.getVertexShaderID(a),R=l.getFragmentShaderID(a);const L=t.getRenderTarget(),D=!0===_.isInstancedMesh,U=!0===_.isBatchedMesh,I=!!a.map,N=!!a.matcap,k=!!b,O=!!a.aoMap,F=!!a.lightMap,B=!!a.bumpMap,z=!!a.normalMap,H=!!a.displacementMap,V=!!a.emissiveMap,G=!!a.metalnessMap,W=!!a.roughnessMap,j=a.anisotropy>0,X=a.clearcoat>0,q=a.dispersion>0,$=a.iridescence>0,Y=a.sheen>0,K=a.transmission>0,Z=j&&!!a.anisotropyMap,J=X&&!!a.clearcoatMap,Q=X&&!!a.clearcoatNormalMap,tt=X&&!!a.clearcoatRoughnessMap,et=$&&!!a.iridescenceMap,nt=$&&!!a.iridescenceThicknessMap,it=Y&&!!a.sheenColorMap,rt=Y&&!!a.sheenRoughnessMap,at=!!a.specularMap,st=!!a.specularColorMap,ot=!!a.specularIntensityMap,lt=K&&!!a.transmissionMap,ct=K&&!!a.thicknessMap,ht=!!a.gradientMap,ut=!!a.alphaMap,dt=a.alphaTest>0,pt=!!a.alphaHash,ft=!!a.extensions;let mt=0;a.toneMapped&&(null!==L&&!0!==L.isXRRenderTarget||(mt=t.toneMapping));const gt={shaderID:S,shaderType:a.type,shaderName:a.name,vertexShader:w,fragmentShader:A,defines:a.defines,customVertexShaderID:C,customFragmentShaderID:R,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,batching:U,batchingColor:U&&null!==_._colorsTexture,instancing:D,instancingColor:D&&null!==_.instanceColor,instancingMorph:D&&null!==_.morphTexture,supportsVertexTextures:d,outputColorSpace:null===L?t.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:qi,alphaToCoverage:!!a.alphaToCoverage,map:I,matcap:N,envMap:k,envMapMode:k&&b.mapping,envMapCubeUVHeight:M,aoMap:O,lightMap:F,bumpMap:B,normalMap:z,displacementMap:d&&H,emissiveMap:V,normalMapObjectSpace:z&&1===a.normalMapType,normalMapTangentSpace:z&&0===a.normalMapType,metalnessMap:G,roughnessMap:W,anisotropy:j,anisotropyMap:Z,clearcoat:X,clearcoatMap:J,clearcoatNormalMap:Q,clearcoatRoughnessMap:tt,dispersion:q,iridescence:$,iridescenceMap:et,iridescenceThicknessMap:nt,sheen:Y,sheenColorMap:it,sheenRoughnessMap:rt,specularMap:at,specularColorMap:st,specularIntensityMap:ot,transmission:K,transmissionMap:lt,thicknessMap:ct,gradientMap:ht,opaque:!1===a.transparent&&1===a.blending&&!1===a.alphaToCoverage,alphaMap:ut,alphaTest:dt,alphaHash:pt,combine:a.combine,mapUv:I&&m(a.map.channel),aoMapUv:O&&m(a.aoMap.channel),lightMapUv:F&&m(a.lightMap.channel),bumpMapUv:B&&m(a.bumpMap.channel),normalMapUv:z&&m(a.normalMap.channel),displacementMapUv:H&&m(a.displacementMap.channel),emissiveMapUv:V&&m(a.emissiveMap.channel),metalnessMapUv:G&&m(a.metalnessMap.channel),roughnessMapUv:W&&m(a.roughnessMap.channel),anisotropyMapUv:Z&&m(a.anisotropyMap.channel),clearcoatMapUv:J&&m(a.clearcoatMap.channel),clearcoatNormalMapUv:Q&&m(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:tt&&m(a.clearcoatRoughnessMap.channel),iridescenceMapUv:et&&m(a.iridescenceMap.channel),iridescenceThicknessMapUv:nt&&m(a.iridescenceThicknessMap.channel),sheenColorMapUv:it&&m(a.sheenColorMap.channel),sheenRoughnessMapUv:rt&&m(a.sheenRoughnessMap.channel),specularMapUv:at&&m(a.specularMap.channel),specularColorMapUv:st&&m(a.specularColorMap.channel),specularIntensityMapUv:ot&&m(a.specularIntensityMap.channel),transmissionMapUv:lt&&m(a.transmissionMap.channel),thicknessMapUv:ct&&m(a.thicknessMap.channel),alphaMapUv:ut&&m(a.alphaMap.channel),vertexTangents:!!y.attributes.tangent&&(z||j),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!y.attributes.color&&4===y.attributes.color.itemSize,pointsUvs:!0===_.isPoints&&!!y.attributes.uv&&(I||ut),fog:!!v,useFog:!0===a.fog,fogExp2:!!v&&v.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===_.isSkinnedMesh,morphTargets:void 0!==y.morphAttributes.position,morphNormals:void 0!==y.morphAttributes.normal,morphColors:void 0!==y.morphAttributes.color,morphTargetsCount:T,morphTextureStride:P,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:t.shadowMap.enabled&&h.length>0,shadowMapType:t.shadowMap.type,toneMapping:mt,decodeVideoTexture:I&&!0===a.map.isVideoTexture&&kr.getTransfer(a.map.colorSpace)===Zi,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionClipCullDistance:ft&&!0===a.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ft&&!0===a.extensions.multiDraw||U)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()};return gt.vertexUv1s=c.has(1),gt.vertexUv2s=c.has(2),gt.vertexUv3s=c.has(3),c.clear(),gt},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){o.disableAll(),e.supportsVertexTextures&&o.enable(0);e.instancing&&o.enable(1);e.instancingColor&&o.enable(2);e.instancingMorph&&o.enable(3);e.matcap&&o.enable(4);e.envMap&&o.enable(5);e.normalMapObjectSpace&&o.enable(6);e.normalMapTangentSpace&&o.enable(7);e.clearcoat&&o.enable(8);e.iridescence&&o.enable(9);e.alphaTest&&o.enable(10);e.vertexColors&&o.enable(11);e.vertexAlphas&&o.enable(12);e.vertexUv1s&&o.enable(13);e.vertexUv2s&&o.enable(14);e.vertexUv3s&&o.enable(15);e.vertexTangents&&o.enable(16);e.anisotropy&&o.enable(17);e.alphaHash&&o.enable(18);e.batching&&o.enable(19);e.dispersion&&o.enable(20);e.batchingColor&&o.enable(21);t.push(o.mask),o.disableAll(),e.fog&&o.enable(0);e.useFog&&o.enable(1);e.flatShading&&o.enable(2);e.logarithmicDepthBuffer&&o.enable(3);e.skinning&&o.enable(4);e.morphTargets&&o.enable(5);e.morphNormals&&o.enable(6);e.morphColors&&o.enable(7);e.premultipliedAlpha&&o.enable(8);e.shadowMapEnabled&&o.enable(9);e.doubleSided&&o.enable(10);e.flipSided&&o.enable(11);e.useDepthPacking&&o.enable(12);e.dithering&&o.enable(13);e.transmission&&o.enable(14);e.sheen&&o.enable(15);e.opaque&&o.enable(16);e.pointsUvs&&o.enable(17);e.decodeVideoTexture&&o.enable(18);e.alphaToCoverage&&o.enable(19);t.push(o.mask)}(n,e),n.push(t.outputColorSpace)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=f[t.type];let n;if(e){const t=Ro[e];n=ao.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=h.length;t<e;t++){const e=h[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new Ic(t,n,e,a),h.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=h.indexOf(t);h[e]=h[h.length-1],h.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:h,dispose:function(){l.dispose()}}}function Bc(){let t=new WeakMap;return{has:function(e){return t.has(e)},get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function zc(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Hc(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Vc(){const t=[];let e=0;const n=[],i=[],r=[];function a(n,i,r,a,s,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:i,material:r,groupOrder:a,renderOrder:n.renderOrder,z:s,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=r,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=s,l.group=o),e++,l}return{opaque:n,transmissive:i,transparent:r,init:function(){e=0,n.length=0,i.length=0,r.length=0},push:function(t,e,s,o,l,c){const h=a(t,e,s,o,l,c);s.transmission>0?i.push(h):!0===s.transparent?r.push(h):n.push(h)},unshift:function(t,e,s,o,l,c){const h=a(t,e,s,o,l,c);s.transmission>0?i.unshift(h):!0===s.transparent?r.unshift(h):n.unshift(h)},finish:function(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||zc),i.length>1&&i.sort(e||Hc),r.length>1&&r.sort(e||Hc)}}}function Gc(){let t=new WeakMap;return{get:function(e,n){const i=t.get(e);let r;return void 0===i?(r=new Vc,t.set(e,[r])):n>=i.length?(r=new Vc,i.push(r)):r=i[n],r},dispose:function(){t=new WeakMap}}}function Wc(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Jr,color:new _s};break;case"SpotLight":n={position:new Jr,direction:new Jr,color:new _s,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Jr,color:new _s,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Jr,skyColor:new _s,groundColor:new _s};break;case"RectAreaLight":n={color:new _s,position:new Jr,halfWidth:new Jr,halfHeight:new Jr}}return t[e.id]=n,n}}}let jc=0;function Xc(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function qc(t){const e=new Wc,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Er};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Er,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let t=0;t<9;t++)i.probe.push(new Jr);const r=new Jr,a=new Ca,s=new Ca;return{setup:function(r){let a=0,s=0,o=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let l=0,c=0,h=0,u=0,d=0,p=0,f=0,m=0,g=0,_=0,v=0;r.sort(Xc);for(let t=0,y=r.length;t<y;t++){const y=r[t],x=y.color,b=y.intensity,M=y.distance,S=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)a+=x.r*b,s+=x.g*b,o+=x.b*b;else if(y.isLightProbe){for(let t=0;t<9;t++)i.probe[t].addScaledVector(y.sh.coefficients[t],b);v++}else if(y.isDirectionalLight){const t=e.get(y);if(t.color.copy(y.color).multiplyScalar(y.intensity),y.castShadow){const t=y.shadow,e=n.get(y);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,i.directionalShadow[l]=e,i.directionalShadowMap[l]=S,i.directionalShadowMatrix[l]=y.shadow.matrix,p++}i.directional[l]=t,l++}else if(y.isSpotLight){const t=e.get(y);t.position.setFromMatrixPosition(y.matrixWorld),t.color.copy(x).multiplyScalar(b),t.distance=M,t.coneCos=Math.cos(y.angle),t.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),t.decay=y.decay,i.spot[h]=t;const r=y.shadow;if(y.map&&(i.spotLightMap[g]=y.map,g++,r.updateMatrices(y),y.castShadow&&_++),i.spotLightMatrix[h]=r.matrix,y.castShadow){const t=n.get(y);t.shadowIntensity=r.intensity,t.shadowBias=r.bias,t.shadowNormalBias=r.normalBias,t.shadowRadius=r.radius,t.shadowMapSize=r.mapSize,i.spotShadow[h]=t,i.spotShadowMap[h]=S,m++}h++}else if(y.isRectAreaLight){const t=e.get(y);t.color.copy(x).multiplyScalar(b),t.halfWidth.set(.5*y.width,0,0),t.halfHeight.set(0,.5*y.height,0),i.rectArea[u]=t,u++}else if(y.isPointLight){const t=e.get(y);if(t.color.copy(y.color).multiplyScalar(y.intensity),t.distance=y.distance,t.decay=y.decay,y.castShadow){const t=y.shadow,e=n.get(y);e.shadowIntensity=t.intensity,e.shadowBias=t.bias,e.shadowNormalBias=t.normalBias,e.shadowRadius=t.radius,e.shadowMapSize=t.mapSize,e.shadowCameraNear=t.camera.near,e.shadowCameraFar=t.camera.far,i.pointShadow[c]=e,i.pointShadowMap[c]=S,i.pointShadowMatrix[c]=y.shadow.matrix,f++}i.point[c]=t,c++}else if(y.isHemisphereLight){const t=e.get(y);t.skyColor.copy(y.color).multiplyScalar(b),t.groundColor.copy(y.groundColor).multiplyScalar(b),i.hemi[d]=t,d++}}u>0&&(!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=Co.LTC_FLOAT_1,i.rectAreaLTC2=Co.LTC_FLOAT_2):(i.rectAreaLTC1=Co.LTC_HALF_1,i.rectAreaLTC2=Co.LTC_HALF_2)),i.ambient[0]=a,i.ambient[1]=s,i.ambient[2]=o;const y=i.hash;y.directionalLength===l&&y.pointLength===c&&y.spotLength===h&&y.rectAreaLength===u&&y.hemiLength===d&&y.numDirectionalShadows===p&&y.numPointShadows===f&&y.numSpotShadows===m&&y.numSpotMaps===g&&y.numLightProbes===v||(i.directional.length=l,i.spot.length=h,i.rectArea.length=u,i.point.length=c,i.hemi.length=d,i.directionalShadow.length=p,i.directionalShadowMap.length=p,i.pointShadow.length=f,i.pointShadowMap.length=f,i.spotShadow.length=m,i.spotShadowMap.length=m,i.directionalShadowMatrix.length=p,i.pointShadowMatrix.length=f,i.spotLightMatrix.length=m+g-_,i.spotLightMap.length=g,i.numSpotLightShadowsWithMaps=_,i.numLightProbes=v,y.directionalLength=l,y.pointLength=c,y.spotLength=h,y.rectAreaLength=u,y.hemiLength=d,y.numDirectionalShadows=p,y.numPointShadows=f,y.numSpotShadows=m,y.numSpotMaps=g,y.numLightProbes=v,i.version=jc++)},setupView:function(t,e){let n=0,o=0,l=0,c=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),n++}else if(d.isSpotLight){const t=i.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const t=i.rectArea[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),s.identity(),a.copy(d.matrixWorld),a.premultiply(u),s.extractRotation(a),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(s),t.halfHeight.applyMatrix4(s),c++}else if(d.isPointLight){const t=i.point[o];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),o++}else if(d.isHemisphereLight){const t=i.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),h++}}},state:i}}function $c(t){const e=new qc(t),n=[],i=[];const r={lightsArray:n,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:function(t){r.camera=t,n.length=0,i.length=0},state:r,setupLights:function(){e.setup(n)},setupLightsView:function(t){e.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){i.push(t)}}}function Yc(t){let e=new WeakMap;return{get:function(n,i=0){const r=e.get(n);let a;return void 0===r?(a=new $c(t),e.set(n,[a])):i>=r.length?(a=new $c(t),r.push(a)):a=r[i],a},dispose:function(){e=new WeakMap}}}class Kc extends xs{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Zc extends xs{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Jc(t,e,n){let i=new So;const r=new Er,a=new Er,s=new Xr,o=new Kc({depthPacking:3201}),l=new Zc,c={},h=n.maxTextureSize,u={[_n]:1,[vn]:0,[yn]:2},d=new so({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Er},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const f=new Ns;f.setAttribute("position",new Es(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Qs(f,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let _=this.type;function v(n,i){const a=e.update(m);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new $r(r.x,r.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,a,d,m,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,a,p,m,null)}function y(e,n,i,r){let a=null;const s=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==s)a=s;else if(a=!0===i.isPointLight?l:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const t=a.uuid,e=n.uuid;let i=c[t];void 0===i&&(i={},c[t]=i);let r=i[e];void 0===r&&(r=a.clone(),i[e]=r,n.addEventListener("dispose",b)),a=r}if(a.visible=n.visible,a.wireframe=n.wireframe,a.side=3===r?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],a.alphaMap=n.alphaMap,a.alphaTest=n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===i.isPointLight&&!0===a.isMeshDistanceMaterial){t.properties.get(a).light=i}return a}function x(n,r,a,s,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=e.update(n),l=n.material;if(Array.isArray(l)){const e=i.groups;for(let c=0,h=e.length;c<h;c++){const h=e[c],u=l[h.materialIndex];if(u&&u.visible){const e=y(n,u,s,o);n.onBeforeShadow(t,n,r,a,i,e,h),t.renderBufferDirect(a,null,i,e,n,h),n.onAfterShadow(t,n,r,a,i,e,h)}}}else if(l.visible){const e=y(n,l,s,o);n.onBeforeShadow(t,n,r,a,i,e,null),t.renderBufferDirect(a,null,i,e,n,null),n.onAfterShadow(t,n,r,a,i,e,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)x(l[t],r,a,s,o)}function b(t){t.target.removeEventListener("dispose",b);for(const e in c){const n=c[e],i=t.target.uuid;if(i in n){n[i].dispose(),delete n[i]}}}this.render=function(e,n,o){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=3!==_&&3===this.type,f=3===_&&3!==this.type;for(let l=0,c=e.length;l<c;l++){const c=e[l],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const m=u.getFrameExtents();if(r.multiply(m),a.copy(u.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/m.x),r.x=a.x*m.x,u.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/m.y),r.y=a.y*m.y,u.mapSize.y=a.y)),null===u.map||!0===p||!0===f){const t=3!==this.type?{minFilter:Wn,magFilter:Wn}:{};null!==u.map&&u.map.dispose(),u.map=new $r(r.x,r.y,t),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const g=u.getViewportCount();for(let t=0;t<g;t++){const e=u.getViewport(t);s.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),d.viewport(s),u.updateMatrices(c,t),i=u.getFrustum(),x(n,o,u.camera,c,this.type)}!0!==u.isPointLightShadow&&3===this.type&&v(u,o),u.needsUpdate=!1}_=this.type,g.needsUpdate=!1,t.setRenderTarget(l,c,u)}}function Qc(t){const e=new function(){let e=!1;const n=new Xr;let i=null;const r=new Xr(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,a,s,o){!0===o&&(e*=s,i*=s,a*=s),n.set(e,i,a,s),!1===r.equals(n)&&(t.clearColor(e,i,a,s),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},n=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(e){e?B(t.DEPTH_TEST):z(t.DEPTH_TEST)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},i=new function(){let e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(n){e||(n?B(t.STENCIL_TEST):z(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,s){i===e&&r===n&&a===s||(t.stencilFunc(e,n,s),i=e,r=n,a=s)},setOp:function(e,n,i){s===e&&o===n&&l===i||(t.stencilOp(e,n,i),s=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null}}},r=new WeakMap,a=new WeakMap;let s={},o={},l=new WeakMap,c=[],h=null,u=!1,d=null,p=null,f=null,m=null,g=null,_=null,v=null,y=new _s(0,0,0),x=0,b=!1,M=null,S=null,E=null,T=null,w=null;const A=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let C=!1,R=0;const P=t.getParameter(t.VERSION);-1!==P.indexOf("WebGL")?(R=parseFloat(/^WebGL (\d)/.exec(P)[1]),C=R>=1):-1!==P.indexOf("OpenGL ES")&&(R=parseFloat(/^OpenGL ES (\d)/.exec(P)[1]),C=R>=2);let L=null,D={};const U=t.getParameter(t.SCISSOR_BOX),I=t.getParameter(t.VIEWPORT),N=(new Xr).fromArray(U),k=(new Xr).fromArray(I);function O(e,n,i,r){const a=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let s=0;s<i;s++)e===t.TEXTURE_3D||e===t.TEXTURE_2D_ARRAY?t.texImage3D(n,0,t.RGBA,1,1,r,0,t.RGBA,t.UNSIGNED_BYTE,a):t.texImage2D(n+s,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,a);return s}const F={};function B(e){!0!==s[e]&&(t.enable(e),s[e]=!0)}function z(e){!1!==s[e]&&(t.disable(e),s[e]=!1)}F[t.TEXTURE_2D]=O(t.TEXTURE_2D,t.TEXTURE_2D,1),F[t.TEXTURE_CUBE_MAP]=O(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),F[t.TEXTURE_2D_ARRAY]=O(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),F[t.TEXTURE_3D]=O(t.TEXTURE_3D,t.TEXTURE_3D,1,1),e.setClear(0,0,0,1),n.setClear(1),i.setClear(0),B(t.DEPTH_TEST),n.setFunc(3),W(!1),j(1),B(t.CULL_FACE),G(0);const H={[xn]:t.FUNC_ADD,[bn]:t.FUNC_SUBTRACT,[Mn]:t.FUNC_REVERSE_SUBTRACT};H[103]=t.MIN,H[104]=t.MAX;const V={[Sn]:t.ZERO,[En]:t.ONE,[Tn]:t.SRC_COLOR,[An]:t.SRC_ALPHA,[Un]:t.SRC_ALPHA_SATURATE,[Ln]:t.DST_COLOR,[Rn]:t.DST_ALPHA,[wn]:t.ONE_MINUS_SRC_COLOR,[Cn]:t.ONE_MINUS_SRC_ALPHA,[Dn]:t.ONE_MINUS_DST_COLOR,[Pn]:t.ONE_MINUS_DST_ALPHA,[In]:t.CONSTANT_COLOR,[Nn]:t.ONE_MINUS_CONSTANT_COLOR,[kn]:t.CONSTANT_ALPHA,[On]:t.ONE_MINUS_CONSTANT_ALPHA};function G(e,n,i,r,a,s,o,l,c,h){if(0!==e){if(!1===u&&(B(t.BLEND),u=!0),5===e)a=a||n,s=s||i,o=o||r,n===p&&a===g||(t.blendEquationSeparate(H[n],H[a]),p=n,g=a),i===f&&r===m&&s===_&&o===v||(t.blendFuncSeparate(V[i],V[r],V[s],V[o]),f=i,m=r,_=s,v=o),!1!==l.equals(y)&&c===x||(t.blendColor(l.r,l.g,l.b,c),y.copy(l),x=c),d=e,b=!1;else if(e!==d||h!==b){if(p===xn&&g===xn||(t.blendEquation(t.FUNC_ADD),p=xn,g=xn),h)switch(e){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}f=null,m=null,_=null,v=null,y.set(0,0,0),x=0,d=e,b=h}}else!0===u&&(z(t.BLEND),u=!1)}function W(e){M!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),M=e)}function j(e){0!==e?(B(t.CULL_FACE),e!==S&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):z(t.CULL_FACE),S=e}function X(e,n,i){e?(B(t.POLYGON_OFFSET_FILL),T===n&&w===i||(t.polygonOffset(n,i),T=n,w=i)):z(t.POLYGON_OFFSET_FILL)}return{buffers:{color:e,depth:n,stencil:i},enable:B,disable:z,bindFramebuffer:function(e,n){return o[e]!==n&&(t.bindFramebuffer(e,n),o[e]=n,e===t.DRAW_FRAMEBUFFER&&(o[t.FRAMEBUFFER]=n),e===t.FRAMEBUFFER&&(o[t.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(e,n){let i=c,r=!1;if(e){i=l.get(n),void 0===i&&(i=[],l.set(n,i));const a=e.textures;if(i.length!==a.length||i[0]!==t.COLOR_ATTACHMENT0){for(let e=0,n=a.length;e<n;e++)i[e]=t.COLOR_ATTACHMENT0+e;i.length=a.length,r=!0}}else i[0]!==t.BACK&&(i[0]=t.BACK,r=!0);r&&t.drawBuffers(i)},useProgram:function(e){return h!==e&&(t.useProgram(e),h=e,!0)},setBlending:G,setMaterial:function(r,a){2===r.side?z(t.CULL_FACE):B(t.CULL_FACE);let s=1===r.side;a&&(s=!s),W(s),1===r.blending&&!1===r.transparent?G(0):G(r.blending,r.blendEquation,r.blendSrc,r.blendDst,r.blendEquationAlpha,r.blendSrcAlpha,r.blendDstAlpha,r.blendColor,r.blendAlpha,r.premultipliedAlpha),n.setFunc(r.depthFunc),n.setTest(r.depthTest),n.setMask(r.depthWrite),e.setMask(r.colorWrite);const o=r.stencilWrite;i.setTest(o),o&&(i.setMask(r.stencilWriteMask),i.setFunc(r.stencilFunc,r.stencilRef,r.stencilFuncMask),i.setOp(r.stencilFail,r.stencilZFail,r.stencilZPass)),X(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),!0===r.alphaToCoverage?B(t.SAMPLE_ALPHA_TO_COVERAGE):z(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:W,setCullFace:j,setLineWidth:function(e){e!==E&&(C&&t.lineWidth(e),E=e)},setPolygonOffset:X,setScissorTest:function(e){e?B(t.SCISSOR_TEST):z(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+A-1),L!==e&&(t.activeTexture(e),L=e)},bindTexture:function(e,n,i){void 0===i&&(i=null===L?t.TEXTURE0+A-1:L);let r=D[i];void 0===r&&(r={type:void 0,texture:void 0},D[i]=r),r.type===e&&r.texture===n||(L!==i&&(t.activeTexture(i),L=i),t.bindTexture(e,n||F[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=D[L];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{t.compressedTexImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,n){let i=a.get(n);void 0===i&&(i=new WeakMap,a.set(n,i));let r=i.get(e);void 0===r&&(r=t.getUniformBlockIndex(n,e.name),i.set(e,r))},uniformBlockBinding:function(e,n){const i=a.get(n).get(e);r.get(n)!==i&&(t.uniformBlockBinding(n,i,e.__bindingPointIndex),r.set(n,i))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===N.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),N.copy(e))},viewport:function(e){!1===k.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),k.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),s={},L=null,D={},o={},l=new WeakMap,c=[],h=null,u=!1,d=null,p=null,f=null,m=null,g=null,_=null,v=null,y=new _s(0,0,0),x=0,b=!1,M=null,S=null,E=null,T=null,w=null,N.set(0,0,t.canvas.width,t.canvas.height),k.set(0,0,t.canvas.width,t.canvas.height),e.reset(),n.reset(),i.reset()}}}function th(t,e,n,i){const r=function(t){switch(t){case Kn:case Zn:return{byteLength:1,components:1};case Qn:case Jn:case ii:return{byteLength:2,components:1};case ri:case ai:return{byteLength:2,components:4};case ei:case ti:case ni:return{byteLength:4,components:1};case oi:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${t}.`)}(i);switch(n){case 1021:case 1024:return t*e;case 1025:return t*e*2;case 1028:case ui:return t*e/r.components*r.byteLength;case 1030:case di:return t*e*2/r.components*r.byteLength;case 1022:return t*e*3/r.components*r.byteLength;case li:case pi:return t*e*4/r.components*r.byteLength;case fi:case mi:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case gi:case _i:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case yi:case bi:return Math.max(t,16)*Math.max(e,8)/4;case vi:case xi:return Math.max(t,8)*Math.max(e,8)/2;case Mi:case Si:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*8;case Ei:case Ti:return Math.floor((t+3)/4)*Math.floor((e+3)/4)*16;case wi:return Math.floor((t+4)/5)*Math.floor((e+3)/4)*16;case Ai:return Math.floor((t+4)/5)*Math.floor((e+4)/5)*16;case Ci:return Math.floor((t+5)/6)*Math.floor((e+4)/5)*16;case Ri:return Math.floor((t+5)/6)*Math.floor((e+5)/6)*16;case Pi:return Math.floor((t+7)/8)*Math.floor((e+4)/5)*16;case Li:return Math.floor((t+7)/8)*Math.floor((e+5)/6)*16;case Di:return Math.floor((t+7)/8)*Math.floor((e+7)/8)*16;case Ui:return Math.floor((t+9)/10)*Math.floor((e+4)/5)*16;case Ii:return Math.floor((t+9)/10)*Math.floor((e+5)/6)*16;case Ni:return Math.floor((t+9)/10)*Math.floor((e+7)/8)*16;case ki:return Math.floor((t+9)/10)*Math.floor((e+9)/10)*16;case Oi:return Math.floor((t+11)/12)*Math.floor((e+9)/10)*16;case Fi:return Math.floor((t+11)/12)*Math.floor((e+11)/12)*16;case Bi:case zi:case Hi:return Math.ceil(t/4)*Math.ceil(e/4)*16;case 36283:case Vi:return Math.ceil(t/4)*Math.ceil(e/4)*8;case Gi:case Wi:return Math.ceil(t/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}function eh(t,e,n,i,r,a,s){const o=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),c=new Er,h=new WeakMap;let u;const d=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function f(t,e){return p?new OffscreenCanvas(t,e):Cr("canvas")}function m(t,e,n){let i=1;const r=z(t);if((r.width>n||r.height>n)&&(i=n/Math.max(r.width,r.height)),i<1){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&t instanceof VideoFrame){const n=Math.floor(i*r.width),a=Math.floor(i*r.height);void 0===u&&(u=f(n,a));const s=e?f(n,a):u;s.width=n,s.height=a;return s.getContext("2d").drawImage(t,0,0,n,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+r.width+"x"+r.height+") to ("+n+"x"+a+")."),s}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+r.width+"x"+r.height+")."),t}return t}function g(t){return t.generateMipmaps&&t.minFilter!==Wn&&t.minFilter!==qn}function _(e){t.generateMipmap(e)}function v(n,i,r,a,s=!1){if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;if(i===t.RED&&(r===t.FLOAT&&(o=t.R32F),r===t.HALF_FLOAT&&(o=t.R16F),r===t.UNSIGNED_BYTE&&(o=t.R8)),i===t.RED_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.R8UI),r===t.UNSIGNED_SHORT&&(o=t.R16UI),r===t.UNSIGNED_INT&&(o=t.R32UI),r===t.BYTE&&(o=t.R8I),r===t.SHORT&&(o=t.R16I),r===t.INT&&(o=t.R32I)),i===t.RG&&(r===t.FLOAT&&(o=t.RG32F),r===t.HALF_FLOAT&&(o=t.RG16F),r===t.UNSIGNED_BYTE&&(o=t.RG8)),i===t.RG_INTEGER&&(r===t.UNSIGNED_BYTE&&(o=t.RG8UI),r===t.UNSIGNED_SHORT&&(o=t.RG16UI),r===t.UNSIGNED_INT&&(o=t.RG32UI),r===t.BYTE&&(o=t.RG8I),r===t.SHORT&&(o=t.RG16I),r===t.INT&&(o=t.RG32I)),i===t.RGB&&r===t.UNSIGNED_INT_5_9_9_9_REV&&(o=t.RGB9_E5),i===t.RGBA){const e=s?Ki:kr.getTransfer(a);r===t.FLOAT&&(o=t.RGBA32F),r===t.HALF_FLOAT&&(o=t.RGBA16F),r===t.UNSIGNED_BYTE&&(o=e===Zi?t.SRGB8_ALPHA8:t.RGBA8),r===t.UNSIGNED_SHORT_4_4_4_4&&(o=t.RGBA4),r===t.UNSIGNED_SHORT_5_5_5_1&&(o=t.RGB5_A1)}return o!==t.R16F&&o!==t.R32F&&o!==t.RG16F&&o!==t.RG32F&&o!==t.RGBA16F&&o!==t.RGBA32F||e.get("EXT_color_buffer_float"),o}function y(e,n){let i;return e?null===n||n===ei||n===si?i=t.DEPTH24_STENCIL8:n===ni?i=t.DEPTH32F_STENCIL8:n===Qn&&(i=t.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||n===ei||n===si?i=t.DEPTH_COMPONENT24:n===ni?i=t.DEPTH_COMPONENT32F:n===Qn&&(i=t.DEPTH_COMPONENT16),i}function x(t,e){return!0===g(t)||t.isFramebufferTexture&&t.minFilter!==Wn&&t.minFilter!==qn?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function b(t){const e=t.target;e.removeEventListener("dispose",b),function(t){const e=i.get(t);if(void 0===e.__webglInit)return;const n=t.source,r=d.get(n);if(r){const i=r[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&S(t),0===Object.keys(r).length&&d.delete(n)}i.remove(t)}(e),e.isVideoTexture&&h.delete(e)}function M(e){const n=e.target;n.removeEventListener("dispose",M),function(e){const n=i.get(e);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++){if(Array.isArray(n.__webglFramebuffer[e]))for(let i=0;i<n.__webglFramebuffer[e].length;i++)t.deleteFramebuffer(n.__webglFramebuffer[e][i]);else t.deleteFramebuffer(n.__webglFramebuffer[e]);n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e])}else{if(Array.isArray(n.__webglFramebuffer))for(let e=0;e<n.__webglFramebuffer.length;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let e=0;e<n.__webglColorRenderbuffer.length;e++)n.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(n.__webglColorRenderbuffer[e]);n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const r=e.textures;for(let e=0,n=r.length;e<n;e++){const n=i.get(r[e]);n.__webglTexture&&(t.deleteTexture(n.__webglTexture),s.memory.textures--),i.remove(r[e])}i.remove(e)}(n)}function S(e){const n=i.get(e);t.deleteTexture(n.__webglTexture);const r=e.source;delete d.get(r)[n.__cacheKey],s.memory.textures--}let E=0;function T(e,r){const a=i.get(e);if(e.isVideoTexture&&function(t){const e=s.render.frame;h.get(t)!==e&&(h.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&a.__version!==e.version){const t=e.image;if(null===t)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==t.complete)return void L(a,e,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(t.TEXTURE_2D,a.__webglTexture,t.TEXTURE0+r)}const w={[Hn]:t.REPEAT,[Vn]:t.CLAMP_TO_EDGE,[Gn]:t.MIRRORED_REPEAT},A={[Wn]:t.NEAREST,[jn]:t.NEAREST_MIPMAP_NEAREST,[Xn]:t.NEAREST_MIPMAP_LINEAR,[qn]:t.LINEAR,[$n]:t.LINEAR_MIPMAP_NEAREST,[Yn]:t.LINEAR_MIPMAP_LINEAR},C={[er]:t.NEVER,[lr]:t.ALWAYS,[nr]:t.LESS,[rr]:t.LEQUAL,[ir]:t.EQUAL,[or]:t.GEQUAL,[ar]:t.GREATER,[sr]:t.NOTEQUAL};function R(n,a){if(a.type!==ni||!1!==e.has("OES_texture_float_linear")||a.magFilter!==qn&&a.magFilter!==$n&&a.magFilter!==Xn&&a.magFilter!==Yn&&a.minFilter!==qn&&a.minFilter!==$n&&a.minFilter!==Xn&&a.minFilter!==Yn||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),t.texParameteri(n,t.TEXTURE_WRAP_S,w[a.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,w[a.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,w[a.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,A[a.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,A[a.minFilter]),a.compareFunction&&(t.texParameteri(n,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(n,t.TEXTURE_COMPARE_FUNC,C[a.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){if(a.magFilter===Wn)return;if(a.minFilter!==Xn&&a.minFilter!==Yn)return;if(a.type===ni&&!1===e.has("OES_texture_float_linear"))return;if(a.anisotropy>1||i.get(a).__currentAnisotropy){const s=e.get("EXT_texture_filter_anisotropic");t.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy}}}function P(e,n){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",b));const r=n.source;let a=d.get(r);void 0===a&&(a={},d.set(r,a));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(n);if(o!==e.__cacheKey){void 0===a[o]&&(a[o]={texture:t.createTexture(),usedTimes:0},s.memory.textures++,i=!0),a[o].usedTimes++;const r=a[e.__cacheKey];void 0!==r&&(a[e.__cacheKey].usedTimes--,0===r.usedTimes&&S(n)),e.__cacheKey=o,e.__webglTexture=a[o].texture}return i}function L(e,s,o){let l=t.TEXTURE_2D;(s.isDataArrayTexture||s.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),s.isData3DTexture&&(l=t.TEXTURE_3D);const c=P(e,s),h=s.source;n.bindTexture(l,e.__webglTexture,t.TEXTURE0+o);const u=i.get(h);if(h.version!==u.__version||!0===c){n.activeTexture(t.TEXTURE0+o);const e=kr.getPrimaries(kr.workingColorSpace),i=s.colorSpace===ji?null:kr.getPrimaries(s.colorSpace),d=s.colorSpace===ji||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,s.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=m(s.image,!1,r.maxTextureSize);p=B(s,p);const f=a.convert(s.format,s.colorSpace),b=a.convert(s.type);let M,S=v(s.internalFormat,f,b,s.colorSpace,s.isVideoTexture);R(l,s);const E=s.mipmaps,T=!0!==s.isVideoTexture,w=void 0===u.__version||!0===c,A=h.dataReady,C=x(s,p);if(s.isDepthTexture)S=y(s.format===hi,s.type),w&&(T?n.texStorage2D(t.TEXTURE_2D,1,S,p.width,p.height):n.texImage2D(t.TEXTURE_2D,0,S,p.width,p.height,0,f,b,null));else if(s.isDataTexture)if(E.length>0){T&&w&&n.texStorage2D(t.TEXTURE_2D,C,S,E[0].width,E[0].height);for(let e=0,i=E.length;e<i;e++)M=E[e],T?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,M.width,M.height,f,b,M.data):n.texImage2D(t.TEXTURE_2D,e,S,M.width,M.height,0,f,b,M.data);s.generateMipmaps=!1}else T?(w&&n.texStorage2D(t.TEXTURE_2D,C,S,p.width,p.height),A&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,p.width,p.height,f,b,p.data)):n.texImage2D(t.TEXTURE_2D,0,S,p.width,p.height,0,f,b,p.data);else if(s.isCompressedTexture)if(s.isCompressedArrayTexture){T&&w&&n.texStorage3D(t.TEXTURE_2D_ARRAY,C,S,E[0].width,E[0].height,p.depth);for(let e=0,i=E.length;e<i;e++)if(M=E[e],s.format!==li)if(null!==f)if(T){if(A)if(s.layerUpdates.size>0){const i=th(M.width,M.height,s.format,s.type);for(const r of s.layerUpdates){const a=M.data.subarray(r*i/M.data.BYTES_PER_ELEMENT,(r+1)*i/M.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,r,M.width,M.height,1,f,a,0,0)}s.clearLayerUpdates()}else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,M.width,M.height,p.depth,f,M.data,0,0)}else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,S,M.width,M.height,p.depth,0,M.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else T?A&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,M.width,M.height,p.depth,f,b,M.data):n.texImage3D(t.TEXTURE_2D_ARRAY,e,S,M.width,M.height,p.depth,0,f,b,M.data)}else{T&&w&&n.texStorage2D(t.TEXTURE_2D,C,S,E[0].width,E[0].height);for(let e=0,i=E.length;e<i;e++)M=E[e],s.format!==li?null!==f?T?A&&n.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,M.width,M.height,f,M.data):n.compressedTexImage2D(t.TEXTURE_2D,e,S,M.width,M.height,0,M.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):T?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,M.width,M.height,f,b,M.data):n.texImage2D(t.TEXTURE_2D,e,S,M.width,M.height,0,f,b,M.data)}else if(s.isDataArrayTexture)if(T){if(w&&n.texStorage3D(t.TEXTURE_2D_ARRAY,C,S,p.width,p.height,p.depth),A)if(s.layerUpdates.size>0){const e=th(p.width,p.height,s.format,s.type);for(const i of s.layerUpdates){const r=p.data.subarray(i*e/p.data.BYTES_PER_ELEMENT,(i+1)*e/p.data.BYTES_PER_ELEMENT);n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,i,p.width,p.height,1,f,b,r)}s.clearLayerUpdates()}else n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,p.width,p.height,p.depth,f,b,p.data)}else n.texImage3D(t.TEXTURE_2D_ARRAY,0,S,p.width,p.height,p.depth,0,f,b,p.data);else if(s.isData3DTexture)T?(w&&n.texStorage3D(t.TEXTURE_3D,C,S,p.width,p.height,p.depth),A&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,p.width,p.height,p.depth,f,b,p.data)):n.texImage3D(t.TEXTURE_3D,0,S,p.width,p.height,p.depth,0,f,b,p.data);else if(s.isFramebufferTexture){if(w)if(T)n.texStorage2D(t.TEXTURE_2D,C,S,p.width,p.height);else{let e=p.width,i=p.height;for(let r=0;r<C;r++)n.texImage2D(t.TEXTURE_2D,r,S,e,i,0,f,b,null),e>>=1,i>>=1}}else if(E.length>0){if(T&&w){const e=z(E[0]);n.texStorage2D(t.TEXTURE_2D,C,S,e.width,e.height)}for(let e=0,i=E.length;e<i;e++)M=E[e],T?A&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,f,b,M):n.texImage2D(t.TEXTURE_2D,e,S,f,b,M);s.generateMipmaps=!1}else if(T){if(w){const e=z(p);n.texStorage2D(t.TEXTURE_2D,C,S,e.width,e.height)}A&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,f,b,p)}else n.texImage2D(t.TEXTURE_2D,0,S,f,b,p);g(s)&&_(l),u.__version=h.version,s.onUpdate&&s.onUpdate(s)}e.__version=s.version}function D(e,r,s,l,c,h){const u=a.convert(s.format,s.colorSpace),d=a.convert(s.type),p=v(s.internalFormat,u,d,s.colorSpace);if(!i.get(r).__hasExternalTextures){const e=Math.max(1,r.width>>h),i=Math.max(1,r.height>>h);c===t.TEXTURE_3D||c===t.TEXTURE_2D_ARRAY?n.texImage3D(c,h,p,e,i,r.depth,0,u,d,null):n.texImage2D(c,h,p,e,i,0,u,d,null)}n.bindFramebuffer(t.FRAMEBUFFER,e),F(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,l,c,i.get(s).__webglTexture,0,O(r)):(c===t.TEXTURE_2D||c>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,l,c,i.get(s).__webglTexture,h),n.bindFramebuffer(t.FRAMEBUFFER,null)}function U(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer){const r=n.depthTexture,a=r&&r.isDepthTexture?r.type:null,s=y(n.stencilBuffer,a),l=n.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,c=O(n);F(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,c,s,n.width,n.height):i?t.renderbufferStorageMultisample(t.RENDERBUFFER,c,s,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,s,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,l,t.RENDERBUFFER,e)}else{const e=n.textures;for(let r=0;r<e.length;r++){const s=e[r],l=a.convert(s.format,s.colorSpace),c=a.convert(s.type),h=v(s.internalFormat,l,c,s.colorSpace),u=O(n);i&&!1===F(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,u,h,n.width,n.height):F(n)?o.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,u,h,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,h,n.width,n.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function I(e){const r=i.get(e),a=!0===e.isWebGLCubeRenderTarget;if(r.__boundDepthTexture!==e.depthTexture){const t=e.depthTexture;if(r.__depthDisposeCallback&&r.__depthDisposeCallback(),t){const e=()=>{delete r.__boundDepthTexture,delete r.__depthDisposeCallback,t.removeEventListener("dispose",e)};t.addEventListener("dispose",e),r.__depthDisposeCallback=e}r.__boundDepthTexture=t}if(e.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),T(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture,s=O(r);if(r.depthTexture.format===ci)F(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0,s):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==hi)throw new Error("Unknown depthTexture format");F(r)?o.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0,s):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0)}}(r.__webglFramebuffer,e)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)if(n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[i]),void 0===r.__webglDepthbuffer[i])r.__webglDepthbuffer[i]=t.createRenderbuffer(),U(r.__webglDepthbuffer[i],e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,a=r.__webglDepthbuffer[i];t.bindRenderbuffer(t.RENDERBUFFER,a),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,a)}}else if(n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),void 0===r.__webglDepthbuffer)r.__webglDepthbuffer=t.createRenderbuffer(),U(r.__webglDepthbuffer,e,!1);else{const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,i=r.__webglDepthbuffer;t.bindRenderbuffer(t.RENDERBUFFER,i),t.framebufferRenderbuffer(t.FRAMEBUFFER,n,t.RENDERBUFFER,i)}n.bindFramebuffer(t.FRAMEBUFFER,null)}const N=[],k=[];function O(t){return Math.min(r.maxSamples,t.samples)}function F(t){const n=i.get(t);return t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function B(t,e){const n=t.colorSpace,i=t.format,r=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||n!==qi&&n!==ji&&(kr.getTransfer(n)===Zi?i===li&&r===Kn||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),e}function z(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement?(c.width=t.naturalWidth||t.width,c.height=t.naturalHeight||t.height):"undefined"!=typeof VideoFrame&&t instanceof VideoFrame?(c.width=t.displayWidth,c.height=t.displayHeight):(c.width=t.width,c.height=t.height),c}this.allocateTextureUnit=function(){const t=E;return t>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+r.maxTextures),E+=1,t},this.resetTextureUnits=function(){E=0},this.setTexture2D=T,this.setTexture2DArray=function(e,r){const a=i.get(e);e.version>0&&a.__version!==e.version?L(a,e,r):n.bindTexture(t.TEXTURE_2D_ARRAY,a.__webglTexture,t.TEXTURE0+r)},this.setTexture3D=function(e,r){const a=i.get(e);e.version>0&&a.__version!==e.version?L(a,e,r):n.bindTexture(t.TEXTURE_3D,a.__webglTexture,t.TEXTURE0+r)},this.setTextureCube=function(e,s){const o=i.get(e);e.version>0&&o.__version!==e.version?function(e,s,o){if(6!==s.image.length)return;const l=P(e,s),c=s.source;n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+o);const h=i.get(c);if(c.version!==h.__version||!0===l){n.activeTexture(t.TEXTURE0+o);const e=kr.getPrimaries(kr.workingColorSpace),i=s.colorSpace===ji?null:kr.getPrimaries(s.colorSpace),u=s.colorSpace===ji||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,s.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,u);const d=s.isCompressedTexture||s.image[0].isCompressedTexture,p=s.image[0]&&s.image[0].isDataTexture,f=[];for(let t=0;t<6;t++)f[t]=d||p?p?s.image[t].image:s.image[t]:m(s.image[t],!0,r.maxCubemapSize),f[t]=B(s,f[t]);const y=f[0],b=a.convert(s.format,s.colorSpace),M=a.convert(s.type),S=v(s.internalFormat,b,M,s.colorSpace),E=!0!==s.isVideoTexture,T=void 0===h.__version||!0===l,w=c.dataReady;let A,C=x(s,y);if(R(t.TEXTURE_CUBE_MAP,s),d){E&&T&&n.texStorage2D(t.TEXTURE_CUBE_MAP,C,S,y.width,y.height);for(let e=0;e<6;e++){A=f[e].mipmaps;for(let i=0;i<A.length;i++){const r=A[i];s.format!==li?null!==b?E?w&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,r.width,r.height,b,r.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,S,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,r.width,r.height,b,M,r.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,S,r.width,r.height,0,b,M,r.data)}}}else{if(A=s.mipmaps,E&&T){A.length>0&&C++;const e=z(f[0]);n.texStorage2D(t.TEXTURE_CUBE_MAP,C,S,e.width,e.height)}for(let e=0;e<6;e++)if(p){E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,f[e].width,f[e].height,b,M,f[e].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,S,f[e].width,f[e].height,0,b,M,f[e].data);for(let i=0;i<A.length;i++){const r=A[i].image[e].image;E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,r.width,r.height,b,M,r.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,S,r.width,r.height,0,b,M,r.data)}}else{E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,b,M,f[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,S,b,M,f[e]);for(let i=0;i<A.length;i++){const r=A[i];E?w&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,b,M,r.image[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,S,b,M,r.image[e])}}}g(s)&&_(t.TEXTURE_CUBE_MAP),h.__version=c.version,s.onUpdate&&s.onUpdate(s)}e.__version=s.version}(o,e,s):n.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture,t.TEXTURE0+s)},this.rebindTextures=function(e,n,r){const a=i.get(e);void 0!==n&&D(a.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==r&&I(e)},this.setupRenderTarget=function(e){const r=e.texture,o=i.get(e),l=i.get(r);e.addEventListener("dispose",M);const c=e.textures,h=!0===e.isWebGLCubeRenderTarget,u=c.length>1;if(u||(void 0===l.__webglTexture&&(l.__webglTexture=t.createTexture()),l.__version=r.version,s.memory.textures++),h){o.__webglFramebuffer=[];for(let e=0;e<6;e++)if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer[e]=[];for(let n=0;n<r.mipmaps.length;n++)o.__webglFramebuffer[e][n]=t.createFramebuffer()}else o.__webglFramebuffer[e]=t.createFramebuffer()}else{if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer=[];for(let e=0;e<r.mipmaps.length;e++)o.__webglFramebuffer[e]=t.createFramebuffer()}else o.__webglFramebuffer=t.createFramebuffer();if(u)for(let e=0,n=c.length;e<n;e++){const n=i.get(c[e]);void 0===n.__webglTexture&&(n.__webglTexture=t.createTexture(),s.memory.textures++)}if(e.samples>0&&!1===F(e)){o.__webglMultisampledFramebuffer=t.createFramebuffer(),o.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let n=0;n<c.length;n++){const i=c[n];o.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,o.__webglColorRenderbuffer[n]);const r=a.convert(i.format,i.colorSpace),s=a.convert(i.type),l=v(i.internalFormat,r,s,i.colorSpace,!0===e.isXRRenderTarget),h=O(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,h,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,o.__webglColorRenderbuffer[n])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(o.__webglDepthRenderbuffer=t.createRenderbuffer(),U(o.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(h){n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),R(t.TEXTURE_CUBE_MAP,r);for(let n=0;n<6;n++)if(r.mipmaps&&r.mipmaps.length>0)for(let i=0;i<r.mipmaps.length;i++)D(o.__webglFramebuffer[n][i],e,r,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else D(o.__webglFramebuffer[n],e,r,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);g(r)&&_(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(u){for(let r=0,a=c.length;r<a;r++){const a=c[r],s=i.get(a);n.bindTexture(t.TEXTURE_2D,s.__webglTexture),R(t.TEXTURE_2D,a),D(o.__webglFramebuffer,e,a,t.COLOR_ATTACHMENT0+r,t.TEXTURE_2D,0),g(a)&&_(t.TEXTURE_2D)}n.unbindTexture()}else{let i=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(i=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(i,l.__webglTexture),R(i,r),r.mipmaps&&r.mipmaps.length>0)for(let n=0;n<r.mipmaps.length;n++)D(o.__webglFramebuffer[n],e,r,t.COLOR_ATTACHMENT0,i,n);else D(o.__webglFramebuffer,e,r,t.COLOR_ATTACHMENT0,i,0);g(r)&&_(i),n.unbindTexture()}e.depthBuffer&&I(e)},this.updateRenderTargetMipmap=function(e){const r=e.textures;for(let a=0,s=r.length;a<s;a++){const s=r[a];if(g(s)){const r=e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,a=i.get(s).__webglTexture;n.bindTexture(r,a),_(r),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(e.samples>0)if(!1===F(e)){const r=e.textures,a=e.width,s=e.height;let o=t.COLOR_BUFFER_BIT;const c=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,h=i.get(e),u=r.length>1;if(u)for(let e=0;e<r.length;e++)n.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,h.__webglMultisampledFramebuffer),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglFramebuffer);for(let n=0;n<r.length;n++){if(e.resolveDepthBuffer&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&e.resolveStencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),u){t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,h.__webglColorRenderbuffer[n]);const e=i.get(r[n]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,a,s,0,0,a,s,o,t.NEAREST),!0===l&&(N.length=0,k.length=0,N.push(t.COLOR_ATTACHMENT0+n),e.depthBuffer&&!1===e.resolveDepthBuffer&&(N.push(c),k.push(c),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,k)),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,N))}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),u)for(let e=0;e<r.length;e++){n.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,h.__webglColorRenderbuffer[e]);const a=i.get(r[e]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,a,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglMultisampledFramebuffer)}else if(e.depthBuffer&&!1===e.resolveDepthBuffer&&l){const n=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[n])}},this.setupDepthRenderbuffer=I,this.setupFrameBufferTexture=D,this.useMultisampledRTT=F}function nh(t,e){return{convert:function(n,i=""){let r;const a=kr.getTransfer(i);if(n===Kn)return t.UNSIGNED_BYTE;if(n===ri)return t.UNSIGNED_SHORT_4_4_4_4;if(n===ai)return t.UNSIGNED_SHORT_5_5_5_1;if(n===oi)return t.UNSIGNED_INT_5_9_9_9_REV;if(n===Zn)return t.BYTE;if(n===Jn)return t.SHORT;if(n===Qn)return t.UNSIGNED_SHORT;if(n===ti)return t.INT;if(n===ei)return t.UNSIGNED_INT;if(n===ni)return t.FLOAT;if(n===ii)return t.HALF_FLOAT;if(1021===n)return t.ALPHA;if(1022===n)return t.RGB;if(n===li)return t.RGBA;if(1024===n)return t.LUMINANCE;if(1025===n)return t.LUMINANCE_ALPHA;if(n===ci)return t.DEPTH_COMPONENT;if(n===hi)return t.DEPTH_STENCIL;if(1028===n)return t.RED;if(n===ui)return t.RED_INTEGER;if(1030===n)return t.RG;if(n===di)return t.RG_INTEGER;if(n===pi)return t.RGBA_INTEGER;if(n===fi||n===mi||n===gi||n===_i)if(a===Zi){if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(n===fi)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===mi)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===gi)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===_i)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=e.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(n===fi)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===mi)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===gi)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===_i)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===vi||n===yi||n===xi||n===bi){if(r=e.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(n===vi)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===yi)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===xi)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===bi)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===Mi||n===Si||n===Ei){if(r=e.get("WEBGL_compressed_texture_etc"),null===r)return null;if(n===Mi||n===Si)return a===Zi?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Ei)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(n===Ti||n===wi||n===Ai||n===Ci||n===Ri||n===Pi||n===Li||n===Di||n===Ui||n===Ii||n===Ni||n===ki||n===Oi||n===Fi){if(r=e.get("WEBGL_compressed_texture_astc"),null===r)return null;if(n===Ti)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===wi)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Ai)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Ci)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Ri)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Pi)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Li)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Di)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Ui)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Ii)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ni)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===ki)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Oi)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Fi)return a===Zi?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Bi||n===zi||n===Hi){if(r=e.get("EXT_texture_compression_bptc"),null===r)return null;if(n===Bi)return a===Zi?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===zi)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Hi)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===n||n===Vi||n===Gi||n===Wi){if(r=e.get("EXT_texture_compression_rgtc"),null===r)return null;if(n===Bi)return r.COMPRESSED_RED_RGTC1_EXT;if(n===Vi)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Gi)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Wi)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===si?t.UNSIGNED_INT_24_8:void 0!==t[n]?t[n]:null}}}class ih extends uo{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class rh extends es{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ah={type:"move"};class sh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new rh,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new rh,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Jr,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Jr),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new rh,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Jr,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Jr),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){a=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,n),r=this._getHandJoint(l,i);null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,r.jointRadius=t.radius),r.visible=null!==t}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],s=i.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&s>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&s<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==s&&(i=e.getPose(t.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(ah)))}return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new rh;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class oh{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(null===this.texture){const i=new jr;t.properties.get(i).__webglTexture=e.texture,e.depthNear==n.depthNear&&e.depthFar==n.depthFar||(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(null!==this.texture&&null===this.mesh){const e=t.cameras[0].viewport,n=new so({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Qs(new wo(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class lh extends pr{constructor(t,e){super();const n=this;let i=null,r=1,a=null,s="local-floor",o=1,l=null,c=null,h=null,u=null,d=null,p=null;const f=new oh,m=e.getContextAttributes();let g=null,_=null;const v=[],y=[],x=new Er;let b=null;const M=new uo;M.layers.enable(1),M.viewport=new Xr;const S=new uo;S.layers.enable(2),S.viewport=new Xr;const E=[M,S],T=new ih;T.layers.enable(1),T.layers.enable(2);let w=null,A=null;function C(t){const e=y.indexOf(t.inputSource);if(-1===e)return;const n=v[e];void 0!==n&&(n.update(t.inputSource,t.frame,l||a),n.dispatchEvent({type:t.type,data:t.inputSource}))}function R(){i.removeEventListener("select",C),i.removeEventListener("selectstart",C),i.removeEventListener("selectend",C),i.removeEventListener("squeeze",C),i.removeEventListener("squeezestart",C),i.removeEventListener("squeezeend",C),i.removeEventListener("end",R),i.removeEventListener("inputsourceschange",P);for(let t=0;t<v.length;t++){const e=y[t];null!==e&&(y[t]=null,v[t].disconnect(e))}w=null,A=null,f.reset(),t.setRenderTarget(g),d=null,u=null,h=null,i=null,_=null,N.stop(),n.isPresenting=!1,t.setPixelRatio(b),t.setSize(x.width,x.height,!1),n.dispatchEvent({type:"sessionend"})}function P(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=y.indexOf(n);i>=0&&(y[i]=null,v[i].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let i=y.indexOf(n);if(-1===i){for(let t=0;t<v.length;t++){if(t>=y.length){y.push(n),i=t;break}if(null===y[t]){y[t]=n,i=t;break}}if(-1===i)break}const r=v[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=v[t];return void 0===e&&(e=new sh,v[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=v[t];return void 0===e&&(e=new sh,v[t]=e),e.getGripSpace()},this.getHand=function(t){let e=v[t];return void 0===e&&(e=new sh,v[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==u?u:d},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(c){if(i=c,null!==i){if(g=t.getRenderTarget(),i.addEventListener("select",C),i.addEventListener("selectstart",C),i.addEventListener("selectend",C),i.addEventListener("squeeze",C),i.addEventListener("squeezestart",C),i.addEventListener("squeezeend",C),i.addEventListener("end",R),i.addEventListener("inputsourceschange",P),!0!==m.xrCompatible&&await e.makeXRCompatible(),b=t.getPixelRatio(),t.getSize(x),void 0===i.renderState.layers){const n={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,e,n),i.updateRenderState({baseLayer:d}),t.setPixelRatio(1),t.setSize(d.framebufferWidth,d.framebufferHeight,!1),_=new $r(d.framebufferWidth,d.framebufferHeight,{format:li,type:Kn,colorSpace:t.outputColorSpace,stencilBuffer:m.stencil})}else{let n=null,a=null,s=null;m.depth&&(s=m.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,n=m.stencil?hi:ci,a=m.stencil?si:ei);const o={colorFormat:e.RGBA8,depthFormat:s,scaleFactor:r};h=new XRWebGLBinding(i,e),u=h.createProjectionLayer(o),i.updateRenderState({layers:[u]}),t.setPixelRatio(1),t.setSize(u.textureWidth,u.textureHeight,!1),_=new $r(u.textureWidth,u.textureHeight,{format:li,type:Kn,depthTexture:new hl(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:m.stencil,colorSpace:t.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:!1===u.ignoreDepthValues})}_.isXRRenderTarget=!0,this.setFoveation(o),l=null,a=await i.requestReferenceSpace(s),N.setContext(i),N.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode},this.getDepthTexture=function(){return f.getDepthTexture()};const L=new Jr,D=new Jr;function U(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===i)return;let e=t.near,n=t.far;null!==f.texture&&(f.depthNear>0&&(e=f.depthNear),f.depthFar>0&&(n=f.depthFar)),T.near=S.near=M.near=e,T.far=S.far=M.far=n,w===T.near&&A===T.far||(i.updateRenderState({depthNear:T.near,depthFar:T.far}),w=T.near,A=T.far);const r=t.parent,a=T.cameras;U(T,r);for(let t=0;t<a.length;t++)U(a[t],r);2===a.length?function(t,e,n){L.setFromMatrixPosition(e.matrixWorld),D.setFromMatrixPosition(n.matrixWorld);const i=L.distanceTo(D),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(a[8]+1)/a[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;if(e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert(),-1===r[10])t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const e=s+f,n=o+f,r=d-m,a=p+(i-m),h=l*o/n*e,u=c*o/n*e;t.projectionMatrix.makePerspective(r,a,h,u,e,n),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}}(T,M,S):T.projectionMatrix.copy(M.projectionMatrix),function(t,e,n){null===n?t.matrix.copy(e.matrixWorld):(t.matrix.copy(n.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld));t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*gr*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,T,r)},this.getCamera=function(){return T},this.getFoveation=function(){if(null!==u||null!==d)return o},this.setFoveation=function(t){o=t,null!==u&&(u.fixedFoveation=t),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==f.texture},this.getDepthSensingMesh=function(){return f.getMesh(T)};let I=null;const N=new Eo;N.setAnimationLoop((function(e,r){if(c=r.getViewerPose(l||a),p=r,null!==c){const e=c.views;null!==d&&(t.setRenderTargetFramebuffer(_,d.framebuffer),t.setRenderTarget(_));let n=!1;e.length!==T.cameras.length&&(T.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const r=e[i];let a=null;if(null!==d)a=d.getViewport(r);else{const e=h.getViewSubImage(u,r);a=e.viewport,0===i&&(t.setRenderTargetTextures(_,e.colorTexture,u.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(_))}let s=E[i];void 0===s&&(s=new uo,s.layers.enable(i),s.viewport=new Xr,E[i]=s),s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.quaternion,s.scale),s.projectionMatrix.fromArray(r.projectionMatrix),s.projectionMatrixInverse.copy(s.projectionMatrix).invert(),s.viewport.set(a.x,a.y,a.width,a.height),0===i&&(T.matrix.copy(s.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),!0===n&&T.cameras.push(s)}const r=i.enabledFeatures;if(r&&r.includes("depth-sensing")){const n=h.getDepthInformation(e[0]);n&&n.isValid&&n.texture&&f.init(t,n,i.renderState)}}for(let t=0;t<v.length;t++){const e=y[t],n=v[t];null!==e&&void 0!==n&&n.update(e,r,l||a)}I&&I(e,r),r.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:r}),p=null})),this.setAnimationLoop=function(t){I=t},this.dispose=function(){}}}const ch=new Fa,hh=new Ca;function uh(t,e){function n(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function i(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map,n(i.map,t.mapTransform)),i.alphaMap&&(t.alphaMap.value=i.alphaMap,n(i.alphaMap,t.alphaMapTransform)),i.bumpMap&&(t.bumpMap.value=i.bumpMap,n(i.bumpMap,t.bumpMapTransform),t.bumpScale.value=i.bumpScale,1===i.side&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,n(i.normalMap,t.normalMapTransform),t.normalScale.value.copy(i.normalScale),1===i.side&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,n(i.displacementMap,t.displacementMapTransform),t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,t.emissiveMapTransform)),i.specularMap&&(t.specularMap.value=i.specularMap,n(i.specularMap,t.specularMapTransform)),i.alphaTest>0&&(t.alphaTest.value=i.alphaTest);const r=e.get(i),a=r.envMap,s=r.envMapRotation;a&&(t.envMap.value=a,ch.copy(s),ch.x*=-1,ch.y*=-1,ch.z*=-1,a.isCubeTexture&&!1===a.isRenderTargetTexture&&(ch.y*=-1,ch.z*=-1),t.envMapRotation.value.setFromMatrix4(hh.makeRotationFromEuler(ch)),t.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,t.reflectivity.value=i.reflectivity,t.ior.value=i.ior,t.refractionRatio.value=i.refractionRatio),i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity,n(i.lightMap,t.lightMapTransform)),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,t.aoMapTransform))}return{refreshFogUniforms:function(e,n){n.color.getRGB(e.fogColor.value,ro(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(t,r,a,s,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(t,r):r.isMeshToonMaterial?(i(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,r)):r.isMeshPhongMaterial?(i(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,r)):r.isMeshStandardMaterial?(i(t,r),function(t,e){t.metalness.value=e.metalness,e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap,n(e.metalnessMap,t.metalnessMapTransform));t.roughness.value=e.roughness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap,n(e.roughnessMap,t.roughnessMapTransform));e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}(t,r),r.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,n(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,n(e.sheenRoughnessMap,t.sheenRoughnessMapTransform)));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,n(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,n(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,n(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),1===e.side&&t.clearcoatNormalScale.value.negate()));e.dispersion>0&&(t.dispersion.value=e.dispersion);e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,n(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,n(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform)));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,n(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,n(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,n(e.anisotropyMap,t.anisotropyMapTransform)));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,n(e.specularColorMap,t.specularColorMapTransform));e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,n(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,r,o)):r.isMeshMatcapMaterial?(i(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,r)):r.isMeshDepthMaterial?i(t,r):r.isMeshDistanceMaterial?(i(t,r),function(t,n){const i=e.get(n).light;t.referencePosition.value.setFromMatrixPosition(i.matrixWorld),t.nearDistance.value=i.shadow.camera.near,t.farDistance.value=i.shadow.camera.far}(t,r)):r.isMeshNormalMaterial?i(t,r):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform))}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,i,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*r,e.map&&(t.map.value=e.map,n(e.map,t.uvTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r,a,s):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function dh(t,e,n,i){let r={},a={},s=[];const o=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);function l(t,e,n,i){const r=t.value,a=e+"_"+n;if(void 0===i[a])return i[a]="number"==typeof r||"boolean"==typeof r?r:r.clone(),!0;{const t=i[a];if("number"==typeof r||"boolean"==typeof r){if(t!==r)return i[a]=r,!0}else if(!1===t.equals(r))return t.copy(r),!0}return!1}function c(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),e}function h(e){const n=e.target;n.removeEventListener("dispose",h);const i=s.indexOf(n.__bindingPointIndex);s.splice(i,1),t.deleteBuffer(r[n.id]),delete r[n.id],delete a[n.id]}return{bind:function(t,e){const n=e.program;i.uniformBlockBinding(t,n)},update:function(n,u){let d=r[n.id];void 0===d&&(!function(t){const e=t.uniforms;let n=0;const i=16;for(let t=0,r=e.length;t<r;t++){const r=Array.isArray(e[t])?e[t]:[e[t]];for(let t=0,e=r.length;t<e;t++){const e=r[t],a=Array.isArray(e.value)?e.value:[e.value];for(let t=0,r=a.length;t<r;t++){const r=c(a[t]),s=n%i,o=s%r.boundary,l=s+o;n+=o,0!==l&&i-l<r.storage&&(n+=i-l),e.__data=new Float32Array(r.storage/Float32Array.BYTES_PER_ELEMENT),e.__offset=n,n+=r.storage}}}const r=n%i;r>0&&(n+=i-r);t.__size=n,t.__cache={}}(n),d=function(e){const n=function(){for(let t=0;t<o;t++)if(-1===s.indexOf(t))return s.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=n;const i=t.createBuffer(),r=e.__size,a=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,r,a),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=d,n.addEventListener("dispose",h));const p=u.program;i.updateUBOMapping(n,p);const f=e.render.frame;a[n.id]!==f&&(!function(e){const n=r[e.id],i=e.uniforms,a=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,n);for(let e=0,n=i.length;e<n;e++){const n=Array.isArray(i[e])?i[e]:[i[e]];for(let i=0,r=n.length;i<r;i++){const r=n[i];if(!0===l(r,e,i,a)){const e=r.__offset,n=Array.isArray(r.value)?r.value:[r.value];let i=0;for(let a=0;a<n.length;a++){const s=n[a],o=c(s);"number"==typeof s||"boolean"==typeof s?(r.__data[0]=s,t.bufferSubData(t.UNIFORM_BUFFER,e+i,r.__data)):s.isMatrix3?(r.__data[0]=s.elements[0],r.__data[1]=s.elements[1],r.__data[2]=s.elements[2],r.__data[3]=0,r.__data[4]=s.elements[3],r.__data[5]=s.elements[4],r.__data[6]=s.elements[5],r.__data[7]=0,r.__data[8]=s.elements[6],r.__data[9]=s.elements[7],r.__data[10]=s.elements[8],r.__data[11]=0):(s.toArray(r.__data,i),i+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,r.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(n),a[n.id]=f)},dispose:function(){for(const e in r)t.deleteBuffer(r[e]);s=[],r={},a={}}}}class ph{constructor(t={}){const{canvas:e=Rr(),context:n=null,depth:i=!0,stencil:r=!1,alpha:a=!1,antialias:s=!1,premultipliedAlpha:o=!0,preserveDrawingBuffer:l=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1}=t;let u;if(this.isWebGLRenderer=!0,null!==n){if("undefined"!=typeof WebGLRenderingContext&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");u=n.getContextAttributes().alpha}else u=a;const d=new Uint32Array(4),p=new Int32Array(4);let f=null,m=null;const g=[],_=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Xi,this.toneMapping=0,this.toneMappingExposure=1;const v=this;let y=!1,x=0,b=0,M=null,S=-1,E=null;const T=new Xr,w=new Xr;let A=null;const C=new _s(0);let R=0,P=e.width,L=e.height,D=1,U=null,I=null;const N=new Xr(0,0,P,L),k=new Xr(0,0,P,L);let O=!1;const F=new So;let B=!1,z=!1;const H=new Ca,V=new Jr,G=new Xr,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let j=!1;function X(){return null===M?D:1}let q,$,Y,K,Z,J,Q,tt,et,nt,it,rt,at,st,ot,lt,ct,ht,ut,dt,pt,ft,mt,gt,_t=n;function vt(t,n){return e.getContext(t,n)}try{const t={alpha:!0,depth:i,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${cn}`),e.addEventListener("webglcontextlost",bt,!1),e.addEventListener("webglcontextrestored",Mt,!1),e.addEventListener("webglcontextcreationerror",St,!1),null===_t){const e="webgl2";if(_t=vt(e,t),null===_t)throw vt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function yt(){q=new rl(_t),q.init(),ft=new nh(_t,q),$=new ko(_t,q,t,ft),Y=new Qc(_t),K=new ol(_t),Z=new Bc,J=new eh(_t,q,Y,Z,$,ft,K),Q=new Fo(v),tt=new il(v),et=new To(_t),mt=new Io(_t,et),nt=new al(_t,et,K,mt),it=new cl(_t,nt,et,K),ut=new ll(_t,$,J),lt=new Oo(Z),rt=new Fc(v,Q,tt,q,$,mt,lt),at=new uh(v,Z),st=new Gc,ot=new Yc(q),ht=new Uo(v,Q,tt,Y,it,u,o),ct=new Jc(v,it,$),gt=new dh(_t,K,$,Y),dt=new No(_t,q,K),pt=new sl(_t,q,K),K.programs=rt.programs,v.capabilities=$,v.extensions=q,v.properties=Z,v.renderLists=st,v.shadowMap=ct,v.state=Y,v.info=K}yt();const xt=new lh(v,_t);function bt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function Mt(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const t=K.autoReset,e=ct.enabled,n=ct.autoUpdate,i=ct.needsUpdate,r=ct.type;yt(),K.autoReset=t,ct.enabled=e,ct.autoUpdate=n,ct.needsUpdate=i,ct.type=r}function St(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function Et(t){const e=t.target;e.removeEventListener("dispose",Et),function(t){(function(t){const e=Z.get(t).programs;void 0!==e&&(e.forEach((function(t){rt.releaseProgram(t)})),t.isShaderMaterial&&rt.releaseShaderCache(t))})(t),Z.remove(t)}(e)}function Tt(t,e,n){!0===t.transparent&&2===t.side&&!1===t.forceSinglePass?(t.side=1,t.needsUpdate=!0,Nt(t,e,n),t.side=0,t.needsUpdate=!0,Nt(t,e,n),t.side=2):Nt(t,e,n)}this.xr=xt,this.getContext=function(){return _t},this.getContextAttributes=function(){return _t.getContextAttributes()},this.forceContextLoss=function(){const t=q.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=q.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(t){void 0!==t&&(D=t,this.setSize(P,L,!1))},this.getSize=function(t){return t.set(P,L)},this.setSize=function(t,n,i=!0){xt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(P=t,L=n,e.width=Math.floor(t*D),e.height=Math.floor(n*D),!0===i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(P*D,L*D).floor()},this.setDrawingBufferSize=function(t,n,i){P=t,L=n,D=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(T)},this.getViewport=function(t){return t.copy(N)},this.setViewport=function(t,e,n,i){t.isVector4?N.set(t.x,t.y,t.z,t.w):N.set(t,e,n,i),Y.viewport(T.copy(N).multiplyScalar(D).round())},this.getScissor=function(t){return t.copy(k)},this.setScissor=function(t,e,n,i){t.isVector4?k.set(t.x,t.y,t.z,t.w):k.set(t,e,n,i),Y.scissor(w.copy(k).multiplyScalar(D).round())},this.getScissorTest=function(){return O},this.setScissorTest=function(t){Y.setScissorTest(O=t)},this.setOpaqueSort=function(t){U=t},this.setTransparentSort=function(t){I=t},this.getClearColor=function(t){return t.copy(ht.getClearColor())},this.setClearColor=function(){ht.setClearColor.apply(ht,arguments)},this.getClearAlpha=function(){return ht.getClearAlpha()},this.setClearAlpha=function(){ht.setClearAlpha.apply(ht,arguments)},this.clear=function(t=!0,e=!0,n=!0){let i=0;if(t){let t=!1;if(null!==M){const e=M.texture.format;t=e===pi||e===di||e===ui}if(t){const t=M.texture.type,e=t===Kn||t===ei||t===Qn||t===si||t===ri||t===ai,n=ht.getClearColor(),i=ht.getClearAlpha(),r=n.r,a=n.g,s=n.b;e?(d[0]=r,d[1]=a,d[2]=s,d[3]=i,_t.clearBufferuiv(_t.COLOR,0,d)):(p[0]=r,p[1]=a,p[2]=s,p[3]=i,_t.clearBufferiv(_t.COLOR,0,p))}else i|=_t.COLOR_BUFFER_BIT}e&&(i|=_t.DEPTH_BUFFER_BIT),n&&(i|=_t.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),_t.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",bt,!1),e.removeEventListener("webglcontextrestored",Mt,!1),e.removeEventListener("webglcontextcreationerror",St,!1),st.dispose(),ot.dispose(),Z.dispose(),Q.dispose(),tt.dispose(),it.dispose(),mt.dispose(),gt.dispose(),rt.dispose(),xt.dispose(),xt.removeEventListener("sessionstart",At),xt.removeEventListener("sessionend",Ct),Rt.stop()},this.renderBufferDirect=function(t,e,n,i,r,a){null===e&&(e=W);const s=r.isMesh&&r.matrixWorld.determinant()<0,o=function(t,e,n,i,r){!0!==e.isScene&&(e=W);J.resetTextureUnits();const a=e.fog,s=i.isMeshStandardMaterial?e.environment:null,o=null===M?v.outputColorSpace:!0===M.isXRRenderTarget?M.texture.colorSpace:qi,l=(i.isMeshStandardMaterial?tt:Q).get(i.envMap||s),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),u=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let f=0;i.toneMapped&&(null!==M&&!0!==M.isXRRenderTarget||(f=v.toneMapping));const g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,_=void 0!==g?g.length:0,y=Z.get(i),x=m.state.lights;if(!0===B&&(!0===z||t!==E)){const e=t===E&&i.id===S;lt.setState(i,t,e)}let b=!1;i.version===y.__version?y.needsLights&&y.lightsStateVersion!==x.state.version||y.outputColorSpace!==o||r.isBatchedMesh&&!1===y.batching?b=!0:r.isBatchedMesh||!0!==y.batching?r.isBatchedMesh&&!0===y.batchingColor&&null===r.colorTexture||r.isBatchedMesh&&!1===y.batchingColor&&null!==r.colorTexture||r.isInstancedMesh&&!1===y.instancing?b=!0:r.isInstancedMesh||!0!==y.instancing?r.isSkinnedMesh&&!1===y.skinning?b=!0:r.isSkinnedMesh||!0!==y.skinning?r.isInstancedMesh&&!0===y.instancingColor&&null===r.instanceColor||r.isInstancedMesh&&!1===y.instancingColor&&null!==r.instanceColor||r.isInstancedMesh&&!0===y.instancingMorph&&null===r.morphTexture||r.isInstancedMesh&&!1===y.instancingMorph&&null!==r.morphTexture||y.envMap!==l||!0===i.fog&&y.fog!==a?b=!0:void 0===y.numClippingPlanes||y.numClippingPlanes===lt.numPlanes&&y.numIntersection===lt.numIntersection?(y.vertexAlphas!==c||y.vertexTangents!==h||y.morphTargets!==u||y.morphNormals!==d||y.morphColors!==p||y.toneMapping!==f||y.morphTargetsCount!==_)&&(b=!0):b=!0:b=!0:b=!0:b=!0:(b=!0,y.__version=i.version);let T=y.currentProgram;!0===b&&(T=Nt(i,e,r));let w=!1,A=!1,C=!1;const R=T.getUniforms(),P=y.uniforms;Y.useProgram(T.program)&&(w=!0,A=!0,C=!0);i.id!==S&&(S=i.id,A=!0);if(w||E!==t){R.setValue(_t,"projectionMatrix",t.projectionMatrix),R.setValue(_t,"viewMatrix",t.matrixWorldInverse);const e=R.map.cameraPosition;void 0!==e&&e.setValue(_t,V.setFromMatrixPosition(t.matrixWorld)),$.logarithmicDepthBuffer&&R.setValue(_t,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&R.setValue(_t,"isOrthographic",!0===t.isOrthographicCamera),E!==t&&(E=t,A=!0,C=!0)}if(r.isSkinnedMesh){R.setOptional(_t,r,"bindMatrix"),R.setOptional(_t,r,"bindMatrixInverse");const t=r.skeleton;t&&(null===t.boneTexture&&t.computeBoneTexture(),R.setValue(_t,"boneTexture",t.boneTexture,J))}r.isBatchedMesh&&(R.setOptional(_t,r,"batchingTexture"),R.setValue(_t,"batchingTexture",r._matricesTexture,J),R.setOptional(_t,r,"batchingIdTexture"),R.setValue(_t,"batchingIdTexture",r._indirectTexture,J),R.setOptional(_t,r,"batchingColorTexture"),null!==r._colorsTexture&&R.setValue(_t,"batchingColorTexture",r._colorsTexture,J));const U=n.morphAttributes;void 0===U.position&&void 0===U.normal&&void 0===U.color||ut.update(r,n,T);(A||y.receiveShadow!==r.receiveShadow)&&(y.receiveShadow=r.receiveShadow,R.setValue(_t,"receiveShadow",r.receiveShadow));i.isMeshGouraudMaterial&&null!==i.envMap&&(P.envMap.value=l,P.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);i.isMeshStandardMaterial&&null===i.envMap&&null!==e.environment&&(P.envMapIntensity.value=e.environmentIntensity);A&&(R.setValue(_t,"toneMappingExposure",v.toneMappingExposure),y.needsLights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(P,C),a&&!0===i.fog&&at.refreshFogUniforms(P,a),at.refreshMaterialUniforms(P,i,D,L,m.state.transmissionRenderTarget[t.id]),mc.upload(_t,kt(y),P,J));i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(mc.upload(_t,kt(y),P,J),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&R.setValue(_t,"center",r.center);if(R.setValue(_t,"modelViewMatrix",r.modelViewMatrix),R.setValue(_t,"normalMatrix",r.normalMatrix),R.setValue(_t,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const t=i.uniformsGroups;for(let e=0,n=t.length;e<n;e++){const n=t[e];gt.update(n,T),gt.bind(n,T)}}return T}(t,e,n,i,r);Y.setMaterial(i,s);let l=n.index,c=1;if(!0===i.wireframe){if(l=nt.getWireframeAttribute(n),void 0===l)return;c=2}const h=n.drawRange,u=n.attributes.position;let d=h.start*c,p=(h.start+h.count)*c;null!==a&&(d=Math.max(d,a.start*c),p=Math.min(p,(a.start+a.count)*c)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=u&&(d=Math.max(d,0),p=Math.min(p,u.count));const f=p-d;if(f<0||f===1/0)return;let g;mt.setup(r,i,o,n,l);let _=dt;if(null!==l&&(g=et.get(l),_=pt,_.setIndex(g)),r.isMesh)!0===i.wireframe?(Y.setLineWidth(i.wireframeLinewidth*X()),_.setMode(_t.LINES)):_.setMode(_t.TRIANGLES);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),Y.setLineWidth(t*X()),r.isLineSegments?_.setMode(_t.LINES):r.isLineLoop?_.setMode(_t.LINE_LOOP):_.setMode(_t.LINE_STRIP)}else r.isPoints?_.setMode(_t.POINTS):r.isSprite&&_.setMode(_t.TRIANGLES);if(r.isBatchedMesh)if(null!==r._multiDrawInstances)_.renderMultiDrawInstances(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount,r._multiDrawInstances);else if(q.get("WEBGL_multi_draw"))_.renderMultiDraw(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount);else{const t=r._multiDrawStarts,e=r._multiDrawCounts,n=r._multiDrawCount,a=l?et.get(l).bytesPerElement:1,s=Z.get(i).currentProgram.getUniforms();for(let i=0;i<n;i++)s.setValue(_t,"_gl_DrawID",i),_.render(t[i]/a,e[i])}else if(r.isInstancedMesh)_.renderInstances(d,f,r.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);_.renderInstances(d,f,e)}else _.render(d,f)},this.compile=function(t,e,n=null){null===n&&(n=t),m=ot.get(n),m.init(e),_.push(m),n.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),t!==n&&t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights();const i=new Set;return t.traverse((function(t){const e=t.material;if(e)if(Array.isArray(e))for(let r=0;r<e.length;r++){const a=e[r];Tt(a,n,t),i.add(a)}else Tt(e,n,t),i.add(e)})),_.pop(),m=null,i},this.compileAsync=function(t,e,n=null){const i=this.compile(t,e,n);return new Promise((e=>{function n(){i.forEach((function(t){Z.get(t).currentProgram.isReady()&&i.delete(t)})),0!==i.size?setTimeout(n,10):e(t)}null!==q.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)}))};let wt=null;function At(){Rt.stop()}function Ct(){Rt.start()}const Rt=new Eo;function Pt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||F.intersectsSprite(t)){i&&G.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H);const e=it.update(t),r=t.material;r.visible&&f.push(t,e,r,n,G.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||F.intersectsObject(t))){const e=it.update(t),r=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),G.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),G.copy(e.boundingSphere.center)),G.applyMatrix4(t.matrixWorld).applyMatrix4(H)),Array.isArray(r)){const i=e.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],o=r[s.materialIndex];o&&o.visible&&f.push(t,e,o,n,G.z,s)}}else r.visible&&f.push(t,e,r,n,G.z,null)}const r=t.children;for(let t=0,a=r.length;t<a;t++)Pt(r[t],e,n,i)}function Lt(t,e,n,i){const r=t.opaque,a=t.transmissive,s=t.transparent;m.setupLightsView(n),!0===B&&lt.setGlobalState(v.clippingPlanes,n),i&&Y.viewport(T.copy(i)),r.length>0&&Ut(r,e,n),a.length>0&&Ut(a,e,n),s.length>0&&Ut(s,e,n),Y.buffers.depth.setTest(!0),Y.buffers.depth.setMask(!0),Y.buffers.color.setMask(!0),Y.setPolygonOffset(!1)}function Dt(t,e,n,i){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===m.state.transmissionRenderTarget[i.id]&&(m.state.transmissionRenderTarget[i.id]=new $r(1,1,{generateMipmaps:!0,type:q.has("EXT_color_buffer_half_float")||q.has("EXT_color_buffer_float")?ii:Kn,minFilter:Yn,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:kr.workingColorSpace}));const a=m.state.transmissionRenderTarget[i.id],s=i.viewport||T;a.setSize(s.z,s.w);const o=v.getRenderTarget();v.setRenderTarget(a),v.getClearColor(C),R=v.getClearAlpha(),R<1&&v.setClearColor(16777215,.5),v.clear(),j&&ht.render(n);const l=v.toneMapping;v.toneMapping=0;const c=i.viewport;if(void 0!==i.viewport&&(i.viewport=void 0),m.setupLightsView(i),!0===B&&lt.setGlobalState(v.clippingPlanes,i),Ut(t,n,i),J.updateMultisampleRenderTarget(a),J.updateRenderTargetMipmap(a),!1===q.has("WEBGL_multisampled_render_to_texture")){let t=!1;for(let r=0,a=e.length;r<a;r++){const a=e[r],s=a.object,o=a.geometry,l=a.material,c=a.group;if(2===l.side&&s.layers.test(i.layers)){const e=l.side;l.side=1,l.needsUpdate=!0,It(s,n,i,o,l,c),l.side=e,l.needsUpdate=!0,t=!0}}!0===t&&(J.updateMultisampleRenderTarget(a),J.updateRenderTargetMipmap(a))}v.setRenderTarget(o),v.setClearColor(C,R),void 0!==c&&(i.viewport=c),v.toneMapping=l}function Ut(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=a.object,o=a.geometry,l=null===i?a.material:i,c=a.group;s.layers.test(n.layers)&&It(s,e,n,o,l,c)}}function It(t,e,n,i,r,a){t.onBeforeRender(v,e,n,i,r,a),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(v,e,n,i,t,a),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,v.renderBufferDirect(n,e,i,r,t,a),r.side=0,r.needsUpdate=!0,v.renderBufferDirect(n,e,i,r,t,a),r.side=2):v.renderBufferDirect(n,e,i,r,t,a),t.onAfterRender(v,e,n,i,r,a)}function Nt(t,e,n){!0!==e.isScene&&(e=W);const i=Z.get(t),r=m.state.lights,a=m.state.shadowsArray,s=r.state.version,o=rt.getParameters(t,r.state,a,e,n),l=rt.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?tt:Q).get(t.envMap||i.environment),i.envMapRotation=null!==i.environment&&null===t.envMap?e.environmentRotation:t.envMapRotation,void 0===c&&(t.addEventListener("dispose",Et),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===s)return Ot(t,o),h}else o.uniforms=rt.getUniforms(t),t.onBeforeCompile(o,v),h=rt.acquireProgram(o,l),c.set(l,h),i.uniforms=o.uniforms;const u=i.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=lt.uniform),Ot(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotLightMatrix.value=r.state.spotLightMatrix,u.spotLightMap.value=r.state.spotLightMap,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix),i.currentProgram=h,i.uniformsList=null,h}function kt(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=mc.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function Ot(t,e){const n=Z.get(t);n.outputColorSpace=e.outputColorSpace,n.batching=e.batching,n.batchingColor=e.batchingColor,n.instancing=e.instancing,n.instancingColor=e.instancingColor,n.instancingMorph=e.instancingMorph,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}Rt.setAnimationLoop((function(t){wt&&wt(t)})),"undefined"!=typeof self&&Rt.setContext(self),this.setAnimationLoop=function(t){wt=t,xt.setAnimationLoop(t),null===t?Rt.stop():Rt.start()},xt.addEventListener("sessionstart",At),xt.addEventListener("sessionend",Ct),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===y)return;if(!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===xt.enabled&&!0===xt.isPresenting&&(!0===xt.cameraAutoUpdate&&xt.updateCamera(e),e=xt.getCamera()),!0===t.isScene&&t.onBeforeRender(v,t,e,M),m=ot.get(t,_.length),m.init(e),_.push(m),H.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),F.setFromProjectionMatrix(H),z=this.localClippingEnabled,B=lt.init(this.clippingPlanes,z),f=st.get(t,g.length),f.init(),g.push(f),!0===xt.enabled&&!0===xt.isPresenting){const t=v.xr.getDepthSensingMesh();null!==t&&Pt(t,e,-1/0,v.sortObjects)}Pt(t,e,0,v.sortObjects),f.finish(),!0===v.sortObjects&&f.sort(U,I),j=!1===xt.enabled||!1===xt.isPresenting||!1===xt.hasDepthSensing(),j&&ht.addToRenderList(f,t),this.info.render.frame++,!0===B&&lt.beginShadows();const n=m.state.shadowsArray;ct.render(n,t,e),!0===B&&lt.endShadows(),!0===this.info.autoReset&&this.info.reset();const i=f.opaque,r=f.transmissive;if(m.setupLights(),e.isArrayCamera){const n=e.cameras;if(r.length>0)for(let e=0,a=n.length;e<a;e++){Dt(i,r,t,n[e])}j&&ht.render(t);for(let e=0,i=n.length;e<i;e++){const i=n[e];Lt(f,t,i,i.viewport)}}else r.length>0&&Dt(i,r,t,e),j&&ht.render(t),Lt(f,t,e);null!==M&&(J.updateMultisampleRenderTarget(M),J.updateRenderTargetMipmap(M)),!0===t.isScene&&t.onAfterRender(v,t,e),mt.resetDefaultState(),S=-1,E=null,_.pop(),_.length>0?(m=_[_.length-1],!0===B&&lt.setGlobalState(v.clippingPlanes,m.state.camera)):m=null,g.pop(),f=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(t,e,n){Z.get(t.texture).__webglTexture=e,Z.get(t.depthTexture).__webglTexture=n;const i=Z.get(t);i.__hasExternalTextures=!0,i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===q.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(t,e){const n=Z.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){M=t,x=e,b=n;let i=!0,r=null,a=!1,s=!1;if(t){const o=Z.get(t);if(void 0!==o.__useDefaultFramebuffer)Y.bindFramebuffer(_t.FRAMEBUFFER,null),i=!1;else if(void 0===o.__webglFramebuffer)J.setupRenderTarget(t);else if(o.__hasExternalTextures)J.rebindTextures(t,Z.get(t.texture).__webglTexture,Z.get(t.depthTexture).__webglTexture);else if(t.depthBuffer){const e=t.depthTexture;if(o.__boundDepthTexture!==e){if(null!==e&&Z.has(e)&&(t.width!==e.image.width||t.height!==e.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");J.setupDepthRenderbuffer(t)}}const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(s=!0);const c=Z.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=Array.isArray(c[e])?c[e][n]:c[e],a=!0):r=t.samples>0&&!1===J.useMultisampledRTT(t)?Z.get(t).__webglMultisampledFramebuffer:Array.isArray(c)?c[n]:c,T.copy(t.viewport),w.copy(t.scissor),A=t.scissorTest}else T.copy(N).multiplyScalar(D).floor(),w.copy(k).multiplyScalar(D).floor(),A=O;if(Y.bindFramebuffer(_t.FRAMEBUFFER,r)&&i&&Y.drawBuffers(t,r),Y.viewport(T),Y.scissor(w),Y.setScissorTest(A),a){const i=Z.get(t.texture);_t.framebufferTexture2D(_t.FRAMEBUFFER,_t.COLOR_ATTACHMENT0,_t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}else if(s){const i=Z.get(t.texture),r=e||0;_t.framebufferTextureLayer(_t.FRAMEBUFFER,_t.COLOR_ATTACHMENT0,i.__webglTexture,n||0,r)}S=-1},this.readRenderTargetPixels=function(t,e,n,i,r,a,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=Z.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){Y.bindFramebuffer(_t.FRAMEBUFFER,o);try{const s=t.texture,o=s.format,l=s.type;if(!$.textureFormatReadable(o))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!$.textureTypeReadable(l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&_t.readPixels(e,n,i,r,ft.convert(o),ft.convert(l),a)}finally{const t=null!==M?Z.get(M).__webglFramebuffer:null;Y.bindFramebuffer(_t.FRAMEBUFFER,t)}}},this.readRenderTargetPixelsAsync=async function(t,e,n,i,r,a,s){if(!t||!t.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=Z.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){Y.bindFramebuffer(_t.FRAMEBUFFER,o);try{const s=t.texture,o=s.format,l=s.type;if(!$.textureFormatReadable(o))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!$.textureTypeReadable(l))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r){const t=_t.createBuffer();_t.bindBuffer(_t.PIXEL_PACK_BUFFER,t),_t.bufferData(_t.PIXEL_PACK_BUFFER,a.byteLength,_t.STREAM_READ),_t.readPixels(e,n,i,r,ft.convert(o),ft.convert(l),0),_t.flush();const s=_t.fenceSync(_t.SYNC_GPU_COMMANDS_COMPLETE,0);await function(t,e,n){return new Promise((function(i,r){setTimeout((function a(){switch(t.clientWaitSync(e,t.SYNC_FLUSH_COMMANDS_BIT,0)){case t.WAIT_FAILED:r();break;case t.TIMEOUT_EXPIRED:setTimeout(a,n);break;default:i()}}),n)}))}(_t,s,4);try{_t.bindBuffer(_t.PIXEL_PACK_BUFFER,t),_t.getBufferSubData(_t.PIXEL_PACK_BUFFER,0,a)}finally{_t.deleteBuffer(t),_t.deleteSync(s)}return a}}finally{const t=null!==M?Z.get(M).__webglFramebuffer:null;Y.bindFramebuffer(_t.FRAMEBUFFER,t)}}},this.copyFramebufferToTexture=function(t,e=null,n=0){!0!==t.isTexture&&(Lr("WebGLRenderer: copyFramebufferToTexture function signature has changed."),e=arguments[0]||null,t=arguments[1]);const i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i),s=null!==e?e.x:0,o=null!==e?e.y:0;J.setTexture2D(t,0),_t.copyTexSubImage2D(_t.TEXTURE_2D,n,0,0,s,o,r,a),Y.unbindTexture()},this.copyTextureToTexture=function(t,e,n=null,i=null,r=0){let a,s,o,l,c,h;!0!==t.isTexture&&(Lr("WebGLRenderer: copyTextureToTexture function signature has changed."),i=arguments[0]||null,t=arguments[1],e=arguments[2],r=arguments[3]||0,n=null),null!==n?(a=n.max.x-n.min.x,s=n.max.y-n.min.y,o=n.min.x,l=n.min.y):(a=t.image.width,s=t.image.height,o=0,l=0),null!==i?(c=i.x,h=i.y):(c=0,h=0);const u=ft.convert(e.format),d=ft.convert(e.type);J.setTexture2D(e,0),_t.pixelStorei(_t.UNPACK_FLIP_Y_WEBGL,e.flipY),_t.pixelStorei(_t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),_t.pixelStorei(_t.UNPACK_ALIGNMENT,e.unpackAlignment);const p=_t.getParameter(_t.UNPACK_ROW_LENGTH),f=_t.getParameter(_t.UNPACK_IMAGE_HEIGHT),m=_t.getParameter(_t.UNPACK_SKIP_PIXELS),g=_t.getParameter(_t.UNPACK_SKIP_ROWS),_=_t.getParameter(_t.UNPACK_SKIP_IMAGES),v=t.isCompressedTexture?t.mipmaps[r]:t.image;_t.pixelStorei(_t.UNPACK_ROW_LENGTH,v.width),_t.pixelStorei(_t.UNPACK_IMAGE_HEIGHT,v.height),_t.pixelStorei(_t.UNPACK_SKIP_PIXELS,o),_t.pixelStorei(_t.UNPACK_SKIP_ROWS,l),t.isDataTexture?_t.texSubImage2D(_t.TEXTURE_2D,r,c,h,a,s,u,d,v.data):t.isCompressedTexture?_t.compressedTexSubImage2D(_t.TEXTURE_2D,r,c,h,v.width,v.height,u,v.data):_t.texSubImage2D(_t.TEXTURE_2D,r,c,h,a,s,u,d,v),_t.pixelStorei(_t.UNPACK_ROW_LENGTH,p),_t.pixelStorei(_t.UNPACK_IMAGE_HEIGHT,f),_t.pixelStorei(_t.UNPACK_SKIP_PIXELS,m),_t.pixelStorei(_t.UNPACK_SKIP_ROWS,g),_t.pixelStorei(_t.UNPACK_SKIP_IMAGES,_),0===r&&e.generateMipmaps&&_t.generateMipmap(_t.TEXTURE_2D),Y.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n=null,i=null,r=0){let a,s,o,l,c,h,u,d,p;!0!==t.isTexture&&(Lr("WebGLRenderer: copyTextureToTexture3D function signature has changed."),n=arguments[0]||null,i=arguments[1]||null,t=arguments[2],e=arguments[3],r=arguments[4]||0);const f=t.isCompressedTexture?t.mipmaps[r]:t.image;null!==n?(a=n.max.x-n.min.x,s=n.max.y-n.min.y,o=n.max.z-n.min.z,l=n.min.x,c=n.min.y,h=n.min.z):(a=f.width,s=f.height,o=f.depth,l=0,c=0,h=0),null!==i?(u=i.x,d=i.y,p=i.z):(u=0,d=0,p=0);const m=ft.convert(e.format),g=ft.convert(e.type);let _;if(e.isData3DTexture)J.setTexture3D(e,0),_=_t.TEXTURE_3D;else{if(!e.isDataArrayTexture&&!e.isCompressedArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");J.setTexture2DArray(e,0),_=_t.TEXTURE_2D_ARRAY}_t.pixelStorei(_t.UNPACK_FLIP_Y_WEBGL,e.flipY),_t.pixelStorei(_t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),_t.pixelStorei(_t.UNPACK_ALIGNMENT,e.unpackAlignment);const v=_t.getParameter(_t.UNPACK_ROW_LENGTH),y=_t.getParameter(_t.UNPACK_IMAGE_HEIGHT),x=_t.getParameter(_t.UNPACK_SKIP_PIXELS),b=_t.getParameter(_t.UNPACK_SKIP_ROWS),M=_t.getParameter(_t.UNPACK_SKIP_IMAGES);_t.pixelStorei(_t.UNPACK_ROW_LENGTH,f.width),_t.pixelStorei(_t.UNPACK_IMAGE_HEIGHT,f.height),_t.pixelStorei(_t.UNPACK_SKIP_PIXELS,l),_t.pixelStorei(_t.UNPACK_SKIP_ROWS,c),_t.pixelStorei(_t.UNPACK_SKIP_IMAGES,h),t.isDataTexture||t.isData3DTexture?_t.texSubImage3D(_,r,u,d,p,a,s,o,m,g,f.data):e.isCompressedArrayTexture?_t.compressedTexSubImage3D(_,r,u,d,p,a,s,o,m,f.data):_t.texSubImage3D(_,r,u,d,p,a,s,o,m,g,f),_t.pixelStorei(_t.UNPACK_ROW_LENGTH,v),_t.pixelStorei(_t.UNPACK_IMAGE_HEIGHT,y),_t.pixelStorei(_t.UNPACK_SKIP_PIXELS,x),_t.pixelStorei(_t.UNPACK_SKIP_ROWS,b),_t.pixelStorei(_t.UNPACK_SKIP_IMAGES,M),0===r&&e.generateMipmaps&&_t.generateMipmap(_),Y.unbindTexture()},this.initRenderTarget=function(t){void 0===Z.get(t).__webglFramebuffer&&J.setupRenderTarget(t)},this.initTexture=function(t){t.isCubeTexture?J.setTextureCube(t,0):t.isData3DTexture?J.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?J.setTexture2DArray(t,0):J.setTexture2D(t,0),Y.unbindTexture()},this.resetState=function(){x=0,b=0,M=null,Y.reset(),mt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ur}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=t===$i?"display-p3":"srgb",e.unpackColorSpace=kr.workingColorSpace===Yi?"display-p3":"srgb"}}class fh extends es{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Fa,this.environmentIntensity=1,this.environmentRotation=new Fa,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class mh{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=cr,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=_r()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}get updateRange(){return Lr("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=_r()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=_r()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const gh=new Jr;class _h{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)gh.fromBufferAttribute(this,e),gh.applyMatrix4(t),this.setXYZ(e,gh.x,gh.y,gh.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)gh.fromBufferAttribute(this,e),gh.applyNormalMatrix(t),this.setXYZ(e,gh.x,gh.y,gh.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)gh.fromBufferAttribute(this,e),gh.transformDirection(t),this.setXYZ(e,gh.x,gh.y,gh.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=br(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Mr(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=Mr(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=Mr(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=Mr(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=Mr(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=br(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=br(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=br(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=br(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=Mr(e,this.array),n=Mr(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=Mr(e,this.array),n=Mr(n,this.array),i=Mr(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=Mr(e,this.array),n=Mr(n,this.array),i=Mr(i,this.array),r=Mr(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Es(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new _h(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class vh extends xs{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new _s(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let yh;const xh=new Jr,bh=new Jr,Mh=new Jr,Sh=new Er,Eh=new Er,Th=new Ca,wh=new Jr,Ah=new Jr,Ch=new Jr,Rh=new Er,Ph=new Er,Lh=new Er;class Dh extends es{constructor(t=new vh){if(super(),this.isSprite=!0,this.type="Sprite",void 0===yh){yh=new Ns;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new mh(t,5);yh.setIndex([0,1,2,0,2,3]),yh.setAttribute("position",new _h(e,3,0,!1)),yh.setAttribute("uv",new _h(e,2,3,!1))}this.geometry=yh,this.material=t,this.center=new Er(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),bh.setFromMatrixScale(this.matrixWorld),Th.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Mh.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&bh.multiplyScalar(-Mh.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;Uh(wh.set(-.5,-.5,0),Mh,a,bh,i,r),Uh(Ah.set(.5,-.5,0),Mh,a,bh,i,r),Uh(Ch.set(.5,.5,0),Mh,a,bh,i,r),Rh.set(0,0),Ph.set(1,0),Lh.set(1,1);let s=t.ray.intersectTriangle(wh,Ah,Ch,!1,xh);if(null===s&&(Uh(Ah.set(-.5,.5,0),Mh,a,bh,i,r),Ph.set(0,1),s=t.ray.intersectTriangle(wh,Ch,Ah,!1,xh),null===s))return;const o=t.ray.origin.distanceTo(xh);o<t.near||o>t.far||e.push({distance:o,point:xh.clone(),uv:ds.getInterpolation(xh,wh,Ah,Ch,Rh,Ph,Lh,new Er),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Uh(t,e,n,i,r,a){Sh.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(Eh.x=a*Sh.x-r*Sh.y,Eh.y=r*Sh.x+a*Sh.y):Eh.copy(Sh),t.copy(e),t.x+=Eh.x,t.y+=Eh.y,t.applyMatrix4(Th)}class Ih extends xs{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new _s(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Nh=new Jr,kh=new Jr,Oh=new Ca,Fh=new Aa,Bh=new ya,zh=new Jr,Hh=new Jr;class Vh extends es{constructor(t=new Ns,e=new Ih){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)Nh.fromBufferAttribute(e,t-1),kh.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Nh.distanceTo(kh);t.setAttribute("lineDistance",new As(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Bh.copy(n.boundingSphere),Bh.applyMatrix4(i),Bh.radius+=r,!1===t.ray.intersectsSphere(Bh))return;Oh.copy(i).invert(),Fh.copy(t.ray).applyMatrix4(Oh);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=this.isLineSegments?2:1,c=n.index,h=n.attributes.position;if(null!==c){const n=Math.max(0,a.start),i=Math.min(c.count,a.start+a.count);for(let r=n,a=i-1;r<a;r+=l){const n=c.getX(r),i=c.getX(r+1),a=Gh(this,t,Fh,o,n,i);a&&e.push(a)}if(this.isLineLoop){const r=c.getX(i-1),a=c.getX(n),s=Gh(this,t,Fh,o,r,a);s&&e.push(s)}}else{const n=Math.max(0,a.start),i=Math.min(h.count,a.start+a.count);for(let r=n,a=i-1;r<a;r+=l){const n=Gh(this,t,Fh,o,r,r+1);n&&e.push(n)}if(this.isLineLoop){const r=Gh(this,t,Fh,o,i-1,n);r&&e.push(r)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function Gh(t,e,n,i,r,a){const s=t.geometry.attributes.position;Nh.fromBufferAttribute(s,r),kh.fromBufferAttribute(s,a);if(n.distanceSqToSegment(Nh,kh,zh,Hh)>i)return;zh.applyMatrix4(t.matrixWorld);const o=e.ray.origin.distanceTo(zh);return o<e.near||o>e.far?void 0:{distance:o,point:Hh.clone().applyMatrix4(t.matrixWorld),index:r,face:null,faceIndex:null,object:t}}class Wh extends jr{constructor(t,e,n,i,r,a,s,o,l){super(t,e,n,i,r,a,s,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class jh extends Ns{constructor(t=1,e=32,n=16,i=0,r=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:s},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(a+s,Math.PI);let l=0;const c=[],h=new Jr,u=new Jr,d=[],p=[],f=[],m=[];for(let d=0;d<=n;d++){const g=[],_=d/n;let v=0;0===d&&0===a?v=.5/e:d===n&&o===Math.PI&&(v=-.5/e);for(let n=0;n<=e;n++){const o=n/e;h.x=-t*Math.cos(i+o*r)*Math.sin(a+_*s),h.y=t*Math.cos(a+_*s),h.z=t*Math.sin(i+o*r)*Math.sin(a+_*s),p.push(h.x,h.y,h.z),u.copy(h).normalize(),f.push(u.x,u.y,u.z),m.push(o+v,1-_),g.push(l++)}c.push(g)}for(let t=0;t<n;t++)for(let i=0;i<e;i++){const e=c[t][i+1],r=c[t][i],s=c[t+1][i],l=c[t+1][i+1];(0!==t||a>0)&&d.push(e,r,l),(t!==n-1||o<Math.PI)&&d.push(r,s,l)}this.setIndex(d),this.setAttribute("position",new As(p,3)),this.setAttribute("normal",new As(f,3)),this.setAttribute("uv",new As(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new jh(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Xh extends xs{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new _s(16777215),this.specular=new _s(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _s(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Er(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Fa,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class qh extends es{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new _s(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(e.object.target=this.target.uuid),e}}const $h=new Ca,Yh=new Jr,Kh=new Jr;class Zh{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Er(512,512),this.map=null,this.mapPass=null,this.matrix=new Ca,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new So,this._frameExtents=new Er(1,1),this._viewportCount=1,this._viewports=[new Xr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Yh.setFromMatrixPosition(t.matrixWorld),e.position.copy(Yh),Kh.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Kh),e.updateMatrixWorld(),$h.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix($h),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply($h)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 1!==this.intensity&&(t.intensity=this.intensity),0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}const Jh=new Ca,Qh=new Jr,tu=new Jr;class eu extends Zh{constructor(){super(new uo(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Er(4,2),this._viewportCount=6,this._viewports=[new Xr(2,1,1,1),new Xr(0,1,1,1),new Xr(3,1,1,1),new Xr(1,1,1,1),new Xr(3,0,1,1),new Xr(1,0,1,1)],this._cubeDirections=[new Jr(1,0,0),new Jr(-1,0,0),new Jr(0,0,1),new Jr(0,0,-1),new Jr(0,1,0),new Jr(0,-1,0)],this._cubeUps=[new Jr(0,1,0),new Jr(0,1,0),new Jr(0,1,0),new Jr(0,1,0),new Jr(0,0,1),new Jr(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Qh.setFromMatrixPosition(t.matrixWorld),n.position.copy(Qh),tu.copy(n.position),tu.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(tu),n.updateMatrixWorld(),i.makeTranslation(-Qh.x,-Qh.y,-Qh.z),Jh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Jh)}}class nu extends qh{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new eu}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class iu extends qh{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}const ru=new Ca;class au{constructor(t,e,n=0,i=1/0){this.ray=new Aa(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Ba,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return ru.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(ru),this}intersectObject(t,e=!0,n=[]){return ou(t,this,n,e),n.sort(su),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)ou(t[i],this,n,e);return n.sort(su),n}}function su(t,e){return t.distance-e.distance}function ou(t,e,n,i){let r=!0;if(t.layers.test(e.layers)){!1===t.raycast(e,n)&&(r=!1)}if(!0===r&&!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)ou(i[t],e,n,!0)}}class lu{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(vr(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class cu extends pr{constructor(t,e){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:cn}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=cn);const hu={type:"change"},uu={type:"start"},du={type:"end"},pu=new Aa,fu=new xo,mu=Math.cos(70*Sr),gu=new Jr,_u=2*Math.PI,vu=-1,yu=0,xu=1,bu=2,Mu=3,Su=4,Eu=5,Tu=6,wu=1e-6;class Au extends cu{constructor(t,e=null){super(t,e),this.state=vu,this.enabled=!0,this.target=new Jr,this.cursor=new Jr,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:hn,MIDDLE:un,RIGHT:dn},this.touches={ONE:pn,TWO:mn},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new Jr,this._lastQuaternion=new Zr,this._lastTargetPosition=new Jr,this._quat=(new Zr).setFromUnitVectors(t.up,new Jr(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new lu,this._sphericalDelta=new lu,this._scale=1,this._panOffset=new Jr,this._rotateStart=new Er,this._rotateEnd=new Er,this._rotateDelta=new Er,this._panStart=new Er,this._panEnd=new Er,this._panDelta=new Er,this._dollyStart=new Er,this._dollyEnd=new Er,this._dollyDelta=new Er,this._dollyDirection=new Jr,this._mouse=new Er,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Ru.bind(this),this._onPointerDown=Cu.bind(this),this._onPointerUp=Pu.bind(this),this._onContextMenu=Ou.bind(this),this._onMouseWheel=Uu.bind(this),this._onKeyDown=Iu.bind(this),this._onTouchStart=Nu.bind(this),this._onTouchMove=ku.bind(this),this._onMouseDown=Lu.bind(this),this._onMouseMove=Du.bind(this),this._interceptControlDown=Fu.bind(this),this._interceptControlUp=Bu.bind(this),null!==this.domElement&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1});this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents();this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(hu),this.update(),this.state=vu}update(t=null){const e=this.object.position;gu.copy(e).sub(this.target),gu.applyQuaternion(this._quat),this._spherical.setFromVector3(gu),this.autoRotate&&this.state===vu&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=_u:n>Math.PI&&(n-=_u),i<-Math.PI?i+=_u:i>Math.PI&&(i-=_u),this._spherical.theta=n<=i?Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const t=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=t!=this._spherical.radius}if(gu.setFromSpherical(this._spherical),gu.applyQuaternion(this._quatInverse),e.copy(this.target).add(gu),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let t=null;if(this.object.isPerspectiveCamera){const e=gu.length();t=this._clampDistance(e*this._scale);const n=e-t;this.object.position.addScaledVector(this._dollyDirection,n),this.object.updateMatrixWorld(),r=!!n}else if(this.object.isOrthographicCamera){const e=new Jr(this._mouse.x,this._mouse.y,0);e.unproject(this.object);const n=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=n!==this.object.zoom;const i=new Jr(this._mouse.x,this._mouse.y,0);i.unproject(this.object),this.object.position.sub(i).add(e),this.object.updateMatrixWorld(),t=gu.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;null!==t&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(t).add(this.object.position):(pu.origin.copy(this.object.position),pu.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(pu.direction))<mu?this.object.lookAt(this.target):(fu.setFromNormalAndCoplanarPoint(this.object.up,this.target),pu.intersectPlane(fu,this.target))))}else if(this.object.isOrthographicCamera){const t=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),t!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,!!(r||this._lastPosition.distanceToSquared(this.object.position)>wu||8*(1-this._lastQuaternion.dot(this.object.quaternion))>wu||this._lastTargetPosition.distanceToSquared(this.target)>wu)&&(this.dispatchEvent(hu),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(t){return null!==t?_u/60*this.autoRotateSpeed*t:_u/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(.01*t);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){gu.setFromMatrixColumn(e,0),gu.multiplyScalar(-t),this._panOffset.add(gu)}_panUp(t,e){!0===this.screenSpacePanning?gu.setFromMatrixColumn(e,1):(gu.setFromMatrixColumn(e,0),gu.crossVectors(this.object.up,gu)),gu.multiplyScalar(t),this._panOffset.add(gu)}_pan(t,e){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;gu.copy(i).sub(this.target);let r=gu.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*r/n.clientHeight,this.object.matrix),this._panUp(2*e*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=t-n.left,r=e-n.top,a=n.width,s=n.height;this._mouse.x=i/a*2-1,this._mouse.y=-r/s*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(_u*this._rotateDelta.x/e.clientHeight),this._rotateUp(_u*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateUp(_u*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateUp(-_u*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateLeft(_u*this.rotateSpeed/this.domElement.clientHeight):this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this._rotateLeft(-_u*this.rotateSpeed/this.domElement.clientHeight):this._pan(-this.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(1===this._pointers.length)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(t){if(1===this._pointers.length)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(n,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,r=Math.sqrt(n*n+i*i);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(1==this._pointers.length)this._rotateEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateEnd.set(n,i)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(_u*this._rotateDelta.x/e.clientHeight),this._rotateUp(_u*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(1===this._pointers.length)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,r=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const a=.5*(t.pageX+e.x),s=.5*(t.pageY+e.y);this._updateZoomParameters(a,s)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return void this._pointers.splice(e,1)}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];void 0===e&&(e=new Er,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,n={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100}return t.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function Cu(t){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(t)||(this._addPointer(t),"touch"===t.pointerType?this._onTouchStart(t):this._onMouseDown(t)))}function Ru(t){!1!==this.enabled&&("touch"===t.pointerType?this._onTouchMove(t):this._onMouseMove(t))}function Pu(t){switch(this._removePointer(t),this._pointers.length){case 0:this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(du),this.state=vu;break;case 1:const e=this._pointers[0],n=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:n.x,pageY:n.y})}}function Lu(t){let e;switch(t.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case un:if(!1===this.enableZoom)return;this._handleMouseDownDolly(t),this.state=xu;break;case hn:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=bu}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=yu}break;case dn:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(t),this.state=yu}else{if(!1===this.enablePan)return;this._handleMouseDownPan(t),this.state=bu}break;default:this.state=vu}this.state!==vu&&this.dispatchEvent(uu)}function Du(t){switch(this.state){case yu:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(t);break;case xu:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(t);break;case bu:if(!1===this.enablePan)return;this._handleMouseMovePan(t)}}function Uu(t){!1!==this.enabled&&!1!==this.enableZoom&&this.state===vu&&(t.preventDefault(),this.dispatchEvent(uu),this._handleMouseWheel(this._customWheelEvent(t)),this.dispatchEvent(du))}function Iu(t){!1!==this.enabled&&!1!==this.enablePan&&this._handleKeyDown(t)}function Nu(t){switch(this._trackPointer(t),this._pointers.length){case 1:switch(this.touches.ONE){case pn:if(!1===this.enableRotate)return;this._handleTouchStartRotate(t),this.state=Mu;break;case fn:if(!1===this.enablePan)return;this._handleTouchStartPan(t),this.state=Su;break;default:this.state=vu}break;case 2:switch(this.touches.TWO){case mn:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(t),this.state=Eu;break;case gn:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(t),this.state=Tu;break;default:this.state=vu}break;default:this.state=vu}this.state!==vu&&this.dispatchEvent(uu)}function ku(t){switch(this._trackPointer(t),this.state){case Mu:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(t),this.update();break;case Su:if(!1===this.enablePan)return;this._handleTouchMovePan(t),this.update();break;case Eu:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(t),this.update();break;case Tu:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(t),this.update();break;default:this.state=vu}}function Ou(t){!1!==this.enabled&&t.preventDefault()}function Fu(t){if("Control"===t.key){this._controlActive=!0;this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}function Bu(t){if("Control"===t.key){this._controlActive=!1;this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}function zu(t){let e,n;return{c(){e=f("div"),n=m(t[2]),y(e,"class","status-message error svelte-1f8v9si")},m(t,i){u(t,e,i),h(e,n)},p(t,e){4&e[0]&&b(n,t[2])},d(t){t&&d(e)}}}function Hu(e){let n;return{c(){n=f("div"),n.textContent="Loading map...",y(n,"class","status-message svelte-1f8v9si")},m(t,e){u(t,n,e)},p:t,d(t){t&&d(n)}}}function Vu(t){let e,n,i=JSON.stringify(t[0].pinpoints,null,2)+"";return{c(){e=f("pre"),n=m(i),S(e,"display","none")},m(t,i){u(t,e,i),h(e,n)},p(t,e){1&e[0]&&i!==(i=JSON.stringify(t[0].pinpoints,null,2)+"")&&b(n,i)},d(t){t&&d(e)}}}function Gu(e){let n;return{c(){n=f("p"),n.textContent="Wreck triangulation not possible",y(n,"class","svelte-1f8v9si")},m(t,e){u(t,n,e)},p:t,d(t){t&&d(n)}}}function Wu(t){let e,n,i,r,a,s,o=t[0].pinpoints.nearestCelestial.name+"",l=(t[0].pinpoints.nearestCelestial.distance/1e3).toFixed(2)+"";return{c(){e=f("p"),n=m("Nearest celestial: "),i=m(o),r=m(" ("),a=m(l),s=m(" km)"),y(e,"class","svelte-1f8v9si")},m(t,o){u(t,e,o),h(e,n),h(e,i),h(e,r),h(e,a),h(e,s)},p(t,e){1&e[0]&&o!==(o=t[0].pinpoints.nearestCelestial.name+"")&&b(i,o),1&e[0]&&l!==(l=(t[0].pinpoints.nearestCelestial.distance/1e3).toFixed(2)+"")&&b(a,l)},d(t){t&&d(e)}}}function ju(t){let e,n,i,r,a,s,o,l,c,p,_,v,x,M,S,E,T,w,A,C,R,P,L,D,U,I,N,k=t[0].pinpoints.points[0].name+"",O=(t[0].pinpoints.points[0].distance/1e3).toFixed(2)+"",F=t[0].pinpoints.points[1].name+"",B=(t[0].pinpoints.points[1].distance/1e3).toFixed(2)+"",z=t[0].pinpoints.points[2].name+"",H=(t[0].pinpoints.points[2].distance/1e3).toFixed(2)+"",V=t[0].pinpoints.points[3].name+"",G=(t[0].pinpoints.points[3].distance/1e3).toFixed(2)+"";return{c(){e=f("p"),n=m("Pinpoint 1: "),i=m(k),r=m(" ("),a=m(O),s=m(" km)"),o=g(),l=f("p"),c=m("Pinpoint 2: "),p=m(F),_=m(" ("),v=m(B),x=m(" km)"),M=g(),S=f("p"),E=m("Pinpoint 3: "),T=m(z),w=m(" ("),A=m(H),C=m(" km)"),R=g(),P=f("p"),L=m("Pinpoint 4: "),D=m(V),U=m(" ("),I=m(G),N=m(" km)"),y(e,"class","svelte-1f8v9si"),y(l,"class","svelte-1f8v9si"),y(S,"class","svelte-1f8v9si"),y(P,"class","svelte-1f8v9si")},m(t,d){u(t,e,d),h(e,n),h(e,i),h(e,r),h(e,a),h(e,s),u(t,o,d),u(t,l,d),h(l,c),h(l,p),h(l,_),h(l,v),h(l,x),u(t,M,d),u(t,S,d),h(S,E),h(S,T),h(S,w),h(S,A),h(S,C),u(t,R,d),u(t,P,d),h(P,L),h(P,D),h(P,U),h(P,I),h(P,N)},p(t,e){1&e[0]&&k!==(k=t[0].pinpoints.points[0].name+"")&&b(i,k),1&e[0]&&O!==(O=(t[0].pinpoints.points[0].distance/1e3).toFixed(2)+"")&&b(a,O),1&e[0]&&F!==(F=t[0].pinpoints.points[1].name+"")&&b(p,F),1&e[0]&&B!==(B=(t[0].pinpoints.points[1].distance/1e3).toFixed(2)+"")&&b(v,B),1&e[0]&&z!==(z=t[0].pinpoints.points[2].name+"")&&b(T,z),1&e[0]&&H!==(H=(t[0].pinpoints.points[2].distance/1e3).toFixed(2)+"")&&b(A,H),1&e[0]&&V!==(V=t[0].pinpoints.points[3].name+"")&&b(D,V),1&e[0]&&G!==(G=(t[0].pinpoints.points[3].distance/1e3).toFixed(2)+"")&&b(I,G)},d(t){t&&(d(e),d(o),d(l),d(M),d(S),d(R),d(P))}}}function Xu(t){let e,n,i,r,a,s,o=t[0].pinpoints.nearestCelestial.name+"",l=(t[0].pinpoints.nearestCelestial.distance/1e3).toFixed(2)+"";return{c(){e=f("p"),n=m("Near celestial: "),i=m(o),r=m(" ("),a=m(l),s=m(" km)"),y(e,"class","svelte-1f8v9si")},m(t,o){u(t,e,o),h(e,n),h(e,i),h(e,r),h(e,a),h(e,s)},p(t,e){1&e[0]&&o!==(o=t[0].pinpoints.nearestCelestial.name+"")&&b(i,o),1&e[0]&&l!==(l=(t[0].pinpoints.nearestCelestial.distance/1e3).toFixed(2)+"")&&b(a,l)},d(t){t&&d(e)}}}function qu(t){let e,n,i,r=t[0].pinpoints.nearestCelestial.name+"";return{c(){e=f("p"),n=m("At celestial: "),i=m(r),y(e,"class","svelte-1f8v9si")},m(t,r){u(t,e,r),h(e,n),h(e,i)},p(t,e){1&e[0]&&r!==(r=t[0].pinpoints.nearestCelestial.name+"")&&b(i,r)},d(t){t&&d(e)}}}function $u(e){let n,r,a,s,o,l,c,p,_,x,M,S,E,T,w,A,C,R,P,L;function D(t,e){return t[3]?Hu:t[2]?zu:void 0}let U=D(e),I=U&&U(e),N=e[0].pinpoints&&Vu(e);function k(t,e){return t[0].pinpoints?.atCelestial?qu:t[0].pinpoints?.nearestCelestial&&t[0].pinpoints?.triangulationPossible?Xu:t[0].pinpoints?.hasTetrahedron&&t[0].pinpoints.points.length>=4?ju:t[0].pinpoints?.triangulationPossible&&t[0].pinpoints?.nearestCelestial?Wu:Gu}let O=k(e),F=O(e);return{c(){n=f("div"),r=f("div"),a=f("button"),a.textContent="Focus Sun",s=g(),o=f("button"),o.textContent="Kill Location",l=g(),c=f("div"),I&&I.c(),p=g(),_=f("div"),N&&N.c(),x=g(),M=f("p"),S=m("System name: "),E=m(e[4]),T=g(),w=f("p"),A=m("Closest Celestial: "),C=m(e[5]),R=g(),F.c(),y(a,"class","focus-sun svelte-1f8v9si"),y(o,"class","focus-kill svelte-1f8v9si"),y(r,"class","controls svelte-1f8v9si"),y(c,"class","map-container svelte-1f8v9si"),y(M,"class","svelte-1f8v9si"),y(w,"class","svelte-1f8v9si"),y(_,"class","info-panel svelte-1f8v9si"),y(n,"class","visualization-container svelte-1f8v9si")},m(t,i){u(t,n,i),h(n,r),h(r,a),h(r,s),h(r,o),h(n,l),h(n,c),I&&I.m(c,null),e[11](c),h(n,p),h(n,_),N&&N.m(_,null),h(_,x),h(_,M),h(M,S),h(M,E),h(_,T),h(_,w),h(w,A),h(w,C),h(_,R),F.m(_,null),P||(L=[v(a,"click",e[8]),v(o,"click",e[10])],P=!0)},p(t,e){U===(U=D(t))&&I?I.p(t,e):(I&&I.d(1),I=U&&U(t),I&&(I.c(),I.m(c,null))),t[0].pinpoints?N?N.p(t,e):(N=Vu(t),N.c(),N.m(_,x)):N&&(N.d(1),N=null),16&e[0]&&b(E,t[4]),32&e[0]&&b(C,t[5]),O===(O=k(t))&&F?F.p(t,e):(F.d(1),F=O(t),F&&(F.c(),F.m(_,null)))},i:t,o:t,d(t){t&&d(n),I&&I.d(),e[11](null),N&&N.d(),F.d(),P=!1,i(L)}}}const Yu=1e-9,Ku=149597870.7;function Zu(t){const e=t/1e3;return e>=74798935.35?`${(e/Ku).toFixed(2)} AU`:`${e.toFixed(2)} km`}function Ju(t,e,n){let i,r,a,s,o,l,c,h,u,{killmailId:d}=e,{kill:p}=e,f=null,m=null,g=!0,_="",v="Calculating...",y=new Jr,x=null;const b=new Map,M={KILL:{radius:1e-5},SUN:{radius:.03},PLANET:{radius:.003},MOON:{radius:9e-5},ASTEROID:{radius:5e-5,particleCount:5,spread:1e-4},STARGATE:{radius:.006,length:.003,sphereRadius:.005},STATION:{size:.02}};function S(t,e,n){const r=document.createElement("canvas");r.width=32,r.height=32;const s=r.getContext("2d");let o;switch(s.beginPath(),s.arc(16,16,12,0,2*Math.PI),e){case"sun":o="#ffff00";break;case"planet":o="#00ff00";break;case"moon":o="#808080";break;case"stargate":o="#00ffff";break;case"station":o="#ff00ff";break;case"asteroid":o="#a0a0a0";break;default:o="#ffffff"}s.fillStyle=o,s.fill(),s.strokeStyle="#ffffff",s.lineWidth=1,s.stroke();const l=new Wh(r),c=new vh({map:l,sizeAttenuation:!0}),h=new Dh(c);h.position.copy(t),b.set(h,{name:n,type:e,position:h.position.clone()}),E(h);const u=document.createElement("div");u.className="celestial-label",u.style.display="none",u.textContent=n,i.appendChild(u);return h.userData.updateLabel=()=>{if(h.visible){const t=h.position.clone();t.project(a);const e=(.5*t.x+.5)*i.clientWidth,n=(.5*-t.y+.5)*i.clientHeight;u.style.transform=`translate(${e}px, ${n}px)`;const r=t.z<1;u.style.display=r?"block":"none"}},h.userData.label=u,h}function E(t){const e=t.position.distanceTo(a.position),n=b.get(t);let i=1;switch(n?.type){case"sun":case"planet":case"stargate":case"station":case"asteroid":i=10;break;default:i=5}const r=.1*i*e*.01;t.scale.set(r,r,1)}function T(t){const e=i.getBoundingClientRect();c.x=(t.clientX-e.left)/i.clientWidth*2-1,c.y=-(t.clientY-e.top)/i.clientHeight*2+1,l.setFromCamera(c,a);const n=l.intersectObjects(r.children);if(n.length>0){const e=n[0].object;b.has(e)&&(h.textContent=b.get(e).name,h.style.display="block",h.style.left=`${t.clientX}px`,h.style.top=t.clientY-20+"px")}else h.style.display="none"}function w(){if(requestAnimationFrame(w),!y.equals(a.position)){u.position.copy(a.position),y.copy(a.position);const t=Array.from(b.entries()).find((([t,e])=>"killmail"===e.type));if(t&&f){const e=a.position.distanceTo(t[0].position),n=.01;f.traverse((t=>{t instanceof Vh&&(t.visible=e>n)}))}r.traverse((t=>{t.isSprite&&E(t)}))}O(),o.update(),s.render(r,a)}function A(t){if(!a||!o||!t)return;const e=t.position.clone(),n=b.get(t);let i;if("killmail"===n.type)i=2e-5;else{i=5*("sun"===n.type?M.SUN.radius:"planet"===n.type?M.PLANET.radius:"moon"===n.type?M.MOON.radius:"station"===n.type?M.STATION.size:"stargate"===n.type?M.STARGATE.radius:M.PLANET.radius)}const r=new Jr(i,i,i),s=e.clone().add(r),l=a.position.clone(),c=Date.now();!function t(){const n=Date.now()-c,i=Math.min(n/1e3,1),r=i<.5?2*i*i:(4-2*i)*i-1;a.position.lerpVectors(l,s,r),o.target.lerp(e,r),i<1&&requestAnimationFrame(t)}()}function C(t=null){const e=document.querySelector(".info-panel");if(!e)return;p.killmail.victim.position;let n="";n=p.pinpoints?.atCelestial?"<p>Triangulation possible - At celestial</p>":p.pinpoints?.nearestCelestial&&p.pinpoints?.triangulationPossible?`<p>Triangulation possible - Near celestial: ${p.pinpoints.nearestCelestial.name} (${Zu(p.pinpoints.nearestCelestial.distance)})</p>`:p.pinpoints?.hasTetrahedron&&p.pinpoints.points.length>=4?p.pinpoints.points.map(((t,e)=>`<p>Pinpoint ${e+1}: ${t.name} (${Zu(t.distance)})</p>`)).join(""):"<p>Wreck triangulation not possible</p>",e.innerHTML=`\n    <p>System name: ${_||"Unknown"}</p>\n    <p>Closest Celestial: ${v||"Unknown"}</p>\n    ${n}\n    ${t?`<p>Selected: ${t.name} (${t.type})</p>`:""}\n  `}let R,D=50;function U(t){if(!a||!o)return;const e=D,n=performance.now();requestAnimationFrame((function i(r){const s=r-n,l=Math.min(s/300,1),c=1-Math.pow(1-l,3);D=e+(t-e)*c;const h=1e-6,u=Math.pow(10,Math.log10(h)+D/100*(Math.log10(1e6)-Math.log10(h))),d=o.target.clone(),p=a.position.clone().sub(d).normalize(),f=d.clone().add(p.multiplyScalar(u));a.position.copy(f),o.update(),l<1&&requestAnimationFrame(i)}))}function N(t,e){if(!t)return console.error("celestialData is undefined or null."),null;const n=new rh,i=t.typename||"",r=new Jr(t.x*Yu,t.y*Yu,t.z*Yu);if("killmail"===t.id){const t=new jh(M.KILL.radius),e=new Xh({color:16711680,transparent:!0,opacity:.6,depthWrite:!0}),i=new Qs(t,e);i.position.copy(r),n.add(i),b.set(i,{name:"Kill Location",type:"killmail",position:i.position.clone()})}else if(i.includes("Sun")){const e=new es,i=8*M.SUN.radius,a=[],s=32,o=Math.PI*(3-Math.sqrt(5));for(let t=0;t<s;t++){const e=1-t/(s-1)*2,n=Math.sqrt(1-e*e),i=o*t;a.push({x:Math.cos(i)*n,y:e,z:Math.sin(i)*n})}a.forEach(((t,n)=>{const r=new wo(i,i),a=new so({uniforms:{time:{value:0},seed:{value:n}},vertexShader:"\n       varying vec2 vUv;\n       void main() {\n         vUv = uv;\n         gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n       }\n     ",fragmentShader:"\n       uniform float time;\n       uniform float seed;\n       varying vec2 vUv;\n       \n       float noise(vec2 p) {\n         return fract(sin(dot(p, vec2(12.9898 + seed, 78.233))) * 43758.5453);\n       }\n       \n       void main() {\n         vec2 uvc = vUv - 0.5;\n         float dist = length(uvc);\n         float n = noise(uvc + time * 0.1);\n         float alpha = smoothstep(0.5, 0.0, dist);\n         alpha *= 0.5 * (1.0 + 0.2 * sin(time * 0.2 + dist * 3.0 + n * 2.0));\n         vec3 color = mix(vec3(1.0, 1.0, 0.8), vec3(1.0, 0.6, 0.1), dist * 1.5 + n * 0.2);\n         gl_FragColor = vec4(color, alpha);\n       }\n     ",transparent:!0,depthWrite:!1,blending:2,side:2}),s=new Qs(r,a);s.lookAt(new Jr(t.x,t.y,t.z)),e.add(s)})),e.position.copy(r);const l=new nu(16777062,3,20*M.SUN.radius);l.position.copy(r);const c=()=>{l.intensity=2.8+.3*Math.sin(2e-4*Date.now()),e.children.forEach((t=>{t.material.uniforms.time.value+=.016})),e.rotation.y+=5e-4,e.rotation.x+=3e-4},h=w;w=()=>{h(),c()},n.add(e),n.add(l);const u=S(r,"sun",t.itemname);n.add(u),b.set(u,{name:t.itemname,type:"sun",position:u.position.clone()})}else if(i.includes("Planet")){const e=new jh(M.PLANET.radius),i=new Xh({color:65280,shininess:30}),a=new Qs(e,i);a.position.copy(r),n.add(a);const s=S(r,"planet",t.itemname);n.add(s);const o=r.length(),l=256,c=[];for(let t=0;t<=l;t++){const e=t/l*Math.PI*2;c.push(new Jr(Math.cos(e)*o,0,Math.sin(e)*o))}const h=(new Ns).setFromPoints(c),u=new Ih({color:6710886,transparent:!0,opacity:.7,linewidth:2}),d=new Vh(h,u),p=r.clone().normalize(),f=new Ca;f.lookAt(new Jr,p,new Jr(0,1,0)),d.setRotationFromMatrix(f),n.add(d),b.set(s,{name:t.itemname,type:"planet",position:s.position.clone()})}else if(i.includes("Moon")){const i=new jh(M.MOON.radius),a=new Xh({color:8421504}),s=new Qs(i,a);s.position.copy(r),n.add(s);const o=S(r,"moon",t.itemname);n.add(o);const l=function(t,e){const n=t.itemname.match(/ ([IVX]+)( -|$)/)?.[1];return n?e.find((t=>t.typename?.includes("Planet")&&t.itemname.match(/ ([IVX]+)( -|$)/)?.[1]===n)):null}(t,e);if(l){!function(t,e,n){const i=t.clone().sub(e),r=i.length(),a=[];for(let t=0;t<=128;t++){const e=t/128*Math.PI*2;a.push(new Jr(Math.cos(e)*r,0,Math.sin(e)*r))}const s=(new Ns).setFromPoints(a),o=new Ih({color:4473924,transparent:!0,opacity:.5,linewidth:1}),l=new Vh(s,o),c=i.clone().normalize(),h=new Ca;h.lookAt(new Jr,c,new Jr(0,1,0)),l.setRotationFromMatrix(h),l.position.copy(e),n.add(l)}(r,new Jr(l.x*Yu,l.y*Yu,l.z*Yu),n)}b.set(o,{name:t.itemname,type:"moon",position:o.position.clone()})}else if(i.includes("Asteroid Belt")){const e=new jh(M.ASTEROID.radius),i=new Xh({color:8421504,visible:!1}),a=new Qs(e,i);a.position.copy(r),n.add(a);const s=S(r,"asteroid",t.itemname);n.add(s),b.set(a,{name:t.itemname,type:"asteroid",position:a.position.clone()})}else if(i.includes("Stargate")){const e=new jh(M.STARGATE.radius),i=new Xh({color:65535,visible:!1}),a=new Qs(e,i);a.position.copy(r),n.add(a);const s=S(r,"stargate",t.itemname);n.add(s),b.set(a,{name:t.itemname,type:"stargate",position:a.position.clone()})}else if(i.includes("Station")){const e=new jh(M.STATION.radius),i=new Xh({color:16711935,visible:!1}),a=new Qs(e,i);a.position.copy(r),n.add(a);const s=S(r,"station",t.itemname);n.add(s),b.set(a,{name:t.itemname,type:"station",position:a.position.clone()})}return n}async function k(t){if(!p?.killmail?.victim?.position)return console.error("Missing kill position data:",p),n(2,m="Invalid kill data"),void n(3,g=!1);x=t,r=new fh,r.background=new _s(0),a=new uo(75,i.clientWidth/i.clientHeight,1e-6,1e9),s=new ph({antialias:!0,logarithmicDepthBuffer:!0}),s.setSize(i.clientWidth,i.clientHeight),i.appendChild(s.domElement),u=new es,r.add(u);const e=new Jr(p.killmail.victim.position.x*Yu,p.killmail.victim.position.y*Yu,p.killmail.victim.position.z*Yu),d=function(t){const e=document.createElement("canvas");e.width=32,e.height=32;const n=e.getContext("2d");n.beginPath(),n.arc(16,16,12,0,2*Math.PI),n.fillStyle="#ff0000",n.fill(),n.strokeStyle="#ffffff",n.lineWidth=2,n.stroke();const i=new Wh(e),r=new vh({map:i,sizeAttenuation:!0}),a=new Dh(r);return a.position.copy(t),a.scale.set(20,20,1),a}(e);if(r.add(d),b.set(d,{name:"Kill Location",type:"killmail",position:d.position.clone()}),t.forEach((t=>{if("killmail"!==t.id){const e=N(t,x);e&&r.add(e)}})),p.pinpoints?.hasTetrahedron){console.log("Adding pinpoint box for:",p.pinpoints);const t=function(t){if(!t||!t.hasTetrahedron)return null;console.log("Creating pinpoint lines with data:",t);const e=t.points.map((t=>{const e=parseFloat(t.position.x)*Yu,n=parseFloat(t.position.y)*Yu,i=parseFloat(t.position.z)*Yu;return new Jr(e,n,i)})),n=new rh;function i(t,e){const n=new Ns,i=new Float32Array([t.x,t.y,t.z,e.x,e.y,e.z]);n.setAttribute("position",new Es(i,3));const r=new Ih({color:65280,transparent:!0,opacity:.5,linewidth:2,depthWrite:!1});return new Vh(n,r)}for(let t=0;t<e.length;t++)for(let r=t+1;r<e.length;r++)n.add(i(e[t],e[r]));return f=n,n}(p.pinpoints);t&&(r.add(t),console.log("Added pinpoint box to scene"))}a.position.set(e.x+50,e.y+50,e.z+50),a.lookAt(e),o=new Au(a,s.domElement),o.enableDamping=!0,o.dampingFactor=.05,function(){l=new au,c=new Er;const t=document.querySelector(".tooltip");t&&t.remove(),h=document.createElement("div"),h.className="tooltip",h.style.display="none",i.appendChild(h)}(),function(){const t=document.createElement("div");Object.assign(t.style,{position:"absolute",bottom:"120px",right:"5px",background:"rgba(0, 0, 0, 0.7)",padding:"10px",borderRadius:"5px",display:"flex",flexDirection:"column",gap:"10px",zIndex:"1000"});const e=document.createElement("button"),n=document.createElement("button");e.textContent="+",n.textContent="-",e.onclick=()=>U(Math.max(0,D-10)),n.onclick=()=>U(Math.min(100,D+10)),[e,n].forEach((t=>{Object.assign(t.style,{width:"30px",height:"30px",background:"rgba(255, 255, 255, 0.2)",border:"none",color:"white",fontSize:"20px",cursor:"pointer",borderRadius:"4px"})})),t.append(e,n),document.querySelector(".map-container").appendChild(t),R=t}();const y=new iu(16777215,.5);r.add(y),n(4,_=t[1]?.solarsystemname||"Unknown System"),n(5,(p.killmail.victim.position,v=p.pinpoints.nearestCelestial?`${p.pinpoints.nearestCelestial.name} (${Zu(p.pinpoints.nearestCelestial.distance)})`:"Unknown")),p.pinpoints?.hasTetrahedron&&p.pinpoints.points.map((t=>`${t.name} (${(t.distance*Yu).toFixed(2)} km)`)),C(),w(),n(3,g=!1)}const O=()=>{r.traverse((t=>{t.material?.emissive&&(t.material.emissiveIntensity=.5+.2*Math.sin(.001*Date.now()))}))};function F(){a&&s&&i&&(a.aspect=i.clientWidth/i.clientHeight,a.updateProjectionMatrix(),s.setSize(i.clientWidth,i.clientHeight,!0),r.traverse((t=>{t.isSprite&&E(t)})))}function B(t){if(!r||!a)return;const e=i.getBoundingClientRect();c.x=(t.clientX-e.left)/i.clientWidth*2-1,c.y=-(t.clientY-e.top)/i.clientHeight*2+1,l.setFromCamera(c,a);const n=l.intersectObjects(Array.from(b.keys()).filter((t=>t.isSprite)));if(n.length>0){const t=n[0].object;if(b.has(t)){const e=b.get(t);console.log("Selected object:",e),A(t),C(e)}}}P((async()=>{try{const t=await async function(t,e=3){for(let n=0;n<e;n++)try{const i=await fetch(`/api/celestials/${t}`);if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);const r=await i.json();if((!r||!r.length)&&(console.warn(`Empty celestial data received for killmail ${t}`),n<e-1)){await new Promise((t=>setTimeout(t,1e3*(n+1))));continue}return console.log("Received celestial data:",r),r}catch(t){if(console.error(`Error fetching celestials (attempt ${n+1}):`,t),n===e-1)throw t;await new Promise((t=>setTimeout(t,1e3*(n+1))))}return null}(d);t?(await k(t),i.addEventListener("mousemove",T),i.addEventListener("click",B),window.addEventListener("resize",F)):(n(2,m="Failed to fetch celestial data"),n(3,g=!1))}catch(t){n(2,m="Error initializing map visualization"),console.error(t),n(3,g=!1)}})),L((()=>{window.removeEventListener("resize",F),i?.removeEventListener("mousemove",T),i?.removeEventListener("click",B),s&&s.dispose(),r&&r.traverse((t=>{t.geometry&&t.geometry.dispose(),t.material&&(Array.isArray(t.material)?t.material.forEach((t=>t.dispose())):t.material.dispose()),t.userData?.label&&t.userData.label.remove()}));document.querySelectorAll(".celestial-label").forEach((t=>t.remove())),R?.remove(),b.clear(),h?.remove()}));return t.$$set=t=>{"killmailId"in t&&n(9,d=t.killmailId),"kill"in t&&n(0,p=t.kill)},t.$$.update=()=>{if(1&t.$$.dirty[0]&&p&&"object"!=typeof p)throw new Error("kill prop must be an object");1&t.$$.dirty[0]&&p&&console.log("Kill data in MapVisualization:",p)},[p,i,m,g,_,v,b,A,function(){const t=Array.from(b.entries()).find((([t,e])=>"sun"===e.type));t&&A(t[0])},d,()=>{const t=Array.from(b.entries()).find((([t,e])=>"killmail"===e.type));t&&A(t[0])},function(t){I[t?"unshift":"push"]((()=>{i=t,n(1,i)}))}]}class Qu extends rt{constructor(t){super(),it(this,t,Ju,$u,a,{killmailId:9,kill:0},null,[-1,-1])}}function td(t,e,n){const i=t.slice();return i[17]=e[n],i}function ed(t,e){let n,i,r,a,s,o,l,c,p,_,x,M,S,E,T,A,C,R,P,L,D,U=ad(e[17].zkb.droppedValue)+"",I=sd(e[17].killmail.killmail_time)+"",N=e[17]?.pinpoints?.triangulationPossible?"✅":"❌";function k(){return e[13](e[17])}return{key:t,first:null,c(){n=f("tr"),i=f("td"),r=m(U),a=g(),s=f("td"),o=m(I),l=g(),c=f("td"),p=f("a"),_=m("View"),M=g(),S=f("td"),E=f("button"),E.textContent="Map",T=g(),A=f("span"),C=m(N),P=g(),y(i,"class","svelte-1meihga"),y(s,"class","svelte-1meihga"),y(p,"href",x=`https://zkillboard.com/kill/${e[17].killID}/`),y(p,"target","_blank"),y(c,"class","svelte-1meihga"),y(E,"class","svelte-1meihga"),y(A,"class","triangulate-indicator svelte-1meihga"),y(A,"title",R=rd(e[17])),w(A,"can-triangulate",e[17]?.pinpoints?.triangulationPossible),y(S,"class","actions svelte-1meihga"),y(n,"class","svelte-1meihga"),this.first=n},m(t,e){u(t,n,e),h(n,i),h(i,r),h(n,a),h(n,s),h(s,o),h(n,l),h(n,c),h(c,p),h(p,_),h(n,M),h(n,S),h(S,E),h(S,T),h(S,A),h(A,C),h(n,P),L||(D=v(E,"click",k),L=!0)},p(t,n){e=t,1&n&&U!==(U=ad(e[17].zkb.droppedValue)+"")&&b(r,U),1&n&&I!==(I=sd(e[17].killmail.killmail_time)+"")&&b(o,I),1&n&&x!==(x=`https://zkillboard.com/kill/${e[17].killID}/`)&&y(p,"href",x),1&n&&N!==(N=e[17]?.pinpoints?.triangulationPossible?"✅":"❌")&&b(C,N),1&n&&R!==(R=rd(e[17]))&&y(A,"title",R),1&n&&w(A,"can-triangulate",e[17]?.pinpoints?.triangulationPossible)},d(t){t&&d(n),L=!1,D()}}}function nd(t){let e,n,i,r,a,s,o,l;return i=new Qu({props:{killmailId:t[1],kill:t[2]}}),{c(){e=f("div"),n=f("div"),Q(i.$$.fragment),r=g(),a=f("button"),a.textContent="Close Map",y(a,"class","close-map svelte-1meihga"),y(n,"class","map-container svelte-1meihga"),y(e,"class","map-overlay svelte-1meihga")},m(c,d){u(c,e,d),h(e,n),tt(i,n,null),h(n,r),h(n,a),s=!0,o||(l=v(a,"click",t[14]),o=!0)},p(t,e){const n={};2&e&&(n.killmailId=t[1]),4&e&&(n.kill=t[2]),i.$set(n)},i(t){s||($(i.$$.fragment,t),s=!0)},o(t){Y(i.$$.fragment,t),s=!1},d(t){t&&d(e),et(i),o=!1,l()}}}function id(t){let e,n,i,r,a,s,o,l,c,p=[],m=new Map,_=K(t[0]);const x=t=>t[17].killID;for(let e=0;e<_.length;e+=1){let n=td(t,_,e),i=x(n);m.set(i,p[e]=ed(i,n))}let b=t[4]&&t[1]&&nd(t);return{c(){e=f("table"),e.innerHTML='<thead class="svelte-1meihga"><tr class="svelte-1meihga"><th class="svelte-1meihga">Dropped Value</th> <th class="svelte-1meihga">Occurred</th> <th class="svelte-1meihga">URL</th> <th class="svelte-1meihga">Actions</th></tr></thead>',n=g(),i=f("div"),r=f("table"),a=f("tbody");for(let t=0;t<p.length;t+=1)p[t].c();s=g(),b&&b.c(),y(e,"class","svelte-1meihga"),y(r,"class","svelte-1meihga"),y(i,"class","scroll-box")},m(d,f){u(d,e,f),u(d,n,f),u(d,i,f),h(i,r),h(r,a);for(let t=0;t<p.length;t+=1)p[t]&&p[t].m(a,null);h(i,s),b&&b.m(i,null),t[15](i),o=!0,l||(c=v(i,"scroll",t[6]),l=!0)},p(t,[e]){33&e&&(_=K(t[0]),p=J(p,e,x,1,t,_,m,a,Z,ed,null,td)),t[4]&&t[1]?b?(b.p(t,e),18&e&&$(b,1)):(b=nd(t),b.c(),$(b,1),b.m(i,null)):b&&(X(),Y(b,1,1,(()=>{b=null})),q())},i(t){o||($(b),o=!0)},o(t){Y(b),o=!1},d(r){r&&(d(e),d(n),d(i));for(let t=0;t<p.length;t+=1)p[t].d();b&&b.d(),t[15](null),l=!1,c()}}}function rd(t){return t?.pinpoints?t.pinpoints.atCelestial?"At celestial":t.pinpoints.triangulationPossible&&t.pinpoints.nearestCelestial?`Near celestial: ${t.pinpoints.nearestCelestial.name}`:t.pinpoints.hasTetrahedron?"Triangulation possible":"Cannot be triangulated":"No triangulation data"}function ad(t){if(0===t||isNaN(t)||null==t)return"0 ISK";const e=Math.floor(Math.log10(t)/3);return(t/Math.pow(1e3,e)).toFixed(2)+" "+["ISK","K","M","B","T"][e]}function sd(t){const e=new Date-new Date(t),n=Math.floor(e/1e3);return n<60?`${n} seconds ago`:n<3600?`${Math.floor(n/60)} minutes ago`:n<86400?`${Math.floor(n/3600)} hours ago`:`${Math.floor(n/86400)} days ago`}function od(t,e,n){let i,r,a,s;l(t,Fe,(t=>n(11,a=t))),l(t,Be,(t=>n(12,s=t)));let o,c=new Set,h=null,u=null,d=!1,p=!0,f=!1;function m(t){n(1,h=t.killID),n(2,u=t),n(4,f=!0)}function g(){o&&p&&n(3,o.scrollTop=o.scrollHeight,o)}P((()=>{g()}));return t.$$.update=()=>{if(4096&t.$$.dirty&&n(10,i=s),1024&t.$$.dirty&&n(0,r=Array.isArray(i)?[...i].sort(((t,e)=>new Date(e.killmail.killmail_time)-new Date(t.killmail.killmail_time))):[]),6272&t.$$.dirty&&s&&a.webhook_enabled&&a.webhook_url){const t=new Set(s.map((t=>t.killID)));s.forEach((t=>{if(!c.has(t.killID)){const e=a.webhook_url,n=`https://zkillboard.com/kill/${t.killID}/`;fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:n})}).catch((t=>console.error("Error sending webhook:",t)))}})),n(7,c=t)}769&t.$$.dirty&&r.length&&!d&&p&&setTimeout(g,0)},[r,h,u,o,f,m,function(){d||(n(8,d=!0),setTimeout((()=>n(8,d=!1)),150));const{scrollTop:t,scrollHeight:e,clientHeight:i}=o;n(9,p=t+i>=e-5)},c,d,p,i,a,s,t=>m(t),()=>n(4,f=!1),function(t){I[t?"unshift":"push"]((()=>{o=t,n(3,o)}))}]}class ld extends rt{constructor(t){super(),it(this,t,od,id,a,{})}}function cd(t){let e,n;return{c(){e=f("p"),n=m(t[2]),y(e,"class","error svelte-1mgi5im")},m(t,i){u(t,e,i),h(e,n)},p(t,e){4&e&&b(n,t[2])},d(t){t&&d(e)}}}function hd(t){let e,n;return{c(){e=f("p"),n=m(t[3]),y(e,"class","success svelte-1mgi5im")},m(t,i){u(t,e,i),h(e,n)},p(t,e){8&e&&b(n,t[3])},d(t){t&&d(e)}}}function ud(e){let n,r,a,s,o,l,c,p,m,_,x,b,S,E,T,w,A,C,R,P,L,D,U=e[2]&&cd(e),I=e[3]&&hd(e);return{c(){n=f("div"),r=f("h2"),r.textContent="Login",a=g(),s=f("form"),o=f("div"),l=f("input"),c=g(),p=f("div"),m=f("input"),_=g(),x=f("div"),b=f("button"),b.textContent="Login",S=g(),E=f("button"),E.textContent="Register",T=g(),w=f("div"),w.innerHTML='<span class="svelte-1mgi5im">or</span>',A=g(),C=f("button"),C.innerHTML='<img src="/eve-sso-login-b.png" alt="Log in with EVE Online" width="270" height="45"/>',R=g(),U&&U.c(),P=g(),I&&I.c(),y(l,"type","text"),y(l,"placeholder","Username"),l.required=!0,y(l,"class","svelte-1mgi5im"),y(o,"class","form-group svelte-1mgi5im"),y(m,"type","password"),y(m,"placeholder","Password"),m.required=!0,y(m,"class","svelte-1mgi5im"),y(p,"class","form-group svelte-1mgi5im"),y(b,"type","submit"),y(b,"class","svelte-1mgi5im"),y(E,"type","button"),y(E,"class","svelte-1mgi5im"),y(x,"class","button-group svelte-1mgi5im"),y(w,"class","divider svelte-1mgi5im"),y(C,"class","eve-login-btn svelte-1mgi5im"),y(n,"class","login-container svelte-1mgi5im")},m(t,i){var d;u(t,n,i),h(n,r),h(n,a),h(n,s),h(s,o),h(o,l),M(l,e[0]),h(s,c),h(s,p),h(p,m),M(m,e[1]),h(s,_),h(s,x),h(x,b),h(x,S),h(x,E),h(n,T),h(n,w),h(n,A),h(n,C),h(n,R),U&&U.m(n,null),h(n,P),I&&I.m(n,null),L||(D=[v(l,"input",e[7]),v(m,"input",e[8]),v(E,"click",e[5]),v(s,"submit",(d=e[4],function(t){return t.preventDefault(),d.call(this,t)})),v(C,"click",e[6])],L=!0)},p(t,[e]){1&e&&l.value!==t[0]&&M(l,t[0]),2&e&&m.value!==t[1]&&M(m,t[1]),t[2]?U?U.p(t,e):(U=cd(t),U.c(),U.m(n,P)):U&&(U.d(1),U=null),t[3]?I?I.p(t,e):(I=hd(t),I.c(),I.m(n,null)):I&&(I.d(1),I=null)},i:t,o:t,d(t){t&&d(n),U&&U.d(),I&&I.d(),L=!1,i(D)}}}function dd(t,e,n){let i="",r="",a="",s="";const o=["publicData","esi-location.read_location.v1","esi-bookmarks.read_character_bookmarks.v1","esi-fleets.read_fleet.v1","esi-ui.write_waypoint.v1"],l=D();async function c(){try{const t=await fetch("/api/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:i,password:r}),credentials:"include"}),e=await t.json();e.success?(l("login",{type:"credentials",username:i}),n(3,s="Login successful!"),n(2,a="")):(n(2,a=e.message),n(3,s=""))}catch(t){n(2,a="Login failed"),console.error("Login error:",t)}}return P((()=>{const t=new URLSearchParams(window.location.search);if("true"===t.get("authenticated"))l("login",{type:"eve"}),n(3,s="Successfully logged in with EVE Online!"),window.history.replaceState({},document.title,"/");else if("error"===t.get("login")){const e=t.get("reason");n(2,a=function(t){switch(t){case"invalid_state":return"Invalid authentication state";case"invalid_token":return"Invalid EVE Online token";case"invalid_character":return"Unable to get character data";case"database_error":return"Database error occurred";case"session_error":return"Session error occurred";case"sso_error":return"EVE SSO authentication failed";default:return"Failed to login with EVE Online"}}(e)),window.history.replaceState({},document.title,"/")}})),[i,r,a,s,c,async function(){const t=await fetch("/api/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:i,password:r})}),e=await t.json();e.success?(n(3,s="Registration successful! Logging in..."),n(2,a=""),c()):(n(2,a=e.message),n(3,s=""))},async function(){try{const t=await fetch("/api/eve-sso-config"),{clientId:e,callbackUrl:n}=await t.json(),i=Math.random().toString(36).substring(2);await fetch("/api/eve-sso/state",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({state:i})});const r=new URLSearchParams({response_type:"code",redirect_uri:n||"http://localhost:3000/callback/",client_id:e,scope:o.join(" "),state:i});window.location.href=`https://login.eveonline.com/v2/oauth/authorize/?${r.toString()}`}catch(t){n(2,a="Failed to initialize EVE login"),console.error("EVE login error:",t)}},function(){i=this.value,n(0,i)},function(){r=this.value,n(1,r)}]}class pd extends rt{constructor(t){super(),it(this,t,dd,ud,a,{})}}function fd(e){let n,r,a,s,o,l,c,p,_,x,S;return{c(){n=f("div"),r=f("div"),a=f("label"),s=m("Minimum Pilots Involved: "),o=m(e[0]),l=g(),c=f("input"),p=g(),_=f("canvas"),y(c,"type","range"),y(c,"min","2"),y(c,"max","20"),y(c,"step","1"),y(c,"class","svelte-a4u9nx"),y(a,"class","svelte-a4u9nx"),y(r,"class","controls svelte-a4u9nx"),y(_,"class","svelte-a4u9nx"),y(n,"class","active-battles svelte-a4u9nx")},m(t,i){u(t,n,i),h(n,r),h(r,a),h(a,s),h(a,o),h(a,l),h(a,c),M(c,e[0]),h(n,p),h(n,_),e[5](_),x||(S=[v(c,"change",e[4]),v(c,"input",e[4]),v(_,"click",e[2])],x=!0)},p(t,[e]){1&e&&b(o,t[0]),1&e&&M(c,t[0])},i:t,o:t,d(t){t&&d(n),e[5](null),x=!1,i(S)}}}function md(t,e,n){let i;l(t,Ue,(t=>n(3,i=t)));let r,a,s,o=2,c=new Map;class h{constructor(t){if(!t)throw new Error("Battle data is required for Bubble construction");this.battle=t,this.id=t.battleId||`${t.systemId}-${t.kills[0]?.killmail_id}`,this.x=r?.width?r.width/2:0,this.y=r?.height?r.height/2:0,this.vx=.1*(Math.random()-.5),this.vy=.1*(Math.random()-.5),this.lastValue=t.totalValue,this.currentValue=t.totalValue,this.targetSize=this.calculateSize(),this.currentSize=0,this.flashTime=Date.now(),this.needsPositioning=!0}update(t){this.currentSize+=.1*(this.targetSize-this.currentSize),t.forEach((t=>{if(t===this)return;const e=t.x-this.x,n=t.y-this.y,i=Math.sqrt(e*e+n*n),r=1.2*(this.currentSize+t.currentSize);if(i<r){const a=Math.atan2(n,e),s=.2*(r-i),o=Math.cos(a)*s,l=Math.sin(a)*s,c=Math.min(2,r/(i+1));this.vx-=o*c,this.vy-=l*c,t.vx+=o*c,t.vy+=l*c}}));const e=this.currentSize,n=.1;this.x<e&&(this.vx+=n),this.x>r.width-e&&(this.vx-=n),this.y<e&&(this.vy+=n),this.y>r.height-e&&(this.vy-=n),this.x+=this.vx,this.y+=this.vy,this.vx*=.95,this.vy*=.95;const i=r.width/2,a=r.height/2;this.vx+=.001*(i-this.x),this.vy+=.001*(a-this.y)}calculateSize(){const t=20*Math.log10(this.battle.involvedCount+1),e=3*Math.log10(this.battle.totalValue+1);return Math.max(40,t+e)}calculateSize(){const t=30+15*Math.log10(this.battle.involvedCount+1)+10*Math.log10(Math.max(1,this.battle.totalValue/1e6));return Math.min(Math.max(30,t),120)}calculateTimeBasedColor(){const t=((new Date).getTime()-new Date(this.battle.lastKill).getTime())/3e5;return{r:Math.min(255,Math.floor(255*(.5+.5*t))),g:Math.max(0,Math.floor(255*(1-t))),b:0}}draw(t){const e=this.calculateTimeBasedColor(),n=t.createRadialGradient(this.x-.3*this.currentSize,this.y-.3*this.currentSize,0,this.x,this.y,this.currentSize);n.addColorStop(0,`rgba(${e.r}, ${e.g}, ${e.b}, 0.9)`),n.addColorStop(1,`rgba(${Math.floor(.8*e.r)}, ${Math.floor(.8*e.g)}, ${e.b}, 0.7)`),t.beginPath(),t.arc(this.x,this.y,this.currentSize,0,2*Math.PI),t.fillStyle=n,t.fill();const i=t.createRadialGradient(this.x,this.y,.8*this.currentSize,this.x,this.y,1.2*this.currentSize);i.addColorStop(0,`rgba(${e.r}, ${e.g}, ${e.b}, 0.2)`),i.addColorStop(1,"rgba(0, 0, 0, 0)"),t.beginPath(),t.arc(this.x,this.y,1.2*this.currentSize,0,2*Math.PI),t.fillStyle=i,t.fill(),t.font=`${Math.max(14,this.currentSize/5)}px Arial`,t.fillStyle="white",t.textAlign="center",t.textBaseline="middle";const r=this.currentSize/3,a=this.battle.kills[0]?.pinpoints?.celestialData?.solarsystemname||this.battle.systemId;t.fillText(a,this.x,this.y-r),t.fillText(`${this.battle.involvedCount} pilots`,this.x,this.y),t.fillText(`${function(t){return t>=1e9?(t/1e9).toFixed(0)+"B":t>=1e6?(t/1e6).toFixed(0)+"M":(t/1e3).toFixed(0)+"K"}(this.battle.totalValue)} ISK`,this.x,this.y+r)}containsPoint(t,e){const n=this.x-t,i=this.y-e;return Math.sqrt(n*n+i*i)<=this.currentSize}}function u(){r&&a&&(a.clearRect(0,0,r.width,r.height),c.forEach((t=>{t.needsPositioning&&r&&(t.x=r.width/2,t.y=r.height/2,t.needsPositioning=!1),t.update(c),t.draw(a)})),s=requestAnimationFrame(u))}function d(){r&&(n(1,r.width=r.clientWidth,r),n(1,r.height=r.clientHeight,r),c.forEach((t=>{t.x=r.width/2,t.y=r.height/2})))}return P((()=>{r&&(a=r.getContext("2d"),n(1,r.width=r.clientWidth,r),n(1,r.height=r.clientHeight,r),c.forEach((t=>{t.x=r.width/2,t.y=r.height/2,t.needsPositioning=!1})),u()),window.addEventListener("resize",d),s=requestAnimationFrame(u)})),L((()=>{window.removeEventListener("resize",d),s&&cancelAnimationFrame(s)})),t.$$.update=()=>{if(11&t.$$.dirty){const t=i.filter((t=>t.involvedCount>=o));r&&c.forEach((t=>{t.needsPositioning&&(t.x=r.width/2,t.y=r.height/2,t.needsPositioning=!1)})),t.forEach((t=>{t.id||(t.id=`${t.systemId}-${t.kills[0].killmail_id}`)})),c.forEach(((e,n)=>{t.find((t=>t.id===n))||c.delete(n)})),t.forEach((t=>{if(c.has(t.id)){const e=c.get(t.id);e.battle=t,e.targetSize=e.calculateSize(),t.totalValue>e.lastValue&&(e.flashTime=Date.now()),e.lastValue=e.currentValue,e.currentValue=t.totalValue}else c.set(t.id,new h(t))}))}},[o,r,function(t){if(!r)return;const e=r.getBoundingClientRect(),n=t.clientX-e.left,i=t.clientY-e.top,a=n*(r.width/e.width),s=i*(r.height/e.height);for(let t of c.values())if(t.containsPoint(a,s)){const e=t.battle.kills.sort(((t,e)=>new Date(e.killmail.killmail_time)-new Date(t.killmail.killmail_time)))[0];e?.killID&&window.open(`https://zkillboard.com/kill/${e.killID}/`,"_blank");break}},i,function(){o=x(this.value),n(0,o)},function(t){I[t?"unshift":"push"]((()=>{r=t,n(1,r)}))}]}class gd extends rt{constructor(t){super(),it(this,t,md,fd,a,{})}}const _d=Ae([]),vd=Ae([]),yd=Ce([vd],(([t])=>t.filter((t=>t.kills.filter((t=>670!==t.killmail.victim.ship_type_id)).length>=2&&t.probability>=30)).map((t=>({...t,composition:t.composition||bd,lastKillTime:new Date(t.lastKill).getTime(),age:Date.now()-new Date(t.lastKill).getTime(),isActive:Date.now()-new Date(t.lastKill).getTime()<=36e5}))).sort(((t,e)=>e.probability-t.probability)))),xd=Ce([_d,vd],(([t,e])=>{if(!Array.isArray(t))return[];const n=new Set;return e.forEach((t=>{t.probability>=60&&(t.originalAttackers?.forEach((t=>n.add(t))),t.activeAttackers?.forEach((t=>n.add(t))))})),t.map((t=>({...t,members:Array.isArray(t.members)?t.members.filter((t=>!n.has(t))):[],systems:Array.isArray(t.systems)?t.systems:[],kills:Array.isArray(t.kills)?t.kills:[],totalValue:t.totalValue||0,lastActivity:t.lastActivity||(new Date).toISOString(),lastSystem:t.lastSystem||{id:0,name:"Unknown"},startTime:t.startTime||t.lastActivity||(new Date).toISOString()}))).filter((t=>t.members.length>=2&&t.systems.length>0&&Date.now()-new Date(t.lastActivity).getTime()<=18e5)).sort(((t,e)=>new Date(e.lastActivity)-new Date(t.lastActivity)))})),bd={originalCount:0,activeCount:0,killedCount:0},Md={BASE:{SINGLE_KILL:.15,MULTI_KILL:.3,INITIAL_BURST:-.1},TIME_WEIGHTS:{ESTABLISHED:{threshold:60,bonus:.2},SUSTAINED:{threshold:120,bonus:.3},FATIGUE:{threshold:180,penalty:-.2},INACTIVITY:{start:25,penalty:-.15}},THREAT_SHIPS:{3756:{weight:.15},11202:{weight:.03},11196:{weight:.11},11176:{weight:.04},11184:{weight:.03},11186:{weight:.08},11200:{weight:.03},11178:{weight:.04},29988:{weight:.35},20125:{weight:.2},17722:{weight:.2},22456:{weight:.5},22464:{weight:.44},22452:{weight:.44},22460:{weight:.44},12013:{weight:.4},12017:{weight:.4},12021:{weight:.4},12025:{weight:.4},29984:{weight:.15},29990:{weight:.29},11174:{weight:.3},35683:{weight:.13},11969:{weight:.3},11961:{weight:.3},11957:{weight:.04},29986:{weight:.09},47466:{weight:.06},12038:{weight:.05},12034:{weight:.05},17720:{weight:.12},11963:{weight:.16},12044:{weight:.08},17922:{weight:.18},11999:{weight:.06},85086:{weight:.04},33818:{weight:.03},11971:{weight:.22},4310:{weight:.01},17738:{weight:.01},11387:{weight:.03}},SHIP_CATEGORIES:{INDUSTRIAL:"industrial",MINING:"mining",CONCORD:"concord",NPC:"npc"},PERMANENT_CAMPS:{30002813:{gates:["Nourvukaiken","Kedama"],weight:.36},30003068:{gates:["Miroitem","Crielere"],weight:.25},30000142:{gates:["Perimeter"],weight:.15},30002647:{gates:["Iyen-Oursta"],weight:.25}},CONSISTENCY:{SAME_CHARS:.25,SAME_CORPS:.15,TIME_WINDOW:18e5}};function Sd(t){return t.originalAttackers&&t.originalAttackers instanceof Set||(t.originalAttackers=new Set(Array.isArray(t.originalAttackers)?t.originalAttackers:[])),t.activeAttackers&&t.activeAttackers instanceof Set||(t.activeAttackers=new Set(Array.isArray(t.activeAttackers)?t.activeAttackers:[])),t.killedAttackers&&t.killedAttackers instanceof Set||(t.killedAttackers=new Set(Array.isArray(t.killedAttackers)?t.killedAttackers:[])),t}ze.on("initialCamps",(t=>{vd.set(t.map((t=>Sd(t))).map((t=>({...t}))))})),ze.on("campUpdate",(t=>{vd.set(t.map((t=>Sd(t))).map((t=>({...t}))))})),ze.on("initialRoams",(t=>{const e=t.map((t=>({...t,id:t.id,members:Array.isArray(t.members)?Array.from(t.members):[],systems:Array.isArray(t.systems)?[...t.systems]:[],kills:Array.isArray(t.kills)?[...t.kills]:[],totalValue:t.totalValue||0,lastActivity:t.lastActivity||(new Date).toISOString(),lastSystem:t.lastSystem||{id:0,name:"Unknown"},startTime:t.startTime||t.lastActivity||(new Date).toISOString()})));_d.set(e)})),ze.on("roamUpdate",(t=>{console.log("Received roam update via socket:",t);const e=t.map((t=>({...t,id:t.id,members:Array.isArray(t.members)?Array.from(t.members):[],systems:Array.isArray(t.systems)?[...t.systems]:[],kills:Array.isArray(t.kills)?[...t.kills]:[],totalValue:t.totalValue||0,lastActivity:t.lastActivity||(new Date).toISOString(),lastSystem:t.lastSystem||{id:0,name:"Unknown"},startTime:t.startTime||t.lastActivity||(new Date).toISOString()})));_d.set(e)}));const Ed=Ae(null),Td=Ae(null);let wd,Ad=null;async function Cd(t){try{console.log("Attempting to refresh token");const e=await fetch("/api/refresh-token",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({refresh_token:t})});if(!e.ok)throw new Error("Failed to refresh token");const n=await e.json();return console.log("Token refresh successful"),n}catch(t){throw console.error("Token refresh failed:",t),t}}async function Rd(){try{const t=await fetch("/api/session",{credentials:"include"});if(!t.ok)throw new Error("Failed to get session data");const{user:e}=await t.json();console.log("Starting location poll...");const n=Math.floor(Date.now()/1e3);if(e.token_expiry&&n>=e.token_expiry){console.log("Token expired, refreshing...");let t=3;for(;t>0;)try{const t=await Cd(e.refresh_token);e.access_token=t.access_token,e.token_expiry=t.token_expiry,console.log("Token refreshed successfully");break}catch(e){if(console.error(`Token refresh attempt failed (${t} remaining):`,e),t--,0===t)throw new Error("Failed to refresh token after multiple attempts");await new Promise((t=>setTimeout(t,1e3)))}}let i=await fetch(`https://esi.evetech.net/latest/characters/${e.character_id}/location/`,{headers:{Authorization:`Bearer ${e.access_token}`}});if(!i.ok)throw new Error(`EVE API request failed: ${i.status}`);const r=await i.json();if(console.log("Current system:",r.solar_system_id,"Last system:",Ad),r.solar_system_id!==Ad){console.log("System change detected!");const t=await fetch(`/api/celestials/system/${r.solar_system_id}`);if(!t.ok)throw new Error("Failed to fetch system data");const e=await t.json(),n=e[0]?.solarsystemname||"Unknown System",i=await async function(t,e){let n=[];const i=yd.subscribe((t=>n=t));try{const i=e.filter((t=>t.typename?.includes("Stargate"))).map((t=>({destination:{system_name:t.itemname.match(/\(([^)]+)\)/)[1],system_id:t.destinationid}})));console.log("Found stargates:",i);const r=n.filter((e=>e.systemId===t)),a=n.filter((t=>{const e=t.kills[0]?.pinpoints?.celestialData?.solarsystemname;return i.some((t=>{const n=e?.toLowerCase()===t.destination.system_name.toLowerCase();return console.log("Checking system connection:",{gateDestination:t.destination.system_name.toLowerCase(),campSystem:e?.toLowerCase(),matches:n}),n}))}));return console.log("Connected camps found:",a),{current:r,connected:a}}finally{i()}}(r.solar_system_id,e);if(i.current.length>0||i.connected.length>0){let t="";if(i.current.length>0)t=`Camp detected at: ${i.current.map((t=>t.stargateName)).join(", ")}`;else if(i.connected.length>0){const e=i.connected.map((t=>{const e=t.kills[0]?.pinpoints?.celestialData?.solarsystemname,n=t.stargateName.match(/\(([^)]+)\)/)?.[1]||t.stargateName;return e?`${e} (${n} gate, ${Math.round(t.probability)}% confidence)`:null})).filter(Boolean);t=`Active camps in connected systems: ${e.join(", ")}`}if(t){const e=`System change. Your current system is ${n}. ${t}`;console.log("About to speak:",e),setTimeout((()=>{console.log("Attempting speech..."),window.speechSynthesis.cancel();const t=new SpeechSynthesisUtterance(e);window.speechSynthesis.speak(t),console.log("Speech attempt completed")}),100)}}Ed.set({solar_system_id:r.solar_system_id,systemName:n,camps:i}),Ad=r.solar_system_id}}catch(t){if(console.error("Location polling error:",t),Td.set(t.message),t.message.includes("token"))return;Pd()}}function Pd(){wd&&(clearInterval(wd),wd=null),Ed.set(null),Ad=null}function Ld(e){let n;return{c(){n=m("Tracking Disabled")},m(t,e){u(t,n,e)},p:t,d(t){t&&d(n)}}}function Dd(t){let e,n,i=(t[2]||"Active")+"";return{c(){e=m("Tracking: "),n=m(i)},m(t,i){u(t,e,i),u(t,n,i)},p(t,e){4&e&&i!==(i=(t[2]||"Active")+"")&&b(n,i)},d(t){t&&(d(e),d(n))}}}function Ud(t){let e,n,i,r,a,s,o,l=t[1].systemName+"",c=kd(t[1].camps)+"";return{c(){e=f("div"),n=f("p"),i=m("Current System: "),r=m(l),a=g(),s=f("p"),o=m(c),y(n,"class","system-name svelte-lyfa1l"),y(s,"class","camp-status"),y(e,"class","system-info svelte-lyfa1l")},m(t,l){u(t,e,l),h(e,n),h(n,i),h(n,r),h(e,a),h(e,s),h(s,o)},p(t,e){2&e&&l!==(l=t[1].systemName+"")&&b(r,l),2&e&&c!==(c=kd(t[1].camps)+"")&&b(o,c)},d(t){t&&d(e)}}}function Id(t){let e,n;return{c(){e=f("p"),n=m(t[3]),y(e,"class","error svelte-lyfa1l")},m(t,i){u(t,e,i),h(e,n)},p(t,e){8&e&&b(n,t[3])},d(t){t&&d(e)}}}function Nd(e){let n,i,r,a,s,o,l,c,p,m,_,x,b,M;function S(t,e){return t[0]?Dd:Ld}let E=S(e),T=E(e),w=e[1]&&Ud(e),A=e[3]&&Id(e);return{c(){n=f("div"),i=f("div"),r=f("label"),a=f("input"),s=g(),o=f("span"),l=g(),c=f("span"),c.textContent="Track Location",p=g(),m=f("span"),T.c(),_=g(),w&&w.c(),x=g(),A&&A.c(),y(a,"type","checkbox"),a.checked=e[0],y(a,"class","svelte-lyfa1l"),y(o,"class","slider svelte-lyfa1l"),y(c,"class","label-text svelte-lyfa1l"),y(r,"class","toggle svelte-lyfa1l"),y(m,"class","tracking-status svelte-lyfa1l"),y(i,"class","tracker-header svelte-lyfa1l"),y(n,"class","location-tracker svelte-lyfa1l")},m(t,d){u(t,n,d),h(n,i),h(i,r),h(r,a),h(r,s),h(r,o),h(r,l),h(r,c),h(i,p),h(i,m),T.m(m,null),h(n,_),w&&w.m(n,null),h(n,x),A&&A.m(n,null),b||(M=v(a,"change",e[4]),b=!0)},p(t,[e]){1&e&&(a.checked=t[0]),E===(E=S(t))&&T?T.p(t,e):(T.d(1),T=E(t),T&&(T.c(),T.m(m,null))),t[1]?w?w.p(t,e):(w=Ud(t),w.c(),w.m(n,x)):w&&(w.d(1),w=null),t[3]?A?A.p(t,e):(A=Id(t),A.c(),A.m(n,null)):A&&(A.d(1),A=null)},i:t,o:t,d(t){t&&d(n),T.d(),w&&w.d(),A&&A.d(),b=!1,M()}}}function kd(t){if(!t)return"No camp data available";if(t.current.length>0)return`Warning! Active camps in your current system at: ${t.current.map((t=>t.stargateName)).join(", ")}`;if(t.connected.length>0){return`Warning! Active camps in connected systems: ${t.connected.map((t=>{const e=t.kills[0]?.pinpoints?.celestialData?.solarsystemname,n=t.stargateName.match(/\(([^)]+)\)/)?.[1]||t.stargateName;return e?`${e} (${n} gate, ${Math.round(t.probability)}% confidence)`:null})).filter(Boolean).join(", ")}`}return"There are no active camps in your current system or direct system connections. Cleared to jump."}function Od(t,e,n){let i,r;l(t,Ed,(t=>n(1,i=t))),l(t,Td,(t=>n(3,r=t)));let a=null,s=!1,o=null,c=null;function h(t){if(!window.speechSynthesis)return void console.error("Speech synthesis not supported");const e=new SpeechSynthesisUtterance(t);a&&(e.voice=a,e.rate=.9,e.pitch=1.1),window.speechSynthesis.cancel(),window.speechSynthesis.speak(e)}return P((()=>{window.speechSynthesis.onvoiceschanged=()=>{const t=window.speechSynthesis.getVoices();a=t.find((t=>t.name.includes("Microsoft Hazel")))||t.find((t=>t.lang.includes("en-GB")))}})),L((()=>{s&&Pd()})),t.$$.update=()=>{35&t.$$.dirty&&i&&s&&c!==i.solar_system_id&&(h(`System change. Your current system is ${i.systemName}. ${kd(i.camps)}`),n(5,c=i.solar_system_id))},[s,i,o,r,async function(){try{if(s)Pd(),n(0,s=!1),n(2,o=null),n(5,c=null);else{if(await async function(){try{console.log("Starting location polling...");const t=await fetch("/api/session",{credentials:"include",headers:{Accept:"application/json","Content-Type":"application/json"}});if(console.log("Session response status:",t.status),!t.ok){const e=await t.json();throw console.error("Session verification failed:",e),new Error("Session verification failed")}const{user:e}=await t.json();if(console.log("Session user data:",e),!e?.character_id||!e?.access_token)throw console.error("Missing required user data:",e),new Error("No authenticated character - Please log in with EVE Online");return await Rd(),wd=setInterval(Rd,2e4),!0}catch(t){return console.error("Location polling start error:",t),Td.set(t.message),!1}}()){n(0,s=!0);const t=JSON.parse(sessionStorage.getItem("user"));if(n(2,o=t?.character_name),i){const t=kd(i.camps);h(`Tracking enabled for: ${o}. Your current system is ${i.systemName}. ${t}`),n(5,c=null)}}}}catch(t){console.error("Error toggling tracking:",t)}},c]}class Fd extends rt{constructor(t){super(),it(this,t,Od,Nd,a,{})}}function Bd(t,e,n){const i=t.slice();return i[14]=e[n],i[16]=n,i}function zd(t,e,n){const i=t.slice();return i[17]=e[n],i}function Hd(t){let e;function n(t,e){return t[5]?Vd:Gd}let i=n(t),r=i(t);return{c(){r.c(),e=_()},m(t,n){r.m(t,n),u(t,e,n)},p(t,a){i===(i=n(t))&&r?r.p(t,a):(r.d(1),r=i(t),r&&(r.c(),r.m(e.parentNode,e)))},d(t){t&&d(e),r.d(t)}}}function Vd(t){let e,n,i,r,a,s,o,l,c,_,v,x,M,S,E;function T(t,e){return t[1]?jd:Wd}let w=T(t),A=w(t),C=K(t[4]),R=[];for(let e=0;e<C.length;e+=1)R[e]=Jd(Bd(t,C,e));return{c(){e=f("div"),n=f("div"),i=f("h3"),r=m("Your Bashbucks: "),a=m(t[3]),s=g(),o=f("p"),l=m("Playing as: "),c=m(t[5]),_=g(),A.c(),v=g(),x=f("div"),M=f("h4"),M.textContent="Top Crushers",S=g(),E=f("div");for(let t=0;t<R.length;t+=1)R[t].c();y(n,"class","game-header"),y(E,"class","leaderboard-entries"),y(x,"class","leaderboard svelte-9q4bue"),y(e,"class","game-ui svelte-9q4bue")},m(t,d){u(t,e,d),h(e,n),h(n,i),h(i,r),h(i,a),h(n,s),h(n,o),h(o,l),h(o,c),h(n,_),A.m(n,null),h(e,v),h(e,x),h(x,M),h(x,S),h(x,E);for(let t=0;t<R.length;t+=1)R[t]&&R[t].m(E,null)},p(t,e){if(8&e&&b(a,t[3]),32&e&&b(c,t[5]),w===(w=T(t))&&A?A.p(t,e):(A.d(1),A=w(t),A&&(A.c(),A.m(n,null))),16&e){let n;for(C=K(t[4]),n=0;n<C.length;n+=1){const i=Bd(t,C,n);R[n]?R[n].p(i,e):(R[n]=Jd(i),R[n].c(),R[n].m(E,null))}for(;n<R.length;n+=1)R[n].d(1);R.length=C.length}},d(t){t&&d(e),A.d(),p(R,t)}}}function Gd(e){let n;return{c(){n=f("div"),n.textContent="Please log in with EVE Online to play Camp Crushers!",y(n,"class","auth-warning svelte-9q4bue")},m(t,e){u(t,n,e)},p:t,d(t){t&&d(n)}}}function Wd(t){let e,n,i,r=K(t[6]),a=[];for(let e=0;e<r.length;e+=1)a[e]=Xd(zd(t,r,e));return{c(){e=f("div"),n=f("h4"),n.textContent="Select a Camp to Crush:",i=g();for(let t=0;t<a.length;t+=1)a[t].c();y(e,"class","camp-selection")},m(t,r){u(t,e,r),h(e,n),h(e,i);for(let t=0;t<a.length;t+=1)a[t]&&a[t].m(e,null)},p(t,n){if(192&n){let i;for(r=K(t[6]),i=0;i<r.length;i+=1){const s=zd(t,r,i);a[i]?a[i].p(s,n):(a[i]=Xd(s),a[i].c(),a[i].m(e,null))}for(;i<a.length;i+=1)a[i].d(1);a.length=r.length}},d(t){t&&d(e),p(a,t)}}}function jd(t){let e,n,i,r,a,s,o=t[1].stargateName+"",l=t[2]&&qd(t);return{c(){e=f("div"),n=f("h4"),n.textContent="Current Target:",i=g(),r=f("p"),a=m(o),s=g(),l&&l.c(),y(e,"class","active-target")},m(t,o){u(t,e,o),h(e,n),h(e,i),h(e,r),h(r,a),h(e,s),l&&l.m(e,null)},p(t,n){2&n&&o!==(o=t[1].stargateName+"")&&b(a,o),t[2]?l?l.p(t,n):(l=qd(t),l.c(),l.m(e,null)):l&&(l.d(1),l=null)},d(t){t&&d(e),l&&l.d()}}}function Xd(t){let e,n,i,r,a,s,o,l=t[17].stargateName+"",c=t[17].kills.length+"";function p(){return t[9](t[17])}return{c(){e=f("button"),n=m(l),i=m(" ("),r=m(c),a=m(" kills)\r\n                "),y(e,"class","camp-option svelte-9q4bue")},m(t,l){u(t,e,l),h(e,n),h(e,i),h(e,r),h(e,a),s||(o=v(e,"click",p),s=!0)},p(e,i){t=e,64&i&&l!==(l=t[17].stargateName+"")&&b(n,l),64&i&&c!==(c=t[17].kills.length+"")&&b(r,c)},d(t){t&&d(e),s=!1,o()}}}function qd(t){let e,n,i,r=tp(t[2])+"";return{c(){e=f("p"),n=m("Time remaining: "),i=m(r),y(e,"class","countdown svelte-9q4bue")},m(t,r){u(t,e,r),h(e,n),h(e,i)},p(t,e){4&e&&r!==(r=tp(t[2])+"")&&b(i,r)},d(t){t&&d(e)}}}function $d(t){let e,n,i=t[16]+1+"";return{c(){e=m(i),n=m(".")},m(t,i){u(t,e,i),u(t,n,i)},d(t){t&&(d(e),d(n))}}}function Yd(t){let e;return{c(){e=m("🥉")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function Kd(t){let e;return{c(){e=m("🥈")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function Zd(t){let e;return{c(){e=m("🥇")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function Jd(t){let e,n,i,r,a,s,o,l,c,p=t[14].character_name+"",_=t[14].bashbucks+"";let v=function(t){return 0===t[16]?Zd:1===t[16]?Kd:2===t[16]?Yd:$d}(t),x=v(t);return{c(){e=f("div"),n=f("span"),x.c(),i=g(),r=f("span"),a=m(p),s=g(),o=f("span"),l=m(_),c=g(),y(n,"class","rank svelte-9q4bue"),y(r,"class","name svelte-9q4bue"),y(o,"class","score svelte-9q4bue"),y(e,"class","leaderboard-entry svelte-9q4bue")},m(t,d){u(t,e,d),h(e,n),x.m(n,null),h(e,i),h(e,r),h(r,a),h(e,s),h(e,o),h(o,l),h(e,c)},p(t,e){16&e&&p!==(p=t[14].character_name+"")&&b(a,p),16&e&&_!==(_=t[14].bashbucks+"")&&b(l,_)},d(t){t&&d(e),x.d()}}}function Qd(e){let n,i,r,a,s,o=e[0]&&Hd(e);return{c(){n=f("div"),i=f("button"),i.textContent="PLAY CAMPCRUSHERS",r=g(),o&&o.c(),y(i,"class","easter-egg svelte-9q4bue"),y(n,"class","camp-crusher svelte-9q4bue")},m(t,l){u(t,n,l),h(n,i),h(n,r),o&&o.m(n,null),a||(s=v(i,"click",e[8]),a=!0)},p(t,[e]){t[0]?o?o.p(t,e):(o=Hd(t),o.c(),o.m(n,null)):o&&(o.d(1),o=null)},i:t,o:t,d(t){t&&d(n),o&&o.d(),a=!1,s()}}}function tp(t){return`${Math.floor(t/6e4)}m ${Math.floor(t%6e4/1e3)}s`}function ep(t,e,n){let i;l(t,vd,(t=>n(6,i=t)));let r=!1,a=null,s=null,o=null,c=0,h=[],u=null;async function d(){const t=await fetch("/api/campcrushers/leaderboard",{credentials:"include"});n(4,h=await t.json())}function p(t){n(3,c=t.newTotal),d()}async function f(t){const e=await fetch("/api/campcrushers/target",{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({campId:t.id})}),i=await e.json();i.success?(n(1,a=t),function(t){s&&clearInterval(s);s=setInterval((()=>{const e=(new Date).getTime(),i=new Date(t).getTime()-e;i<=0?(clearInterval(s),n(1,a=null),n(2,o=null)):n(2,o=i)}),1e3)}(new Date(i.endTime))):alert(i.error||"Failed to select target")}P((async()=>{const t=await fetch("/api/session",{credentials:"include"}),e=await t.json();n(5,u=e.user?.character_name),await d(),ze.on("bashbucksAwarded",p)})),L((()=>{s&&clearInterval(s),ze.off("bashbucksAwarded",p)}));return[r,a,o,c,h,u,i,f,()=>n(0,r=!r),t=>f(t)]}class np extends rt{constructor(t){super(),it(this,t,ep,Qd,a,{})}}function ip(t,e,n){const i=t.slice();return i[4]=e[n],i}function rp(t,e,n){const i=t.slice();return i[7]=e[n][0],i[8]=e[n][1],i}function ap(t){let e;return{c(){e=f("span"),e.textContent="⚡",y(e,"class","camp-type smartbomb svelte-9hgu7y"),y(e,"title","Smartbomb Camp")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function sp(t){let e,n,i=Math.floor(t[4].metrics.campDuration)+"";return{c(){e=m(i),n=m("m active")},m(t,i){u(t,e,i),u(t,n,i)},p(t,n){1&n&&i!==(i=Math.floor(t[4].metrics.campDuration)+"")&&b(e,i)},d(t){t&&(d(e),d(n))}}}function op(t){let e,n,i,r=t[4].metrics.podKills+"";return{c(){e=m("("),n=m(r),i=m(" pods)")},m(t,r){u(t,e,r),u(t,n,r),u(t,i,r)},p(t,e){1&e&&r!==(r=t[4].metrics.podKills+"")&&b(n,r)},d(t){t&&(d(e),d(n),d(i))}}}function lp(t){let e;return{c(){e=f("span"),e.textContent="⚠️",y(e,"class","interdictor-badge svelte-9hgu7y"),y(e,"title","Interdictor/HICTOR present")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function cp(e){let n;return{c(){n=m("Computing...")},m(t,e){u(t,n,e)},p:t,d(t){t&&d(n)}}}function hp(t){let e,n,i,r,a,s=t[4].composition.activeCount+"",o=t[4].composition.originalCount+"",l=t[4].composition.killedCount>0&&dp(t);return{c(){e=m(s),n=m("/"),i=m(o),r=m(" active\r\n                "),l&&l.c(),a=_()},m(t,s){u(t,e,s),u(t,n,s),u(t,i,s),u(t,r,s),l&&l.m(t,s),u(t,a,s)},p(t,n){1&n&&s!==(s=t[4].composition.activeCount+"")&&b(e,s),1&n&&o!==(o=t[4].composition.originalCount+"")&&b(i,o),t[4].composition.killedCount>0?l?l.p(t,n):(l=dp(t),l.c(),l.m(a.parentNode,a)):l&&(l.d(1),l=null)},d(t){t&&(d(e),d(n),d(i),d(r),d(a)),l&&l.d(t)}}}function up(t){let e,n,i,r=t[4].metrics.partyMetrics.characters+"",a=t[4].metrics.partyMetrics.corporations>0&&pp(t);return{c(){e=m(r),n=m(" pilots\r\n                "),a&&a.c(),i=_()},m(t,r){u(t,e,r),u(t,n,r),a&&a.m(t,r),u(t,i,r)},p(t,n){1&n&&r!==(r=t[4].metrics.partyMetrics.characters+"")&&b(e,r),t[4].metrics.partyMetrics.corporations>0?a?a.p(t,n):(a=pp(t),a.c(),a.m(i.parentNode,i)):a&&(a.d(1),a=null)},d(t){t&&(d(e),d(n),d(i)),a&&a.d(t)}}}function dp(t){let e,n,i,r,a=t[4].composition.killedCount+"";return{c(){e=f("span"),n=m("(-"),i=m(a),r=m(")"),y(e,"class","killed-count svelte-9hgu7y")},m(t,a){u(t,e,a),h(e,n),h(e,i),h(e,r)},p(t,e){1&e&&a!==(a=t[4].composition.killedCount+"")&&b(i,a)},d(t){t&&d(e)}}}function pp(t){let e,n,i,r,a=t[4].metrics.partyMetrics.corporations+"",s=t[4].metrics.partyMetrics.alliances>0&&fp(t);return{c(){e=m("from "),n=m(a),i=m(" corps\r\n                  "),s&&s.c(),r=_()},m(t,a){u(t,e,a),u(t,n,a),u(t,i,a),s&&s.m(t,a),u(t,r,a)},p(t,e){1&e&&a!==(a=t[4].metrics.partyMetrics.corporations+"")&&b(n,a),t[4].metrics.partyMetrics.alliances>0?s?s.p(t,e):(s=fp(t),s.c(),s.m(r.parentNode,r)):s&&(s.d(1),s=null)},d(t){t&&(d(e),d(n),d(i),d(r)),s&&s.d(t)}}}function fp(t){let e,n,i,r=t[4].metrics.partyMetrics.alliances+"";return{c(){e=m("in "),n=m(r),i=m(" alliances")},m(t,r){u(t,e,r),u(t,n,r),u(t,i,r)},p(t,e){1&e&&r!==(r=t[4].metrics.partyMetrics.alliances+"")&&b(n,r)},d(t){t&&(d(e),d(n),d(i))}}}function mp(t){let e,n,i=K(Object.entries(t[4].metrics.shipCounts)),r=[];for(let e=0;e<i.length;e+=1)r[e]=_p(rp(t,i,e));return{c(){e=f("div"),n=f("div");for(let t=0;t<r.length;t+=1)r[t].c();y(n,"class","threat-ships svelte-9hgu7y"),y(e,"class","ship-composition svelte-9hgu7y")},m(t,i){u(t,e,i),h(e,n);for(let t=0;t<r.length;t+=1)r[t]&&r[t].m(n,null)},p(t,e){if(3&e){let a;for(i=K(Object.entries(t[4].metrics.shipCounts)),a=0;a<i.length;a+=1){const s=rp(t,i,a);r[a]?r[a].p(s,e):(r[a]=_p(s),r[a].c(),r[a].m(n,null))}for(;a<r.length;a+=1)r[a].d(1);r.length=i.length}},d(t){t&&d(e),p(r,t)}}}function gp(t){let e,n,i,r,a=Tp(t[1][t[7]].category)+"";return{c(){e=f("span"),n=m(a),i=g(),y(e,"class","ship-indicator svelte-9hgu7y"),S(e,"background-color",wp(t[1][t[7]].weight)),y(e,"title",r="Threat Ship x"+t[8])},m(t,r){u(t,e,r),h(e,n),h(e,i)},p(t,i){1&i&&a!==(a=Tp(t[1][t[7]].category)+"")&&b(n,a),1&i&&S(e,"background-color",wp(t[1][t[7]].weight)),1&i&&r!==(r="Threat Ship x"+t[8])&&y(e,"title",r)},d(t){t&&d(e)}}}function _p(t){let e,n=t[1][t[7]]&&gp(t);return{c(){n&&n.c(),e=_()},m(t,i){n&&n.m(t,i),u(t,e,i)},p(t,i){t[1][t[7]]?n?n.p(t,i):(n=gp(t),n.c(),n.m(e.parentNode,e)):n&&(n.d(1),n=null)},d(t){t&&d(e),n&&n.d(t)}}}function vp(t){let e;return{c(){e=f("div"),e.textContent="CRASHED",y(e,"class","crashed-banner svelte-9hgu7y")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function yp(t){let e,n,i,r,a,s,o,l,c,p,_,x,M,E,T,w,A,C,R,P,L,D,U,I,N,k,O,F,B,z,H,V,G,W,j,X,q,$,Y,K,Z,J,Q,tt,et,nt,it,rt,at,st,ot,lt,ct,ht=t[4].stargateName+"",ut=Math.round(t[4].probability)+"",dt=(t[4].kills[0]?.pinpoints?.celestialData?.solarsystemname||t[4].systemId)+"",pt=t[4].kills.length+"",ft=Ap(t[4].kills),mt=Mp(t[4].totalValue)+"",gt=Sp(t[4].lastKill)+"",_t="smartbomb"===t[4].type&&ap(),vt=t[4].metrics?.campDuration&&sp(t),yt=t[4].metrics?.podKills>0&&op(t),xt=ft&&lp();function bt(t,e){return t[4].metrics?.partyMetrics?up:t[4].composition?hp:cp}let Mt=bt(t),St=Mt(t),Et=t[4].metrics?.shipCounts&&mp(t),Tt="CRASHED"===t[4].state&&vp();function wt(){return t[3](t[4])}return{c(){e=f("button"),n=f("div"),i=f("h3"),r=m(ht),a=g(),s=f("div"),_t&&_t.c(),o=g(),l=f("span"),c=m(ut),p=m("% Confidence"),_=g(),x=f("div"),M=f("div"),E=f("span"),E.textContent="System:",T=g(),w=f("span"),A=m(dt),C=g(),R=f("div"),P=f("span"),P.textContent="Duration:",L=g(),D=f("span"),vt&&vt.c(),U=g(),I=f("div"),N=f("span"),N.textContent="Activity:",k=g(),O=f("span"),F=m(pt),B=m(" kills\r\n              "),yt&&yt.c(),z=g(),xt&&xt.c(),H=g(),V=f("div"),G=f("span"),G.textContent="Value:",W=g(),j=f("span"),X=m(mt),q=m(" ISK"),$=g(),Y=f("div"),K=f("span"),K.textContent="Composition:",Z=g(),J=f("span"),St.c(),Q=g(),Et&&Et.c(),tt=g(),Tt&&Tt.c(),et=g(),nt=f("div"),it=f("span"),it.textContent="Last Activity:",rt=g(),at=f("span"),st=m(gt),y(i,"class","svelte-9hgu7y"),y(l,"class","probability svelte-9hgu7y"),S(l,"background-color",Ep(t[4].probability)),y(s,"class","camp-indicators svelte-9hgu7y"),y(n,"class","camp-header svelte-9hgu7y"),y(E,"class","stat-label svelte-9hgu7y"),y(w,"class","stat-value"),y(M,"class","stat-row svelte-9hgu7y"),y(P,"class","stat-label svelte-9hgu7y"),y(D,"class","stat-value"),y(R,"class","stat-row svelte-9hgu7y"),y(N,"class","stat-label svelte-9hgu7y"),y(O,"class","stat-value"),y(I,"class","stat-row svelte-9hgu7y"),y(G,"class","stat-label svelte-9hgu7y"),y(j,"class","stat-value value svelte-9hgu7y"),y(V,"class","stat-row svelte-9hgu7y"),y(K,"class","stat-label svelte-9hgu7y"),y(J,"class","stat-value"),y(Y,"class","stat-row svelte-9hgu7y"),y(it,"class","stat-label svelte-9hgu7y"),y(at,"class","stat-value time svelte-9hgu7y"),y(nt,"class","stat-row svelte-9hgu7y"),y(x,"class","camp-stats svelte-9hgu7y"),y(e,"class","camp-card svelte-9hgu7y"),y(e,"type","button"),y(e,"data-state",ot=t[4].state),S(e,"border-color",Ep(t[4].probability))},m(t,d){u(t,e,d),h(e,n),h(n,i),h(i,r),h(n,a),h(n,s),_t&&_t.m(s,null),h(s,o),h(s,l),h(l,c),h(l,p),h(e,_),h(e,x),h(x,M),h(M,E),h(M,T),h(M,w),h(w,A),h(x,C),h(x,R),h(R,P),h(R,L),h(R,D),vt&&vt.m(D,null),h(x,U),h(x,I),h(I,N),h(I,k),h(I,O),h(O,F),h(O,B),yt&&yt.m(O,null),h(O,z),xt&&xt.m(O,null),h(x,H),h(x,V),h(V,G),h(V,W),h(V,j),h(j,X),h(j,q),h(x,$),h(x,Y),h(Y,K),h(Y,Z),h(Y,J),St.m(J,null),h(x,Q),Et&&Et.m(x,null),h(x,tt),Tt&&Tt.m(x,null),h(x,et),h(x,nt),h(nt,it),h(nt,rt),h(nt,at),h(at,st),lt||(ct=v(e,"click",wt),lt=!0)},p(n,i){t=n,1&i&&ht!==(ht=t[4].stargateName+"")&&b(r,ht),"smartbomb"===t[4].type?_t||(_t=ap(),_t.c(),_t.m(s,o)):_t&&(_t.d(1),_t=null),1&i&&ut!==(ut=Math.round(t[4].probability)+"")&&b(c,ut),1&i&&S(l,"background-color",Ep(t[4].probability)),1&i&&dt!==(dt=(t[4].kills[0]?.pinpoints?.celestialData?.solarsystemname||t[4].systemId)+"")&&b(A,dt),t[4].metrics?.campDuration?vt?vt.p(t,i):(vt=sp(t),vt.c(),vt.m(D,null)):vt&&(vt.d(1),vt=null),1&i&&pt!==(pt=t[4].kills.length+"")&&b(F,pt),t[4].metrics?.podKills>0?yt?yt.p(t,i):(yt=op(t),yt.c(),yt.m(O,z)):yt&&(yt.d(1),yt=null),1&i&&(ft=Ap(t[4].kills)),ft?xt||(xt=lp(),xt.c(),xt.m(O,null)):xt&&(xt.d(1),xt=null),1&i&&mt!==(mt=Mp(t[4].totalValue)+"")&&b(X,mt),Mt===(Mt=bt(t))&&St?St.p(t,i):(St.d(1),St=Mt(t),St&&(St.c(),St.m(J,null))),t[4].metrics?.shipCounts?Et?Et.p(t,i):(Et=mp(t),Et.c(),Et.m(x,tt)):Et&&(Et.d(1),Et=null),"CRASHED"===t[4].state?Tt||(Tt=vp(),Tt.c(),Tt.m(x,et)):Tt&&(Tt.d(1),Tt=null),1&i&&gt!==(gt=Sp(t[4].lastKill)+"")&&b(st,gt),1&i&&ot!==(ot=t[4].state)&&y(e,"data-state",ot),1&i&&S(e,"border-color",Ep(t[4].probability))},d(t){t&&d(e),_t&&_t.d(),vt&&vt.d(),yt&&yt.d(),xt&&xt.d(),St.d(),Et&&Et.d(),Tt&&Tt.d(),lt=!1,ct()}}}function xp(t){let e;return{c(){e=f("p"),e.textContent="No active gate camps detected",y(e,"class","no-camps svelte-9hgu7y")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function bp(t){let e,n,i,r,a,s,o,l,c,m,_;n=new np({}),o=new Fd({});let v=K(t[0]),x=[];for(let e=0;e<v.length;e+=1)x[e]=yp(ip(t,v,e));let b=0===t[0].length&&xp();return{c(){e=f("div"),Q(n.$$.fragment),i=g(),r=f("div"),a=f("h2"),a.textContent="Active Gate Camps",s=g(),Q(o.$$.fragment),l=g(),c=f("div");for(let t=0;t<x.length;t+=1)x[t].c();m=g(),b&&b.c(),y(a,"class","svelte-9hgu7y"),y(r,"class","header svelte-9hgu7y"),y(c,"class","camp-grid svelte-9hgu7y"),y(e,"class","active-camps svelte-9hgu7y")},m(t,d){u(t,e,d),tt(n,e,null),h(e,i),h(e,r),h(r,a),h(r,s),tt(o,r,null),h(e,l),h(e,c);for(let t=0;t<x.length;t+=1)x[t]&&x[t].m(c,null);h(c,m),b&&b.m(c,null),_=!0},p(t,[e]){if(3&e){let n;for(v=K(t[0]),n=0;n<v.length;n+=1){const i=ip(t,v,n);x[n]?x[n].p(i,e):(x[n]=yp(i),x[n].c(),x[n].m(c,m))}for(;n<x.length;n+=1)x[n].d(1);x.length=v.length}0===t[0].length?b||(b=xp(),b.c(),b.m(c,null)):b&&(b.d(1),b=null)},i(t){_||($(n.$$.fragment,t),$(o.$$.fragment,t),_=!0)},o(t){Y(n.$$.fragment,t),Y(o.$$.fragment,t),_=!1},d(t){t&&d(e),et(n),et(o),p(x,t),b&&b.d()}}}function Mp(t){return t>=1e9?(t/1e9).toFixed(2)+"B":t>=1e6?(t/1e6).toFixed(2)+"M":(t/1e3).toFixed(2)+"K"}function Sp(t){const e=(new Date).getTime(),n=new Date(t).getTime(),i=Math.floor((e-n)/6e4);return i<1?"just now":1===i?"1 minute ago":`${i} minutes ago`}function Ep(t){return t>=80?"#ff4444":t>=60?"#ff8c00":t>=40?"#ffd700":"#90ee90"}function Tp(t){return{dictor:"🔲",hic:"⬛",ewar:"📡",tackle:"🔗",dps:"⚔️",smartbomb:"⚡"}[t]||"🚀"}function wp(t){return t>=40?"#ff4444":t>=30?"#ff8c00":t>=20?"#ffd700":"#90ee90"}function Ap(t){return t.some((t=>t.killmail.attackers.some((t=>t.ship_type_id&&[22456,22464,22452,22460,12013,12017,12021,12025].includes(t.ship_type_id)))))}function Cp(t,e,n){let i;l(t,yd,(t=>n(2,i=t)));const{THREAT_SHIPS:r}=Md;let a=[];return t.$$.update=()=>{4&t.$$.dirty&&n(0,a=i)},[a,r,i,t=>{const e=t.kills[t.kills.length-1];if(e){const n=new Date(e.killmail.killmail_time),i=`${n.getUTCFullYear()}${String(n.getUTCMonth()+1).padStart(2,"0")}${String(n.getUTCDate()).padStart(2,"0")}${String(n.getUTCHours()).padStart(2,"0")}${String(n.getUTCMinutes()).padStart(2,"0")}`;window.open(`https://zkillboard.com/related/${t.systemId}/${i}/`,"_blank")}}]}class Rp extends rt{constructor(t){super(),it(this,t,Cp,bp,a,{})}}const{Map:Pp}=c;function Lp(t,e,n){const i=t.slice();return i[2]=e[n],i}function Dp(t,e,n){const i=t.slice();return i[5]=e[n],i}function Up(t){let e,n,i,r,a,s,o=t[5].name+"",l=Fp(t[5].time)+"";return{c(){e=f("div"),n=f("span"),i=m(o),r=g(),a=f("span"),s=m(l),y(n,"class","system-name svelte-j2848l"),y(a,"class","system-time svelte-j2848l"),y(e,"class","system-entry svelte-j2848l")},m(t,o){u(t,e,o),h(e,n),h(n,i),h(e,r),h(e,a),h(a,s)},p(t,e){1&e&&o!==(o=t[5].name+"")&&b(i,o),1&e&&l!==(l=Fp(t[5].time)+"")&&b(s,l)},d(t){t&&d(e)}}}function Ip(t,e){let n,i,r,a,s,o,l,c,_,x,M,E,T,w,A,C,R,P,L,D,U,I,N,k,O,F,B,z,H,V,G,W,j,X,q,$,Y,Z,J,Q,tt,et,nt,it,rt,at,st=zp(e[2])+"",ot=Bp(e[2])+"",lt=Hp(e[2])+"",ct=(e[2].lastSystem?.name||"Unknown")+"",ht=Bp(e[2])+"",ut=(e[2].kills?.length||0)+"",dt=Op(e[2].totalValue)+"",pt=K(Vp(e[2].systems)),ft=[];for(let t=0;t<pt.length;t+=1)ft[t]=Up(Dp(e,pt,t));function mt(){return e[1](e[2])}return{key:t,first:null,c(){n=f("button"),i=f("div"),r=f("h3"),a=m(st),s=m(" Pilots"),o=g(),l=f("div"),c=f("span"),_=m(ot),x=m(" Systems"),M=g(),E=f("span"),T=m("Roaming: "),w=m(lt),A=g(),C=f("div"),R=f("div"),P=f("span"),P.textContent="Current System:",L=g(),D=f("span"),U=m(ct),I=g(),N=f("div"),k=f("span"),k.textContent="Systems Visited:",O=g(),F=f("span"),B=m(ht),z=g(),H=f("div"),V=f("span"),V.textContent="Kills:",G=g(),W=f("span"),j=m(ut),X=g(),q=f("div"),$=f("span"),$.textContent="Total Value:",Y=g(),Z=f("span"),J=m(dt),Q=g(),tt=f("div"),et=f("h4"),et.textContent="Recent Systems:",nt=g(),it=f("div");for(let t=0;t<ft.length;t+=1)ft[t].c();y(r,"class","svelte-j2848l"),y(c,"class","probability svelte-j2848l"),S(c,"background-color",Gp(e[2])),y(E,"class","roam-duration svelte-j2848l"),y(l,"class","roam-indicators svelte-j2848l"),y(i,"class","roam-header svelte-j2848l"),y(P,"class","stat-label svelte-j2848l"),y(D,"class","stat-value svelte-j2848l"),y(R,"class","stat-row svelte-j2848l"),y(k,"class","stat-label svelte-j2848l"),y(F,"class","stat-value svelte-j2848l"),y(N,"class","stat-row svelte-j2848l"),y(V,"class","stat-label svelte-j2848l"),y(W,"class","stat-value svelte-j2848l"),y(H,"class","stat-row svelte-j2848l"),y($,"class","stat-label svelte-j2848l"),y(Z,"class","stat-value value svelte-j2848l"),y(q,"class","stat-row svelte-j2848l"),y(C,"class","roam-stats svelte-j2848l"),y(et,"class","svelte-j2848l"),y(it,"class","system-list svelte-j2848l"),y(tt,"class","system-history svelte-j2848l"),y(n,"class","roam-card svelte-j2848l"),y(n,"type","button"),S(n,"border-color",Gp(e[2])),this.first=n},m(t,e){u(t,n,e),h(n,i),h(i,r),h(r,a),h(r,s),h(i,o),h(i,l),h(l,c),h(c,_),h(c,x),h(l,M),h(l,E),h(E,T),h(E,w),h(n,A),h(n,C),h(C,R),h(R,P),h(R,L),h(R,D),h(D,U),h(C,I),h(C,N),h(N,k),h(N,O),h(N,F),h(F,B),h(C,z),h(C,H),h(H,V),h(H,G),h(H,W),h(W,j),h(C,X),h(C,q),h(q,$),h(q,Y),h(q,Z),h(Z,J),h(n,Q),h(n,tt),h(tt,et),h(tt,nt),h(tt,it);for(let t=0;t<ft.length;t+=1)ft[t]&&ft[t].m(it,null);rt||(at=v(n,"click",mt),rt=!0)},p(t,i){if(e=t,1&i&&st!==(st=zp(e[2])+"")&&b(a,st),1&i&&ot!==(ot=Bp(e[2])+"")&&b(_,ot),1&i&&S(c,"background-color",Gp(e[2])),1&i&&lt!==(lt=Hp(e[2])+"")&&b(w,lt),1&i&&ct!==(ct=(e[2].lastSystem?.name||"Unknown")+"")&&b(U,ct),1&i&&ht!==(ht=Bp(e[2])+"")&&b(B,ht),1&i&&ut!==(ut=(e[2].kills?.length||0)+"")&&b(j,ut),1&i&&dt!==(dt=Op(e[2].totalValue)+"")&&b(J,dt),1&i){let t;for(pt=K(Vp(e[2].systems)),t=0;t<pt.length;t+=1){const n=Dp(e,pt,t);ft[t]?ft[t].p(n,i):(ft[t]=Up(n),ft[t].c(),ft[t].m(it,null))}for(;t<ft.length;t+=1)ft[t].d(1);ft.length=pt.length}1&i&&S(n,"border-color",Gp(e[2]))},d(t){t&&d(n),p(ft,t),rt=!1,at()}}}function Np(t){let e;return{c(){e=f("p"),e.textContent="No active roaming gangs detected",y(e,"class","no-roams svelte-j2848l")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function kp(e){let n,i,r,a,s,o=[],l=new Pp,c=K(e[0]);const p=t=>t[2].id;for(let t=0;t<c.length;t+=1){let n=Lp(e,c,t),i=p(n);l.set(i,o[t]=Ip(i,n))}let m=0===e[0].length&&Np();return{c(){n=f("div"),i=f("h2"),i.textContent="Active Gangs",r=g(),a=f("div");for(let t=0;t<o.length;t+=1)o[t].c();s=g(),m&&m.c(),y(i,"class","svelte-j2848l"),y(a,"class","roam-grid svelte-j2848l"),y(n,"class","active-roams svelte-j2848l")},m(t,e){u(t,n,e),h(n,i),h(n,r),h(n,a);for(let t=0;t<o.length;t+=1)o[t]&&o[t].m(a,null);h(a,s),m&&m.m(a,null)},p(t,[e]){1&e&&(c=K(t[0]),o=J(o,e,p,1,t,c,l,a,Z,Ip,s,Lp)),0===t[0].length?m||(m=Np(),m.c(),m.m(a,null)):m&&(m.d(1),m=null)},i:t,o:t,d(t){t&&d(n);for(let t=0;t<o.length;t+=1)o[t].d();m&&m.d()}}}function Op(t){return t?t>=1e9?(t/1e9).toFixed(2)+"B":t>=1e6?(t/1e6).toFixed(2)+"M":(t/1e3).toFixed(2)+"K":"0 ISK"}function Fp(t){if(!t)return"unknown";const e=Math.floor((Date.now()-new Date(t).getTime())/6e4);return e<1?"just now":1===e?"1 minute ago":`${e} minutes ago`}function Bp(t){return t.systems?new Set(t.systems.map((t=>t.id))).size:0}function zp(t){return t.members?.length||0}function Hp(t){if(!t.kills||0===t.kills.length)return"unknown";const e=t.kills.reduce(((t,e)=>{const n=new Date(e.killmail.killmail_time).getTime();return n<t?n:t}),new Date(t.kills[0].killmail.killmail_time).getTime()),n=Math.floor((Date.now()-e)/6e4);return n<1?"just started":1===n?"1 minute":`${n} minutes`}function Vp(t){if(!t||!Array.isArray(t))return[];const e=new Map;return t.forEach((t=>{const n=e.get(t.name);(!n||new Date(t.time)>new Date(n.time))&&e.set(t.name,t)})),Array.from(e.values()).sort(((t,e)=>new Date(e.time).getTime()-new Date(t.time).getTime())).slice(0,3).reverse()}function Gp(t){const e=Bp(t),n=zp(t);return e>10||n>20?"#ff4444":e>5||n>10?"#ff8c00":e>2||n>5?"#ffd700":"#90ee90"}function Wp(t,e,n){let i;l(t,xd,(t=>n(0,i=t)));return t.$$.update=()=>{1&t.$$.dirty&&console.log("Filtered roams:",i),1&t.$$.dirty&&(console.log("ActiveRoams component state:"),console.log("Filtered roams:",i),console.log("Number of roams:",i.length),i.length>0&&console.log("Sample roam data:",i[0]))},[i,t=>{const e=t.kills[t.kills.length-1];if(e){const n=new Date(e.killmail.killmail_time),i=`${n.getUTCFullYear()}${String(n.getUTCMonth()+1).padStart(2,"0")}${String(n.getUTCDate()).padStart(2,"0")}${String(n.getUTCHours()).padStart(2,"0")}${String(n.getUTCMinutes()).padStart(2,"0")}`;window.open(`https://zkillboard.com/related/${t.lastSystem.id}/${i}/`,"_blank")}}]}class jp extends rt{constructor(t){super(),it(this,t,Wp,kp,a,{})}}function Xp(t,e,n){const i=t.slice();return i[3]=e[n].character_name,i[4]=e[n].bashbucks,i[6]=n,i}function qp(t){let e,n,i,r=K(t[0]),a=[];for(let e=0;e<r.length;e+=1)a[e]=tf(Xp(t,r,e));return{c(){e=f("div"),n=f("div"),n.innerHTML='<span class="rank svelte-15dxtka">Rank</span> <span class="character svelte-15dxtka">Character</span> <span class="bashbucks svelte-15dxtka">Bashbucks</span>',i=g();for(let t=0;t<a.length;t+=1)a[t].c();y(n,"class","leaderboard-header svelte-15dxtka"),y(e,"class","leaderboard svelte-15dxtka")},m(t,r){u(t,e,r),h(e,n),h(e,i);for(let t=0;t<a.length;t+=1)a[t]&&a[t].m(e,null)},p(t,n){if(1&n){let i;for(r=K(t[0]),i=0;i<r.length;i+=1){const s=Xp(t,r,i);a[i]?a[i].p(s,n):(a[i]=tf(s),a[i].c(),a[i].m(e,null))}for(;i<a.length;i+=1)a[i].d(1);a.length=r.length}},d(t){t&&d(e),p(a,t)}}}function $p(t){let e,n;return{c(){e=f("div"),n=m(t[2]),y(e,"class","error svelte-15dxtka")},m(t,i){u(t,e,i),h(e,n)},p(t,e){4&e&&b(n,t[2])},d(t){t&&d(e)}}}function Yp(e){let n;return{c(){n=f("div"),n.textContent="Loading leaderboard data...",y(n,"class","loading svelte-15dxtka")},m(t,e){u(t,n,e)},p:t,d(t){t&&d(n)}}}function Kp(t){let e,n=t[6]+1+"";return{c(){e=m(n)},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function Zp(t){let e;return{c(){e=f("span"),e.textContent="🥉",y(e,"class","trophy bronze svelte-15dxtka")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function Jp(t){let e;return{c(){e=f("span"),e.textContent="🥈",y(e,"class","trophy silver svelte-15dxtka")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function Qp(t){let e;return{c(){e=f("span"),e.textContent="🏆",y(e,"class","trophy gold svelte-15dxtka")},m(t,n){u(t,e,n)},d(t){t&&d(e)}}}function tf(t){let e,n,i,r,a,s,o,l,c,p=t[3]+"",_=nf(t[4])+"";let v=function(t){return 0===t[6]?Qp:1===t[6]?Jp:2===t[6]?Zp:Kp}(t),x=v(t);return{c(){e=f("div"),n=f("span"),x.c(),i=g(),r=f("span"),a=m(p),s=g(),o=f("span"),l=m(_),c=g(),y(n,"class","rank svelte-15dxtka"),y(r,"class","character svelte-15dxtka"),y(o,"class","bashbucks svelte-15dxtka"),y(e,"class","leaderboard-entry svelte-15dxtka"),w(e,"podium",t[6]<3)},m(t,d){u(t,e,d),h(e,n),x.m(n,null),h(e,i),h(e,r),h(r,a),h(e,s),h(e,o),h(o,l),h(e,c)},p(t,e){1&e&&p!==(p=t[3]+"")&&b(a,p),1&e&&_!==(_=nf(t[4])+"")&&b(l,_)},d(t){t&&d(e),x.d()}}}function ef(e){let n,i,r;function a(t,e){return t[1]?Yp:t[2]?$p:qp}let s=a(e),o=s(e);return{c(){n=f("div"),i=f("h1"),i.textContent="CampCrushers Leaderboard",r=g(),o.c(),y(i,"class","svelte-15dxtka"),y(n,"class","leaderboard-container svelte-15dxtka")},m(t,e){u(t,n,e),h(n,i),h(n,r),o.m(n,null)},p(t,[e]){s===(s=a(t))&&o?o.p(t,e):(o.d(1),o=s(t),o&&(o.c(),o.m(n,null)))},i:t,o:t,d(t){t&&d(n),o.d()}}}function nf(t){return(new Intl.NumberFormat).format(t)}function rf(t,e,n){let i=[],r=!0,a=null;return P((async()=>{try{const t=await fetch("/api/campcrushers/leaderboard",{credentials:"include"});if(!t.ok)throw new Error("Failed to fetch leaderboard data");n(0,i=await t.json()),n(1,r=!1)}catch(t){console.error("Error fetching leaderboard:",t),n(2,a="Failed to load leaderboard data"),n(1,r=!1)}})),[i,r,a]}class af extends rt{constructor(t){super(),it(this,t,rf,ef,a,{})}}function sf(t){let e,n,r,a,s,o,l,c,p,m,x,b,M,S,E,T,A;const C=[df,uf,hf,cf,lf],R=[];function P(t,e){return"kills"===t[3]?0:"battles"===t[3]?1:"camps"===t[3]?2:"gangs"===t[3]?3:"bountyboard"===t[3]?4:-1}return~(b=P(t))&&(M=R[b]=C[b](t)),{c(){e=f("div"),n=f("button"),n.textContent="Kills",r=g(),a=f("button"),a.textContent="Active Battles",s=g(),o=f("button"),o.textContent="Gate Camps",l=g(),c=f("button"),c.textContent="Gangs Map",p=g(),m=f("button"),m.textContent="Bountyboard",x=g(),M&&M.c(),S=_(),y(n,"class","svelte-d6m7ck"),w(n,"active","kills"===t[3]),y(a,"class","svelte-d6m7ck"),w(a,"active","battles"===t[3]),y(o,"class","svelte-d6m7ck"),w(o,"active","camps"===t[3]),y(c,"class","svelte-d6m7ck"),w(c,"active","gangs"===t[3]),y(m,"class","svelte-d6m7ck"),w(m,"active","bountyboard"===t[3]),y(e,"class","nav-tabs svelte-d6m7ck")},m(i,d){u(i,e,d),h(e,n),h(e,r),h(e,a),h(e,s),h(e,o),h(e,l),h(e,c),h(e,p),h(e,m),u(i,x,d),~b&&R[b].m(i,d),u(i,S,d),E=!0,T||(A=[v(n,"click",t[10]),v(a,"click",t[11]),v(o,"click",t[12]),v(c,"click",t[13]),v(m,"click",t[14])],T=!0)},p(t,e){(!E||8&e)&&w(n,"active","kills"===t[3]),(!E||8&e)&&w(a,"active","battles"===t[3]),(!E||8&e)&&w(o,"active","camps"===t[3]),(!E||8&e)&&w(c,"active","gangs"===t[3]),(!E||8&e)&&w(m,"active","bountyboard"===t[3]);let i=b;b=P(t),b===i?~b&&R[b].p(t,e):(M&&(X(),Y(R[i],1,1,(()=>{R[i]=null})),q()),~b?(M=R[b],M?M.p(t,e):(M=R[b]=C[b](t),M.c()),$(M,1),M.m(S.parentNode,S)):M=null)},i(t){E||($(M),E=!0)},o(t){Y(M),E=!1},d(t){t&&(d(e),d(x),d(S)),~b&&R[b].d(t),T=!1,i(A)}}}function of(e){let n,i;return n=new pd({}),n.$on("login",e[4]),{c(){Q(n.$$.fragment)},m(t,e){tt(n,t,e),i=!0},p:t,i(t){i||($(n.$$.fragment,t),i=!0)},o(t){Y(n.$$.fragment,t),i=!1},d(t){et(n,t)}}}function lf(e){let n,i;return n=new af({}),{c(){Q(n.$$.fragment)},m(t,e){tt(n,t,e),i=!0},p:t,i(t){i||($(n.$$.fragment,t),i=!0)},o(t){Y(n.$$.fragment,t),i=!1},d(t){et(n,t)}}}function cf(e){let n,i;return n=new jp({}),{c(){Q(n.$$.fragment)},m(t,e){tt(n,t,e),i=!0},p:t,i(t){i||($(n.$$.fragment,t),i=!0)},o(t){Y(n.$$.fragment,t),i=!1},d(t){et(n,t)}}}function hf(e){let n,i;return n=new Rp({}),{c(){Q(n.$$.fragment)},m(t,e){tt(n,t,e),i=!0},p:t,i(t){i||($(n.$$.fragment,t),i=!0)},o(t){Y(n.$$.fragment,t),i=!1},d(t){et(n,t)}}}function uf(e){let n,i;return n=new gd({}),{c(){Q(n.$$.fragment)},m(t,e){tt(n,t,e),i=!0},p:t,i(t){i||($(n.$$.fragment,t),i=!0)},o(t){Y(n.$$.fragment,t),i=!1},d(t){et(n,t)}}}function df(t){let e,n,i,r,a,s,o,l,c,p,m;return i=new ln({props:{socket:ze}}),t[15](i),s=new ld({}),{c(){e=f("div"),n=f("div"),Q(i.$$.fragment),r=g(),a=f("div"),Q(s.$$.fragment),o=g(),l=f("button"),l.textContent="Clear All Kills",y(n,"class","settings-section svelte-d6m7ck"),y(a,"class","killmail-section svelte-d6m7ck"),y(e,"class","dashboard svelte-d6m7ck")},m(d,f){u(d,e,f),h(e,n),tt(i,n,null),h(e,r),h(e,a),tt(s,a,null),h(a,o),h(a,l),c=!0,p||(m=v(l,"click",t[16]),p=!0)},p(t,e){i.$set({})},i(t){c||($(i.$$.fragment,t),$(s.$$.fragment,t),c=!0)},o(t){Y(i.$$.fragment,t),Y(s.$$.fragment,t),c=!1},d(n){n&&d(e),t[15](null),et(i),et(s),p=!1,m()}}}function pf(t){let e,n,i,r;const a=[of,sf],s=[];function o(t,e){return t[1]?1:0}return n=o(t),i=s[n]=a[n](t),{c(){e=f("main"),i.c(),y(e,"class","svelte-d6m7ck")},m(t,i){u(t,e,i),s[n].m(e,null),r=!0},p(t,[r]){let l=n;n=o(t),n===l?s[n].p(t,r):(X(),Y(s[l],1,1,(()=>{s[l]=null})),q(),i=s[n],i?i.p(t,r):(i=s[n]=a[n](t),i.c()),$(i,1),i.m(e,null))},i(t){r||($(i),r=!0)},o(t){Y(i),r=!1},d(t){t&&d(e),s[n].d()}}}function ff(t,e,n){let i,r,a,s,o;l(t,ke,(t=>n(6,r=t))),l(t,Ne,(t=>n(7,a=t))),l(t,Ie,(t=>n(8,s=t))),l(t,Fe,(t=>n(9,o=t)));let c,h=!1,u="",d="kills";function p(){Ie.set([])}P((()=>(console.log("App.svelte - onMount"),ze.on("connect",(()=>{console.log("App.svelte - Connected to server")})),ze.on("disconnect",(()=>{console.log("App.svelte - Disconnected from server")})),ze.on("initialData",(t=>{try{console.log("App.svelte - Received initialData:",t);const e=function(t){try{const e="string"==typeof t?JSON.parse(t):t;return{...Oe,...e,location_types:{...Oe.location_types,...e?.location_types||{}},combat_labels:{...Oe.combat_labels,...e?.combat_labels||{}}}}catch(t){return console.error("Error initializing settings:",t),Oe}}(t.settings);Fe.set(e),Ie.set([]),Ne.set(t.filterLists||[]),ke.set(t.profiles||[]),console.log("App.svelte - Stores initialized")}catch(t){console.error("Error initializing data:",t),Fe.set(DEFAULT_SETTINGS),Ie.set([]),Ne.set([]),ke.set([])}})),()=>{ze.off("connect"),ze.off("disconnect"),ze.off("initialData")})));return t.$$.update=()=>{t.$$.dirty,t.$$.dirty,t.$$.dirty,64&t.$$.dirty&&n(5,i=r),32&t.$$.dirty&&console.log("App.svelte - userProfiles updated:",i)},[p,h,c,d,function(t){"credentials"===t.detail.type?(u=t.detail.username,n(1,h=!0),ze.emit("login",{username:u,password:t.detail.password})):"eve"===t.detail.type&&n(1,h=!0)},i,r,a,s,o,()=>n(3,d="kills"),()=>n(3,d="battles"),()=>n(3,d="camps"),()=>n(3,d="gangs"),()=>n(3,d="bountyboard"),function(t){I[t?"unshift":"push"]((()=>{c=t,n(2,c)}))},()=>{ze.emit("clearKills"),p()}]}return new class extends rt{constructor(t){super(),it(this,t,ff,pf,a,{clearKills:0})}get clearKills(){return this.$$.ctx[0]}}({target:document.body})}();
//# sourceMappingURL=bundle.js.map
